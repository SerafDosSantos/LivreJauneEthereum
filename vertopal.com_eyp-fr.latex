% Options for packages loaded elsewhere
\PassOptionsToPackage{unicode}{hyperref}
\PassOptionsToPackage{hyphens}{url}
%
\documentclass[
]{article}
\usepackage{amsmath,amssymb}
\usepackage{lmodern}
\usepackage{iftex}
\ifPDFTeX
  \usepackage[T1]{fontenc}
  \usepackage[utf8]{inputenc}
  \usepackage{textcomp} % provide euro and other symbols
\else % if luatex or xetex
  \usepackage{unicode-math}
  \defaultfontfeatures{Scale=MatchLowercase}
  \defaultfontfeatures[\rmfamily]{Ligatures=TeX,Scale=1}
\fi
% Use upquote if available, for straight quotes in verbatim environments
\IfFileExists{upquote.sty}{\usepackage{upquote}}{}
\IfFileExists{microtype.sty}{% use microtype if available
  \usepackage[]{microtype}
  \UseMicrotypeSet[protrusion]{basicmath} % disable protrusion for tt fonts
}{}
\makeatletter
\@ifundefined{KOMAClassName}{% if non-KOMA class
  \IfFileExists{parskip.sty}{%
    \usepackage{parskip}
  }{% else
    \setlength{\parindent}{0pt}
    \setlength{\parskip}{6pt plus 2pt minus 1pt}}
}{% if KOMA class
  \KOMAoptions{parskip=half}}
\makeatother
\usepackage{xcolor}
\IfFileExists{xurl.sty}{\usepackage{xurl}}{} % add URL line breaks if available
\IfFileExists{bookmark.sty}{\usepackage{bookmark}}{\usepackage{hyperref}}
\hypersetup{
  hidelinks,
  pdfcreator={LaTeX via pandoc}}
\urlstyle{same} % disable monospaced font for URLs
\usepackage{longtable,booktabs,array}
\usepackage{calc} % for calculating minipage widths
% Correct order of tables after \paragraph or \subparagraph
\usepackage{etoolbox}
\makeatletter
\patchcmd\longtable{\par}{\if@noskipsec\mbox{}\fi\par}{}{}
\makeatother
% Allow footnotes in longtable head/foot
\IfFileExists{footnotehyper.sty}{\usepackage{footnotehyper}}{\usepackage{footnote}}
\makesavenoteenv{longtable}
\setlength{\emergencystretch}{3em} % prevent overfull lines
\providecommand{\tightlist}{%
  \setlength{\itemsep}{0pt}\setlength{\parskip}{0pt}}
\setcounter{secnumdepth}{-\maxdimen} % remove section numbering
\ifLuaTeX
  \usepackage{selnolig}  % disable illegal ligatures
\fi

\author{}
\date{}

\begin{document}

\hypertarget{uxe9therum-un-suxe9curise-duxe9centralisuxe9-guxe9nuxe9ralisuxe9-transaction-registre}{%
\section{ÉTHERUM~: UN SÉCURISE DÉCENTRALISÉ GÉNÉRALISÉ TRANSACTION
REGISTRE}\label{uxe9therum-un-suxe9curise-duxe9centralisuxe9-guxe9nuxe9ralisuxe9-transaction-registre}}

\begin{quote}
\textbf{BERLIN VERSION 630ed56 -- 2022-02-13}

DR. GAVIN BOIS FONDATEUR, ÉTHERUM \& PARITÉ

\href{mailto:GAVIN@PARITY.IO}{\nolinkurl{GAVIN@PARITY.IO}}

Abstrait. Le paradigme de la blockchain, lorsqu'il est associé à des
transactions sécurisées par cryptographie, a démontré son utilité à
travers un certain nombre de projets, Bitcoin étant l'un des plus
remarquables. Chacun de ces projets peut être considéré comme une
application simple sur une ressource de calcul décentralisée, mais
unique. Nous pouvons appeler ce paradigme un modèle transactionnel
singleton machine avec état partagé.

Ethereum implémente ce paradigme de manière généralisée. En outre, il
fournit une pluralité de telles ressources, chaque avec un distinct Etat
et en fonctionnement code mais capable pour interagir par un passage de
message cadre avec autres. Nous discuter son motif, la mise en oeuvre
questions, la Opportunités ce fournit et la futur obstacles nous
envisager.
\end{quote}

\begin{enumerate}
\def\labelenumi{\arabic{enumi}.}
\item
  Introduction
\end{enumerate}

\begin{quote}
Avec omniprésent l'Internet Connexions dans plus des endroits du monde,
la transmission mondiale de l'information est devenue incroyablement bon
marché. Des mouvements ancrés dans la technologie comme Bit- coin ont
démontré par la puissance du défaut, les mécanismes de consensus et le
respect volontaire du social Contrat, que ce est possible pour utiliser
la l'Internet pour Fabriquer un système de transfert de valeur
décentralisé et partageable à travers le monde et pratiquement gratuit à
utiliser. Ce système peut être considéré comme une version très
spécialisée d'un cryptographe- machine d'état basée sur les transactions
et sécurisée. Suivi des systèmes tels que Namecoin ont adapté cette
«~monnaie l'application" de la technologie dans d'autres applications
bien que plutôt simpliste ceux.

Ethereum est un projet qui tente de construire la génération technologie
généralisée; technologie sur laquelle toutes les transactions des
concepts de machine à états basés peuvent être construits. De plus il
vise à fournir au développeur final une solution étroitement intégrée
système de bout en bout pour créer des logiciels sur un paradigme de
calcul exploré dans le courant dominant~: une approche de confiance
objet Messagerie calculer cadre.
\end{quote}

\begin{enumerate}
\def\labelenumi{\arabic{enumi}.}
\item
  \textbf{Conduite Facteurs.} Là sont beaucoup objectifs de cette
  projet; l'un des principaux objectifs est de faciliter les
  transactions entre des personnes consentantes qui n'auraient autrement
  aucun moyen se faire confiance. Cela peut être dû à la géographie
  séparation, interfaçage difficulté, ou alors peut-être la
  incompatible- capacité, incompétence, réticence, dépense, incertitude,
  les inconvénients ou la corruption des systèmes juridiques existants.
  Par en précisant un changement d'état système par un riche et unam-
  langage bigu, et en outre l'architecture d'un système de telle sorte
  que nous pouvons raisonnablement nous attendre à ce qu'un accord être
  Donc forcée de manière autonome, nous pouvez fournir un moyens pour
  cette finir.
\end{enumerate}

\begin{quote}
Les transactions dans ce système proposé auraient plusieurs les
attributs ne pas souvent trouvé dans la réel monde. Le incorruptible-
capacité de jugement, souvent difficile à trouver, vient naturellement
d'un interprète algorithmique désintéressé. Transparence, ou être
capable de voir exactement comment un état ou un jugement est venu à
propos du journal des transactions et des règles ou des instructions
codes, ne se produit jamais parfaitement dans les systèmes humains
puisque Naturel Langue est nécessairement vague, information

fait souvent défaut, et les vieux préjugés sont difficiles à secouer.

Globalement, nous souhaitons fournir un système tel que les utilisateurs
peut être garanti que, peu importe avec quel autre individu des
particuliers, systèmes ou alors organisations elles ou ils interagir,
elles ou ils pouvez le faire avec une confiance absolue dans les
résultats possibles et comment ceux résultats pourrait viens à propos.
\end{quote}

\begin{enumerate}
\def\labelenumi{\arabic{enumi}.}
\setcounter{enumi}{1}
\item
  \begin{quote}
  \textbf{Précédent travail.} \protect\hyperlink{_bookmark73}{Buterin
  {[}2013a{]} a d'} abord proposé la noyau de ce travail fin novembre
  2013. Bien que maintenant évolué à bien des égards, la fonctionnalité
  clé d'un bloc- chaîne avec un langage Turing-complet et une la
  capacité de stockage inter-transaction illimitée reste modifié.
  \end{quote}
\end{enumerate}

\begin{quote}
\protect\hyperlink{_bookmark91}{Dwork et Naor {[}1992{]}} ont fourni les
premiers travaux sur la utilisation d'une preuve cryptographique des
dépenses de calcul ture (``preuve de travail'') comme moyen de
transmettre une valeur signaler sur Internet. Le signal de valeur a été
utilisé ici comme un Spam dissuasion mécanisme plutôt que quelconque
type de devise, mais critique démontré la potentiel pour un canal de
données de base pour véhiculer un \emph{signal économique fort} ,
permettant à un récepteur de faire une assertion physique sans avoir à
compter sur la \emph{confiance} .
\protect\hyperlink{_bookmark69}{Arrière}
\protect\hyperlink{_bookmark69}{{[}2002{]}} a produit plus tard un
système dans un similaire veine.

Le premier exemple d'utilisation de la preuve de travail comme signal
économique fort pour sécuriser une monnaie a été par
\protect\hyperlink{_bookmark107}{Vish-}
\protect\hyperlink{_bookmark107}{numurthy et al.}
\protect\hyperlink{_bookmark107}{{[}2003{]}.} Dans ce cas, le jeton
était utilisé pour contrôler le commerce de fichiers peer-to-peer,
fournissant «~consommateurs~» avec la possibilité d'effectuer des
micro-paiements pour «~fournisseurs~» pour leurs services. Le modèle de
sécurité offert par la preuve de travail a été complétée par des
signatures numériques et un registre afin de s'assurer que le dossier
historique ne pouvait pas être corrompu et que les acteurs malveillants
ne pouvaient pas falsifier le paiement ou se plaindre injustement de la
prestation de services éry. Cinq ans plus tard,
\protect\hyperlink{_bookmark87}{N akamoto {[}2008{]} a} introduit un
autre un tel jeton de valeur sécurisé par preuve de travail, un peu plus
large dans portée. Le fruit de ce projet, Bitcoin, est devenu le premier
largement adopté global décentralisé transaction registre.

D'autres projets construits sur le succès de Bitcoin~; les altcoins
introduit de nombreuses autres monnaies par altération au protocole.
Certains des plus connus sont Litecoin et Primecoin, discuté par
\protect\hyperlink{_bookmark101}{Sprankel {[}2013{]}.} Autres projets
recherché pour prendre la coeur valeur teneur mécanisme de la pro- tocol
et réutiliser ce; \protect\hyperlink{_bookmark70}{Arron {[}2012{]}}
discute, pour Exemple,

1

ÉTHERUM~: UN SÉCURISE DÉCENTRALISÉ GÉNÉRALISÉ TRANSACTION COMPTABLE
\textbf{BERLIN VERSION} 2

le projet Namecoin qui vise à fournir une solution décentralisée
résolution de nom système.

D'autres projets visent toujours à s'appuyer sur le réseau Bitcoin.
travail lui-même, tirant parti de la grande quantité de valeur placée
dans le système et la grande quantité de calcul qui va dans le mécanisme
de consensus. Le projet Mastercoin, proposé pour la première fois par
\protect\hyperlink{_bookmark109}{Willett}
\protect\hyperlink{_bookmark109}{{[}2013{]},} vise à construire un monde
plus riche protocole impliquant de nombreuses fonctionnalités
supplémentaires de haut niveau sur top du protocole Bitcoin grâce à
l'utilisation d'un numéro de pièces auxiliaires au protocole de base. Le
Coloré Pièces de monnaie

lui-même - ce serait beaucoup trop grand). Ils ponctuent également le
série de transactions avec des incitations pour les nœuds à
\emph{exploiter} . Cette l'incitation a lieu comme une fonction de
transition d'état, ajouter valeur pour un nommé Compte.

L'exploitation minière est le processus qui consiste à consacrer des
efforts (travailler) à renforcer une série de transactions (un bloc) par
rapport à toute autre potentiel concurrent bloc. Ce est atteint Merci
pour un preuve cryptographiquement sécurisée. Ce schéma est connu sous
le nom de preuve de travail et est discuté dans détail dans section
\protect\hyperlink{11.5._Mining_Proof-of-Work}{11.5.}

Officiellement, nous étendre pour:

projet, proposé par \protect\hyperlink{_bookmark89}{Rosenf eld et al.
{[}2012{]},} prend une approche similaire mais stratégie plus
simplifiée, embellissant les règles d'un transaction afin de briser la
fongibilité des Bitcoins base devise et Autoriser la création et suivi
de jetons par un spécial "chroma-wallet"-conscient du protocole pièce de

(2)

(3)

(4)
\end{quote}

\emph{\textbf{σ} t} +1 ≡ \protect\hyperlink{_bookmark67}{Π (}
\emph{\textbf{σ} t , B} )

\emph{B} ≡ ( \emph{...,} ( \emph{T} 0 \emph{, T} 1 \emph{, ...} )
\emph{, ...} )

Π ( \emph{\textbf{σ} , B} ) ≡ \protect\hyperlink{_bookmark65}{Ω(}
\emph{B,} \protect\hyperlink{_bookmark0}{Υ ( Υ (} \emph{\textbf{σ} , T}
0 ) \emph{, T} 1 ) \emph{...} )

Où \protect\hyperlink{_bookmark65}{Ω} est la bloc-finalisation Etat
passage fonction-

\begin{quote}
Logiciel.

Supplémentaire travail possède a été Fini dans la région avec Jeter- la
fondation de la décentralisation ; Ripple, discuté par
\protect\hyperlink{_bookmark74}{Boutellier et Heinzen {[}2014{]},} a
cherché à créer une « éré » système pour devise échanger, effectivement
créer un nouveau système de compensation financière. Il a démontré que
des gains d'efficacité élevés peuvent être réalisés si la
décentralisation prémisse est mis au rebut.

Les premiers travaux sur les contrats intelligents ont été réalisés par
\protect\hyperlink{_bookmark103}{Szabo}
\protect\hyperlink{_bookmark103}{{[}1997{]}} et
\protect\hyperlink{_bookmark86}{Meunier {[}1997{]}.} Environ la années
1990 ce devenu dégager que l'application algorithmique des accords
pourrait devenir un important Obliger dans Humain la coopération. Mais
non spécifique système a été proposé pour mettre en œuvre un tel
système, il a été proposé que l'avenir du droit serait fortement affecté
par de tels systèmes. Dans cette optique, Ethereum peut être considéré
comme un général la mise en oeuvre de tel un \emph{crypto-loi} système.

Pour un liste de termes utilisé dans cette papier, référer pour Appen-
dix \protect\hyperlink{Appendix_A._Terminology}{UN.}
\end{quote}

\begin{enumerate}
\def\labelenumi{\arabic{enumi}.}
\setcounter{enumi}{1}
\item
  \begin{quote}
  Le Chaîne de blocs Paradigme
  \end{quote}
\end{enumerate}

\begin{quote}
Ethereum, pris comme un entier, pouvez être vu comme un basé sur les
transactions Etat machine: nous commencer avec un gen- esis état et
exécute progressivement des transactions pour transformer dans un état
actuel. C'est cet état actuel que nous J'accepte comme la canonique
"version" de la monde de Ethereum. L'État peut inclure de telles
informations comme compte bal- ances, réputations, confiance
arrangements, Les données se rapportant aux informations du monde
physique ; bref, n'importe quoi qui peut actuellement être représenté
par un ordinateur est admis- possible. Les transactions représentent
donc un arc valide entre deux États; la partie 'valide' est
importante---il en existe beaucoup plus invalide Etat changements que
valide Etat changements. Invalide Etat les changements peuvent, par
exemple, être des choses telles que la réduction d'un compte équilibre
sans une augmentation égale et opposée ailleurs. UN valide Etat passage
est une qui vient à propos par un transaction. Officiellement:

tion (une fonction qui récompense une partie désignée);
\protect\hyperlink{4.3._The_Block}{\emph{B}} est-ce bloc, qui comprend
une série de transactions entre certains autre Composants; et
\protect\hyperlink{_bookmark67}{Π} est la au niveau du bloc transition
d'état une fonction.

C'est la base du paradigme de la blockchain, un modèle qui forme l'épine
dorsale non seulement d'Ethereum, mais tout décentralisé basée sur le
consensus transaction systèmes pour Date.
\end{quote}

\begin{enumerate}
\def\labelenumi{\arabic{enumi}.}
\item
  \textbf{Valeur.} Afin d'encourager le calcul au sein du réseau, il
  doit y avoir une méthode convenue pour la transmission valeur ting.
  Pour résoudre ce problème, Ethereum a une capacité intrinsèque devise,
  Éther, connu aussi comme EPF et parfois référé pour par \_ la Vieille
  Anglais ¯~D. Le le plus petit sous- dénomination d' Ether , et donc
  celui dans lequel toutes les valeurs entières de la monnaie sont
  comptées, est le Wei. Un éther est défini comme étant 10
  \textsuperscript{18} Wei. Il existe d'autres sous-dénominations de
  Éther:
\end{enumerate}

\begin{quote}
Multiplicateur Nom

10 0 Wei

10 \textsuperscript{12} Szabo

10 \textsuperscript{15} Finney

10 \textsuperscript{18} Éther

Tout au long de la cadeau travail, quelconque référence pour valeur,
dans le cadre d'Ether, de devise, d'un solde ou d'un paiement, devrait
être assumé pour être dénombré dans Wei.
\end{quote}

\begin{enumerate}
\def\labelenumi{\arabic{enumi}.}
\setcounter{enumi}{1}
\item
  \textbf{Quelle Histoire ?} Puisque le système est décentralisé et
  toutes les parties ont la possibilité de créer un nouveau bloc sur
  quelques plus âgée préexistant bloc, la résultant structure est
  nécessairement un arbre de blocs. Afin de former un consensus quant à
  quel chemin, de la racine \protect\hyperlink{_bookmark153}{(le bloc de
  genèse} ) à la feuille (le bloc contenant les transactions les plus
  récentes) via cette arbre structure, connu comme la chaîne de blocs,
  là doit être un schéma convenu. Si jamais il y a un désaccord entre
  les nœuds quant au chemin de la racine à la feuille dans le bloc arbre
  est la 'meilleur' chaîne de blocs, alors un \emph{fourchette} se
  produit.
\end{enumerate}

\begin{quote}
(1) \protect\hypertarget{_bookmark0}{}{}\emph{\textbf{σ}}
\end{quote}

\emph{j} +1

\begin{quote}
≡ Υ( \emph{\textbf{σ} t , J} )

Cette voudrais moyenne que passé un donné indiquer dans temps (bloc),
plusieurs États de la système mai coexister: quelques nœuds être-

où Υ est la Ethereum Etat passage une fonction. Dans Ethereum, Υ,
ensemble avec \emph{\textbf{σ}} sont considérablement Suite pou-
énervant que quelconque existant comparable système; Υ permet com-
composants pour effectuer des calculs arbitraires, tandis que
\emph{\textbf{σ}} permet Composants pour boutique arbitraire Etat entre
transactions. Les transactions sont regroupées en blocs~; les blocs sont
enchaînés ensemble en utilisant un cryptographique hacher comme un
moyens de référer- ence. Blocs une fonction comme un journal,
enregistrement un séries de transactions ensemble avec la précédent bloc
et un iden- tifier pour la final Etat (mais faire ne pas boutique la
final Etat

croire une bloc pour contenir la canonique transactions, d'autres nœuds
croyant qu'un autre bloc est canonique, contenant potentiellement des
produits radicalement différents ou incompatibles transactions. Ceci
doit être évité à tout prix car l'ONU- la certitude qui s'ensuivrait
tuerait probablement toute confiance dans la entier système.

Le schéma que nous utilisons pour générer un consensus est un version
simplifiée du protocole GHOST introduite par
\protect\hyperlink{_bookmark100}{Sompolinsky et Zohar {[}2013{]}.} Ce
processus est décrit dans détail dans section
\protect\hyperlink{10._Blocktree_to_Blockchain}{dix.}

ÉTHERUM~: UN SÉCURISE DÉCENTRALISÉ GÉNÉRALISÉ TRANSACTION COMPTABLE
\textbf{BERLIN VERSION} 3

Parfois, un chemin suit un nouveau protocole d'un hauteur particulière
(numéro de bloc). Ce document décrit une version de la protocole, à
savoir le \emph{Berlin} version défini par
\protect\hyperlink{_bookmark72}{Beiko et al. {[}2021b{]}.} Afin de
suivre en arrière le historique d'un chemin, il faut référencer
plusieurs versions de ce document. Voici les numéros de bloc du
protocole mises à jour sur la Ethereum principale réseau:
\end{quote}

\begin{longtable}[]{@{}
  >{\raggedright\arraybackslash}p{(\columnwidth - 2\tabcolsep) * \real{0.50}}
  >{\raggedright\arraybackslash}p{(\columnwidth - 2\tabcolsep) * \real{0.50}}@{}}
\toprule
\begin{minipage}[b]{\linewidth}\raggedright
\begin{quote}
Nom
\end{quote}
\end{minipage} & Première Bloc Numéro \\
\midrule
\endhead
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
Ferme \emph{F}
\end{quote}
\end{minipage} & 1150000 \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\emph{F} TangerineSifflet
\end{quote}
\end{minipage} & 2463000 \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\emph{F} SpuriousDragon
\end{quote}
\end{minipage} & 2675000 \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\emph{Fa} Byzance
\end{quote}
\end{minipage} & 4370000 \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\emph{F} Constantinople
\end{quote}
\end{minipage} & 7280000 \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\emph{Saint} -Pétersbourg
\end{quote}
\end{minipage} & 7280000 \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\emph{F} Istanbul
\end{quote}
\end{minipage} & 9069000 \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\emph{F} MuirGlacier
\end{quote}
\end{minipage} & 9200000 \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\emph{F} Berlin
\end{quote}
\end{minipage} & 12244000 \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\emph{F} Londres
\end{quote}
\end{minipage} & 12965000 \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
Flèche \emph{FGlacier}
\end{quote}
\end{minipage} & 13773000 \\
\bottomrule
\end{longtable}

\begin{quote}
Parfois, les acteurs ne sont pas d'accord sur un changement de
protocole, et une fourche permanente se produit. Afin de distinguer
être- entre les blockchains divergentes, EIP-155 par
\protect\hyperlink{_bookmark79}{Buterin}
\protect\hyperlink{_bookmark79}{{[}2016b{]}} introduit la concept de
chaîne IDENTIFIANT, qui nous dénoter par \emph{β} .

Pour la Ethereum principale réseau

(5) \protect\hypertarget{_bookmark1}{}{}\emph{β} = 1
\end{quote}

\begin{enumerate}
\def\labelenumi{\arabic{enumi}.}
\setcounter{enumi}{2}
\item
  \begin{quote}
  Conventions
  \end{quote}
\end{enumerate}

\begin{quote}
Nous utilisons un certain nombre de conventions typographiques pour la
notation formelle, dont certaines sont assez particulières à la cadeau
travail:

Les deux ensembles de valeurs d'état hautement structurées de «~niveau
supérieur~» ues, sont indiqués par des lettres grecques minuscules en
gras. Ils tombent dans ceux d'état-monde, qui sont notés
\emph{\textbf{σ}} (ou un une variante là-dessus) et ceux de état de la
machine, \emph{\textbf{µ}} .

Les fonctions en fonctionnement sur très structuré valeurs sont dénoté
avec un majuscule grec lettre, par exemple
\protect\hyperlink{_bookmark0}{Υ,} la Ethereum Etat passage une
fonction.

Pour la plupart des fonctions, une lettre majuscule est utilisée, par
exemple \emph{C} , la fonction de coût général. Ceux-ci peuvent être
souscrits à désignent des variantes spécialisées, par exemple
\protect\hyperlink{_bookmark146}{\emph{C} SSTORE} , la fonction de coût
tion pour la \protect\hyperlink{_bookmark145}{STORE} opération. Pour
spécialisé et peut-être

fonctions définies en externe, nous pouvons formater comme une machine à
écrire texte, par exemple la Keccak-256 hacher une fonction (comme par
version 3 de la gagnant entrée pour la SHA-3 concours par
\protect\hyperlink{_bookmark75}{Bertoni}
\protect\hyperlink{_bookmark75}{et Al. {[}2011{]},} plutôt que la final
SHA-3 spécification), est

noté KEC (et généralement appelé Keccak ordinaire). Aussi, KEC512 fait
référence pour la Keccak-512 hacher une fonction.

Tuples sont typiquement dénoté avec un majuscule lettre,

par exemple \emph{T} , est utilisé pour désigner une transaction
Ethereum. Cette symbole mai, si par conséquent défini, être indice pour
référer pour un individuel composant, par exemple
\protect\hyperlink{_bookmark40}{\emph{T} n} , dénote la nonce de
mentionné transaction. Le formulaire de la indice est utilisé pour

désigner son type~; par exemple, les indices majuscules font référence
aux tuples avec inscriptible Composants.

Scalaires et séquences d'octets de taille fixe (ou, synonyme, tableaux)
sont dénoté avec un Ordinaire minuscule lettre, par exemple \emph{n} est
utilisé dans le document pour désigner une
\protect\hyperlink{_bookmark40}{transaction nonce.} Ceux avec un
notamment spécial sens mai être Grec,

par exemple \emph{δ} , le nombre d'éléments requis sur la pile pour un
donné opération.

Les séquences de longueur arbitraire sont généralement désignées par un
lettre minuscule en gras, par exemple \textbf{o} est utilisé pour
désigner l'octet séquence donnée comme données de sortie d'un appel de
message. Pour valeurs particulièrement importantes, une lettre majuscule
en gras peut être utilisé.

Partout, nous supposons que les scalaires sont des intégraux non
négatifs. Gers et Donc appartenir pour la Positionner N. \_ Le
Positionner de tout octet séquences est B , officiellement défini dans
annexe \protect\hyperlink{Appendix_B._Recursive_Length_Prefix}{B} Si tel
un ensemble de séquences est restreint à celles d'un longueur, ce est
dénoté avec un indice, Donc la Positionner de tout

les séquences d'octets de longueur 32 sont nommées B 32 et l'ensemble
des tout non négatif entiers plus petite que 2 \textsuperscript{256} est
nommé N 256 . Cette est officiellement défini dans section
\protect\hyperlink{4.3._The_Block}{4.3.}

Les crochets sont utilisés pour indexer et référencer composants
individuels ou sous-séquences de séquences, par exemple \textbf{\emph{µ}
s} {[}0{]} désigne le premier élément de la pile de la machine. Pour
sous-séquences, les ellipses sont utilisées pour spécifie le prévu
gamme, pour inclure des éléments aux deux limites, par exemple
\textbf{\emph{µ} m} {[}0 \emph{..} 31{]} dénote la première 32 éléments
de la Machines Mémoire.

Dans le cas de l'état global \emph{\textbf{σ}} , qui est une séquence de
comptes, eux-mêmes tuples, les crochets sont utilisés pour référence un
individuel Compte.

Lorsque nous considérons des variantes de valeurs existantes, nous
suivons la règle que dans un donné portée pour définition, si nous
supposons que la valeur 'd'entrée' non modifiée soit désignée par la
espace réservé alors la modifié et utilisable valeur est

dénoté comme , et intermédiaire valeurs voudrais être ∗ , ∗∗

\&c. Lors d'occasions très particulières, afin de maximiser lisibilité
et seulement si le sens est sans ambiguïté, nous pouvons utiliser des
indices alphanumériques pour désigner les valeurs intermédiaires,
particulièrement ceux de particulier Remarque.

Lors de l'examen de l'utilisation des fonctions existantes, compte tenu
d'un fonction \emph{f} , la fonction
\protect\hyperlink{_bookmark27}{\emph{f} \textsuperscript{∗}} désigne un
élément similaire version du mappage de fonction à la place entre les
séquences. Ce est officiellement défini dans section
\protect\hyperlink{4.3._The_Block}{4.3.}

Nous définissons un certain nombre de fonctions utiles tout au long.
\protect\hypertarget{_bookmark2}{}{}Une de la Suite commun est \emph{.€}
, qui \_ \_ e v alue pour la dernière article dans la donné séquence:

(6) \emph{.€} ( \textbf{x} ) ≡ \textbf{x} {[} ll \textbf{x} ll − 1{]}
\end{quote}

\begin{enumerate}
\def\labelenumi{\arabic{enumi}.}
\setcounter{enumi}{3}
\item
  \begin{quote}
  Blocs, État et Transactions
  \end{quote}
\end{enumerate}

\begin{quote}
Ayant introduit la basique notions derrière Ethereum, nous discuterons
de la signification d'une transaction, d'un bloc et la Etat dans Suite
détail.
\end{quote}

\begin{enumerate}
\def\labelenumi{\arabic{enumi}.}
\item
  \textbf{Monde État.} Le monde Etat ( \emph{état} ), est un carte- ping
  entre les adresses (identifiants 160 bits) et le compte états (une
  structure de données sérialisée en tant que RLP, voir l'annexe
  \protect\hyperlink{Appendix_B._Recursive_Length_Prefix}{B).} Mais ne
  pas stockée sur la chaîne de blocs, ce est assumé que l'implémentation
  maintiendra cette cartographie dans une modi- fié Merkle Patricia
  arbre ( \emph{trie} , voir l'annexe
  \protect\hyperlink{Appendix_D._Modified_Merkle_Patricia_Tre}{D).}
  L'essai nécessite une base de données simple qui maintient une carte-
  ping de tableaux d'octets vers des tableaux d'octets~; nous nommons ce
  sous-jacent base de données la base de données d'état. Cela a un
  certain nombre d'avantages; premièrement le noeud racine de cette
  structure est cryptographiquement dépendant sur tout interne Les
  données et comme tel son hacher pouvez être utilisé comme une identité
  sécurisée pour l'ensemble de l'état du système. Deuxièmement, étant
  une structure de données immuable, elle permet à tout précédent Etat
  (à qui racine hacher est connu) pour être rappelé en modifiant
  simplement le hachage racine en conséquence. Depuis que nous stocker
  tous ces hachages racine dans la blockchain, nous sommes en mesure de
  trivialement revenir pour vieille États.
\end{enumerate}

\begin{quote}
ÉTHERUM~: UN SÉCURISE DÉCENTRALISÉ GÉNÉRALISÉ TRANSACTION COMPTABLE
\textbf{BERLIN VERSION} 4

L'état du compte, \emph{\textbf{σ}} {[} \emph{a} {]}, comprend les
quatre des champs:

\protect\hypertarget{_bookmark3}{}{}\textbf{nonce :} une valeur scalaire
égale au nombre de trans- Actions expédié depuis cette adresse ou alors,
dans la Cas de comptes avec code associé, le nombre de les créations de
contrats effectuées par ce compte. Pour ac- compte de l'adresse \emph{a}
dans l'état \emph{\textbf{σ}} , ce serait pour- mally dénoté
\emph{\textbf{σ}} {[} \emph{une} {]} n .

\textbf{solde:} UN scalaire valeur égal pour la Numéro de Wei

possédé \_ par \_ cette adresse. Formellement \_ dénoté
\emph{\textbf{σ}} {[} \emph{une} {]} \textsubscript{b} .

\textbf{racine de stockage~:} Un hachage de 256~bits du nœud racine d'un
arbre Merkle Patricia qui encode la configuration de stockage tentes du
compte (un mappage entre 256 bits entier valeurs), codé dans la essayer
comme un cartographie à partir du hachage Keccak 256 bits de l'entier
256 bits clés aux valeurs entières 256 bits codées RLP. Le hacher est
officiellement dénoté \emph{\textbf{σ}} {[} \emph{une} {]} s .

\textbf{hachage de code~:} Le hacher de la EVM code de cette

compte---ce est la code que obtient réalisé devrait cette adresse
recevoir un message appel; ce est immuable et Donc, contrairement à tout
autre des champs, ne peux pas être modifié après chantier. Tous ces
fragments de code sont contenus dans la base de données de l'État sous
leur corres- hachages répondants pour une récupération ultérieure. Ce
hachage est officiellement dénoté \emph{\textbf{σ}} {[} \emph{une} {]} c
, et Donc la code mai être

dénoté comme \textbf{b} , donné que CEC ( \textbf{b} ) =
\emph{\textbf{σ}} {[} \emph{une} {]} c .

Puisque nous souhaitons généralement ne pas nous référer à la racine du
trie hachage mais à l'ensemble sous-jacent de paires clé/valeur stockées
dans, nous définir un pratique équivalence:
\end{quote}

\begin{enumerate}
\def\labelenumi{(\arabic{enumi})}
\setcounter{enumi}{6}
\item
  TRIE \emph{L} \textsuperscript{∗} \textsubscript{je} (
  \emph{\textbf{σ}} {[} \emph{une} {]} \textbf{\textsubscript{s}} ) ≡
  \emph{\textbf{σ}} {[} \emph{une} {]} \textsubscript{s}
\end{enumerate}

\begin{quote}
La fonction de réduction pour l'ensemble de paires clé/valeur dans la
essayer, \emph{L} \textsuperscript{∗} \textsubscript{je} , est d' amende
comme la élément en t transformation de la base une fonction \emph{L} je
, donné comme:
\end{quote}

\begin{enumerate}
\def\labelenumi{(\arabic{enumi})}
\setcounter{enumi}{7}
\item
  \begin{quote}
  \emph{L} je ( \emph{k, v} ) ≡ KEC ( \emph{k} ) \emph{,} RLP ( \emph{v}
  ) où:
  \end{quote}
\end{enumerate}

\begin{quote}
(9) \emph{k} ∈ B 32 ∧ \emph{v} ∈ N

Ce devoir être entendu que \emph{\textbf{σ}} {[} \emph{une} {]}
\textbf{s} est ne pas un 'physique' membre du compte et ne contribue pas
à son utilisation ultérieure sérialisation.

Si la \textbf{codeHash} domaine est la Keccak-256 hacher de la vider
corde, c'est à dire \emph{\textbf{σ}} {[} \emph{une} {]} c = KEC () ,
alors la nœud représente un Facile Compte, parfois référé pour comme un
"hors contrat" Compte.

Ainsi nous mai définir un état-monde s'effondrer une fonction \emph{L} S
:

(10) \emph{L} S ( \emph{\textbf{σ}} ) ≡ \{ \emph{p} ( \emph{une} ) :
\emph{\textbf{σ}} {[} \emph{une} {]} ∅ \}

où

(11) \emph{p} ( \emph{une} ) ≡ KEC ( \emph{une} ) \emph{,} RLP (
\emph{\textbf{σ}} {[} \emph{une} {]} \textsubscript{n} \emph{, \textbf{σ
}}{[} \emph{une} {]} \textsubscript{b} \emph{, \textbf{σ }}{[}
\emph{une} {]} \textsubscript{s} \emph{, \textbf{σ }}{[} \emph{une} {]}
\textsubscript{c} )

Cette une fonction, \emph{L} S , est utilisé aux côtés de la essayer une
fonction pour fournir une courte identité (hachage) de l'état du monde.
Nous présumer:

(12) ∀ \emph{une} : \emph{\textbf{σ}} {[} \emph{une} {]} = ∅ ∨ (
\emph{une} ∈ B 20 ∧ \emph{v} ( \emph{\textbf{σ}} {[} \emph{une} {]})) où
\emph{v} est la Compte validité une fonction:

\underline{(13 ) \emph{v} ( \emph{x} ) ≡} \emph{xn} \textsubscript{\_} ∈
N \textsubscript{25 6} ∧ \emph{x} \textsubscript{b} ∈ N
\textsubscript{25 6} ∧ \emph{x} \textsubscript{s} ∈ B \textsubscript{3
2} ∧ \emph{x} \textsubscript{c} ∈ B \textsubscript{32}

Un Compte est \emph{vider} lorsque ce possède non code, zéro nonce et
zéro solde:

(14)

VIDE ( \emph{\textbf{σ} , une} ) ≡ \emph{\textbf{σ}} {[} \emph{une} {]}
\textsubscript{c} = KEC () ∧ \emph{\textbf{σ}} {[} \emph{une} {]}
\textsubscript{n} = 0 ∧ \emph{\textbf{σ}} {[} \emph{une} {]}
\textsubscript{b} = 0

Même les contrats précompilés appelables peuvent avoir un vide état du
compte. C'est parce que leurs états de compte ne habituellement contenir
la code décrivant son comportement.

Un compte est \emph{mort} lorsque son état de compte est inexistant ou
alors vider:

(15) MORT ( \emph{\textbf{σ} , un} ) ≡ \emph{\textbf{σ}} {[} \emph{une}
{]} = ∅ ∨ VIDE ( \emph{\textbf{σ} , un} )
\end{quote}

\begin{enumerate}
\def\labelenumi{\arabic{enumi}.}
\item
  \textbf{La transaction.} Une transaction (formellement, \emph{T} ) est
  un instruction unique signée cryptographiquement construite par un
  acteur de cinéma extérieurement pour la portée de Ethereum. Le
  expéditeur d'une transaction ne peut être un contrat. Alors qu'on
  suppose que l'acteur externe ultime sera de nature humaine, des outils
  logiciels seront utilisés pour sa construction et sa diffusion. pays
  \protect\hyperlink{_bookmark10}{\textsuperscript{1}} . EIP-2718 par
  \protect\hyperlink{_bookmark110}{Zoltu {[}2020{]}} introduit la notion
  de différents types de transactions. À partir de la version berlinoise
  de le protocole, il existe deux types de transactions~: 0 (hérité) et
  1 (EIP-2930 par \protect\hyperlink{_bookmark80}{Butérine et Suède
  {[}2020b{]}).} Plus loin, il existe deux sous-types de transactions :
  celles qui résultent dans les appels de message et ceux qui entraînent
  la création de nouveaux comptes avec code associé (appelé
  officieusement "création de contrat"). Tous les types de transactions
  spécifient un nombre de commun des champs:
\end{enumerate}

\begin{quote}
\protect\hypertarget{_bookmark4}{}{}\textbf{taper:} EIP-2718 transaction
taper; officiellement \emph{Tx} . \_

\textbf{nonce~:} UN scalaire valeur égal pour la Numéro de trans-
\protect\hypertarget{_bookmark5}{}{}Actions expédié par la expéditeur;
officiellement \emph{Tn} . \_

\textbf{prix du gaz~:} UN scalaire valeur égal pour la Numéro de

Wei à payer par unité de \emph{gaz} pour tous les calculs les frais
occasionnés par l'exécution de la présente
\protect\hypertarget{_bookmark6}{}{}transaction; officiellement \emph{T}
p .

\textbf{Limite de gaz~:} UN scalaire valeur égal pour la maximum

quantité de gaz qui doit être utilisée dans l'exécution cette opération.
Ceci est payé d'avance, avant tout le calcul est fait et ne peut pas
être augmenté plus tard; officiellement \emph{Tg} . \_

\textbf{pour:} Le 160 bits adresse de la message appels recette-

ent ou, pour une opération de création de contrat, ∅ , utilisé ici pour
dénoter la seul membre de B 0 ; officiellement
\protect\hypertarget{_bookmark7}{}{}\emph{T} t .

\textbf{valeur:} UN scalaire valeur égal pour la Numéro de Wei pour

être transféré pour la message appels destinataire ou alors, en cas de
création de contrat, en tant que dotation
\protect\hypertarget{_bookmark8}{}{}pour la nouvellement créé Compte;
officiellement \emph{Tv} . \_

\textbf{r, s~:} Valeurs correspondant pour la Signature de la

transaction et utilisé pour déterminer l'expéditeur de la transaction;
formellement \emph{T} r et \emph{Ts} . \_ C'est ex- pané dans annexe
\protect\hyperlink{Appendix_F._Signing_Transactions}{F.}

EIP-2930 (taper 1) transactions aussi avoir:

\textbf{liste d'accès~:} \protect\hypertarget{_bookmark9}{}{}Liste des
entrées d'accès à réchauffer~; pour- mally \emph{TA} .
\textbf{\textsubscript{\_}} Chaque accéder liste entrée \emph{E} est un
tuple de un Compte adresse et un liste de stockage clés:

\emph{E} ≡ ( \emph{E} a \emph{, E} \textbf{s} ).

\textbf{ID de chaîne~:} ID de chaîne~; formellement \emph{T} c . Doit
être égal à la réseau chaîne IDENTIFIANT
\protect\hyperlink{_bookmark1}{\emph{β}} .

\textbf{yParité~:} Signature Oui parité; officiellement \emph{T} y .

1 \protect\hypertarget{_bookmark10}{}{}Notamment, ces «~outils~»
pourraient finalement devenir si causalement éloignés de leur initiation
basée sur l'homme - ou les humains pourraient devenir si éloignés
causalement neutres - qu'il pourrait y avoir un point où ils pourraient
à juste titre être considérés comme des agents autonomes. par exemple,
les contrats peuvent offrir des primes à humains pour être expédié
transactions pour lancer leur exécution.

ÉTHERUM~: UN SÉCURISE DÉCENTRALISÉ GÉNÉRALISÉ TRANSACTION COMPTABLE
\textbf{BERLIN VERSION} 5

Les transactions héritées n'ont pas de liste d' \textbf{accès} (
\emph{T} \textbf{\textsubscript{A}} = ()), tandis que \textbf{chainId}
et \textbf{yParity} pour les transactions héritées sont combiné dans un
Célibataire valeur:

\protect\hypertarget{_bookmark11}{}{}\textbf{w~:} un scalaire valeur
codage Y parité et possibilité ID de chaîne bly~; formellement \emph{T}
w . \emph{T} w = 27 + \emph{T} y ou \emph{T} w = 2 \emph{β} +35+
\emph{T} y (voir EIP-155 par \protect\hyperlink{_bookmark79}{Butérine
{[}2016b{]}).}

En outre, un Contrat création transaction (indépendamment qu'il s'agisse
héritage ou alors EIP-2930) contient:

\textbf{initialisation~:} Un illimité Taille octet déployer en précisant
la Code EVM pour la procédure d'initialisation du compte, officiellement
\emph{T} \textbf{\textsubscript{je}} .

\textbf{init} est un Code EVM fragment; ce Retour la \textbf{corps} , un
deuxième fragment de code qui s'exécute à chaque fois que le compte
reçoit un message d'appel (soit via un trans- action ou due à
l'exécution interne de code). \textbf{init} est exécuté une seule fois
lors de la création du compte et est supprimé immédiatement après.

Dans contraste, un message appel transaction contient:

\textbf{Les données:} Un tableau d'octets de taille illimitée spécifiant
saisir Les données de la message appel, officiellement \emph{Td} .
\textbf{\textsubscript{\_}}

annexe \protect\hyperlink{Appendix_F._Signing_Transactions}{F} spécifie
la fonction, \emph{S} , qui mappe trans- actions à l'expéditeur, et
passe par l'ECDSA de la courbe SECP-256k1, en utilisant le hash de la
transaction (excepté la dernier Trois Signature des champs) comme la
données pour signe. Pour la cadeau nous simplement affirmer que la
expéditeur de un donné transaction \emph{J} pouvez être représentée avec
\emph{S} ( \emph{T} ).

(16)

\protect\hypertarget{_bookmark12}{}{}( \emph{T} n \emph{, T} p \emph{,
T} g \emph{, T} t \emph{, Télé ,} \_ \textbf{p} \emph{, T} w \emph{, T}
r \emph{, T} s ) si \emph{T} x = 0

\protect\hypertarget{_bookmark13}{}{}\textbf{hachage parent~:} Le Keccak
256 bits hacher de la parent bloc de entête, dans son intégralité;
officiellement \emph{H} p .

\textbf{ommersHash~:} Le Keccak 256 bits hacher de la om-

mers liste portion de cette bloc; officiellement \emph{H} o .

\textbf{Bénéficiaire:} L'adresse 160 bits à laquelle tous les frais
collectés à partir de l'exploitation minière réussie de ce bloc être
transféré; officiellement \emph{Hc} . \_

\textbf{étatRoot~:} Le Keccak 256 bits hacher de la racine

nœud du trie d'état, après que toutes les transactions sont réalisé et
finalisations appliqué; officiellement \emph{Hr} . \_

\textbf{transactionsRoot~:} Le Keccak hachage 256 bits de la

racine nœud de la essayer structure peuplé avec chaque transaction dans
la partie liste des transactions du bloc; officiellement \emph{H} t .

\textbf{reçusRoot~:} Le Keccak 256 bits hacher de la racine

nœud de la structure de trie peuplée de la re- reçus de chaque
transaction dans la liste des transactions portion de la bloc;
officiellement \emph{Il} . \_

\textbf{logsBloom~:} Le Floraison filtre composé depuis indice-

informations disponibles (adresse de l'enregistreur et rubriques du
journal) contenues dans chaque entrée de journal à partir de la
réception de chaque transaction dans la liste des transactions~;
officiellement \emph{H} \textsubscript{b} .

\textbf{difficulté:} UN scalaire valeur correspondant pour la dif-

niveau de difficulté de ce bloc. Cela peut être calculé depuis la
précédent bloc de difficulté niveau et la horodatage~; officiellement
\emph{Hd} . \textsubscript{\_}

\textbf{Numéro:} UN scalaire valeur égal pour la Numéro de un-

blocs cestor. Le bloc de genèse a un certain nombre de zéro;
officiellement \protect\hyperlink{_bookmark30}{\emph{Salut}} .
\protect\hyperlink{_bookmark30}{\_}

où

c n p g t v

\textbf{UN} r \_ s x

\protect\hypertarget{_bookmark14}{}{}de gaz dépense par bloc;
officiellement \emph{H} \textsubscript{l} .

\textbf{gazutilisé~:} UN scalaire valeur égal pour la total gaz utilisé

(17) \textbf{p} \emph{T} \textbf{\textsubscript{je}} si \emph{T}
\textsubscript{t} = ∅

\emph{T} \textbf{\textsubscript{d}} autrement

Ici, nous supposons que tous les composants sont interprétés par le RLP
sous forme de valeurs entières, à l'exception de la liste d'accès
\emph{TA} \textbf{\textsubscript{\_}} et la arbitraire longueur octet
tableaux \emph{T} \textbf{\textsubscript{je}} et \emph{Td} .
\textbf{\textsubscript{\_}}

(18) \emph{T} x ∈ \{ 0 \emph{,} 1 \} ∧ \emph{T} c = \emph{β} ∧ \emph{T}
n ∈ N 256 ∧ \emph{T} p ∈ N 256 ∧ \emph{T} g ∈ N 256 ∧ \emph{T} v ∈ N 256
∧ \emph{T} w ∈ N 256 ∧ \emph{T} r ∈ N 256 ∧ \emph{T} s ∈ N 256 ∧
\emph{T} \textsubscript{y} ∈ N \textsubscript{1} ∧ \emph{T}
\textbf{\textsubscript{d}} ∈ B ∧ \emph{T} \textbf{\textsubscript{je}} ∈
B

où

(19) N n = \{ \emph{P} : \emph{P} ∈ N ∧ \emph{P \textless{}} 2 \emph{n}
\}

Le hachage d'adresse \emph{T} \textbf{t} est légèrement différente : il
s'agit soit d'un Hachage d'adresse de 20 octets ou, dans le cas d'un
contrat- création transaction (et Donc officiellement égal pour ∅ ), ce
est

la RLP vider octet séquence et Donc la membre de B 0 :

dans transactions dans cette bloc; officiellement \emph{Hg} . \_

\textbf{horodatage :} une valeur scalaire égale à la valeur raisonnable
sortie de time() d'Unix au début de ce bloc~;
\protect\hypertarget{_bookmark15}{}{}officiellement
\protect\hyperlink{_bookmark32}{\emph{Hs}} .
\protect\hyperlink{_bookmark32}{\_}

\textbf{extraData~:} Un arbitraire octet déployer contenant Les données

correspondant à ce bloc. Celui-ci doit être de 32~octets ou
\protect\hypertarget{_bookmark16}{}{}moins de; officiellement \emph{Hx}
. \_

\textbf{mixHash~:} UN 256 bits hacher qui, combiné avec la

fois, prouve qu'une quantité suffisante de calcul tation a été effectuée
sur ce bloc ; officiellement
\protect\hypertarget{_bookmark17}{}{}\emph{Hm} . \_

\textbf{nonce~:} UN 64 bits valeur qui, combiné avec la mélanger-

hash, prouve qu'une quantité suffisante de calcul tion a été effectuée
sur ce bloc ; officiellement \protect\hyperlink{_bookmark33}{\emph{Hn}}
. \protect\hyperlink{_bookmark33}{\_}
\end{quote}

\begin{enumerate}
\def\labelenumi{(\arabic{enumi})}
\setcounter{enumi}{19}
\item
  \emph{J}
\end{enumerate}

\begin{quote}
∈ f B 20 si \emph{T} t = ∅

\protect\hypertarget{_bookmark18}{}{}Le autre deux Composants dans la
bloc sont simplement un liste

B 0 sinon
\end{quote}

\begin{enumerate}
\def\labelenumi{\arabic{enumi}.}
\item
  \begin{quote}
  \protect\hypertarget{4.3._The_Block}{}{}\textbf{Le Bloc.} Le bloc dans
  Ethereum est la recueillir- informations pertinentes (connu sous le
  nom de bloc \emph{header} ), \emph{H} , ainsi que les informations
  correspondant à les transactions comprises, \textbf{T} , et un
  ensemble d'autres blocs les en-têtes \textbf{U} dont on sait qu'ils
  ont un parent égal au le parent du parent du bloc actuel (ces blocs
  sont appelés \emph{ommers}
  \protect\hyperlink{_bookmark20}{\textsuperscript{2}} ). Le bloc entête
  contient plusieurs des morceaux de information:
  \end{quote}
\end{enumerate}

\begin{quote}
de ommer bloc en-têtes (de la même format comme au dessus de),

\emph{BU} \textbf{\textsubscript{\_}} et un séries de la transactions,
\emph{BT} . \textbf{\textsubscript{\_}} Officiellement, nous pouvez
référer pour un bloc \emph{B} :
\end{quote}

\begin{enumerate}
\def\labelenumi{(\arabic{enumi})}
\setcounter{enumi}{20}
\item
  \begin{quote}
  \emph{B} ≡ ( \emph{BH ,} \textsubscript{\_} \emph{B}
  \textbf{\textsubscript{T}} \emph{, B} \textbf{\textsubscript{U}} )
  \end{quote}
\end{enumerate}

\begin{quote}
2 \protect\hypertarget{_bookmark20}{}{}\emph{heures} est un neutre de
genre terme pour moyenne "frère et sœur de parent"; voir
\href{https://nonbinary.miraheze.org/wiki/Gender_neutral_language_in_English\%23Aunt/Uncle}{https://nonbinary.miraheze.org/wiki/Gender\_neutral\_language\_in\_}
\href{https://nonbinary.miraheze.org/wiki/Gender_neutral_language_in_English\%23Aunt/Uncle}{Anglais\#tante/oncle}

ÉTHERUM~: UN SÉCURISE DÉCENTRALISÉ GÉNÉRALISÉ TRANSACTION COMPTABLE
\textbf{BERLIN VERSION} 6
\end{quote}

\begin{enumerate}
\def\labelenumi{\arabic{enumi}.}
\item
  \protect\hypertarget{_bookmark21}{}{}\emph{Reçu de transaction.} Pour
  encoder des informations à propos un transaction concernant qui ce mai
  être utile pour former une preuve sans connaissance, ou indexer et
  rechercher, nous encoder un reçu de chaque transaction contenant
  certaines informations formation dès son exécution. Chaque reçu, noté
  \emph{B} \textbf{\textsubscript{R}} {[} \emph{i} {]} pour la \emph{je}
  e transaction, est placé dans un
  \protect\hyperlink{_bookmark118}{trie} indexée
  \protect\hypertarget{_bookmark22}{}{}et la racine enregistré dans la
  entête comme \protect\hyperlink{_bookmark24}{\emph{Il}} .
  \protect\hyperlink{_bookmark24}{\_}
\end{enumerate}

\begin{quote}
Le transaction le reçu, \emph{R} , est un tuple de cinq éléments com-

en prenant : le type de transaction, \emph{R} x , le code de statut de
la transaction, \emph{R} z , le gaz cumulé utilisé dans le bloc
contenant le reçu de la transaction immédiatement après la transaction a
eu lieu, \emph{R} u , l'ensemble des journaux créés par l'exécution de
la transaction, \protect\hyperlink{_bookmark116}{\emph{R}
\textbf{\textsubscript{l}}} et la floraison filtre composé \_ \_ \_ \_
depuis information dans ceux journaux,
\protect\hyperlink{_bookmark114}{\emph{R} \textsubscript{b}} :
\end{quote}

\begin{enumerate}
\def\labelenumi{\arabic{enumi}.}
\setcounter{enumi}{1}
\item
  \emph{Validité holistique.} On peut affirmer la validité d'un bloc si
  et seul si ce satisfait plusieurs conditions: ce doit être dans-
  ternellement compatible avec l'ommer et le bloc de transaction
  hachages et les transactions données \emph{B}
  \textbf{\textsubscript{T}} (comme spécifié dans sec
  \protect\hyperlink{11._Block_Finalisation}{11),} lorsqu'il est exécuté
  dans l'ordre sur l'état de base \emph{\textbf{σ}} (dérivé à partir de
  l'état final du bloc parent), entraînent une nouvelle Etat de la
  identité \emph{Hr} : \_
\end{enumerate}

\begin{quote}
(33) \protect\hypertarget{_bookmark23}{}{}\emph{H} r ≡ TRIE ( \emph{L S}
(Π( \emph{\textbf{σ} , B} ))) ∧ \emph{H} \textsubscript{o} ≡ KEC ( RLP (
\emph{L} \textsuperscript{∗} \emph{\textsubscript{H}} ( \emph{B}
\textbf{\textsubscript{U}} ))) ∧ \emph{H} \textsubscript{t} ≡ TRIE ( \{∀
\emph{je \textless{}} ll \emph{B} \textbf{\textsubscript{T}} ll \emph{,
je} ∈ N :

\emph{pT} ( \textsubscript{je} \emph{, B} \textbf{\textsubscript{T}} {[}
\emph{je} {]}) \} ) ∧

\protect\hypertarget{_bookmark24}{}{}\emph{H} \textsubscript{e} ≡ TRIE (
\{∀ \emph{je \textless{}} ll \emph{B} \textbf{\textsubscript{R}} ll
\emph{, je} ∈ N :

\emph{p} \textsubscript{R} ( \emph{je, B} \textbf{\textsubscript{R}} {[}
\emph{je} {]}) \} ) ∧

\protect\hypertarget{_bookmark26}{}{}\emph{R} x est égal au
\protect\hyperlink{_bookmark4}{type} de l'opération correspondante.

Le une fonction \emph{LR} \_ se prépare un transaction le reçu pour être
transformé dans un RLP sérialisé octet déployer:
\end{quote}

\begin{enumerate}
\def\labelenumi{(\arabic{enumi})}
\setcounter{enumi}{22}
\item
  \emph{L} \textsubscript{R} ( \emph{R} ) ≡ ( \emph{R} \textsubscript{z}
  \emph{, R} \textsubscript{tu} \emph{, R} \textsubscript{b} \emph{, R}
  \textbf{\textsubscript{l}} )
\end{enumerate}

\begin{quote}
Nous affirmer que la statut code \emph{R} z est un non négatif

où \emph{p} T ( \emph{k, v} ) et \emph{p} R ( \emph{k, v} ) sont des
transformées RLP par paires- mais avec un traitement spécial pour les
transactions EIP-2718. tions~:

(34)

\emph{p} ( \emph{k, J} ) RLP ( \emph{k} ) \emph{,} RLP (
\protect\hyperlink{_bookmark12}{\emph{L} T} ( \emph{T} )) si \emph{T} x
= 0

( \emph{T} x ) · RLP ( \emph{L} T ( \emph{T} )) autrement

entier:
\end{quote}

\begin{enumerate}
\def\labelenumi{(\arabic{enumi})}
\setcounter{enumi}{23}
\item
  \begin{quote}
  \emph{R} z ∈ N
  \end{quote}
\end{enumerate}

\begin{quote}
Nous affirmer que \emph{R} tu , la cumulatif gaz utilisé, est un non-
négatif entier et que la journaux Floraison, \emph{R} \textsubscript{b}
, est un hacher de

et

(35)

\emph{p} R ( \emph{k, R} ) ≡

RLP ( \emph{k} ) \emph{,}

RLP ( \protect\hyperlink{_bookmark26}{\emph{L} R} ( \emph{R} )) si
\emph{R} x = 0

( \emph{R} x ) · RLP ( \emph{L} R ( \emph{R} )) autrement

Taille 2048 morceaux (256 octets):
\end{quote}

\begin{enumerate}
\def\labelenumi{(\arabic{enumi})}
\setcounter{enumi}{24}
\item
  \begin{quote}
  \emph{R} \textsubscript{tu} ∈ N ∧ \emph{R} \textsubscript{b} ∈ B
  \textsubscript{256}
  \end{quote}
\end{enumerate}

\begin{quote}
Le séquence \emph{R} \textbf{\textsubscript{l}} est un séries de Journal
entrées, ( \emph{O} \textsubscript{0} \emph{, O} \textsubscript{1}
\emph{, ...} ). Une entrée de journal, \emph{O} , est un tuple de
l'adresse de l'enregistreur, \emph{O a} , a série éventuellement vide de
sujets de journal de 32 octets, \emph{O} \textbf{t} et certains Numéro
de octets de Les données, \emph{O} \textbf{\textsubscript{d}} :

(26) \emph{O} ≡ ( \emph{O} \textsubscript{un} \emph{,} ( \emph{O}
\textsubscript{\textbf{t} 0} \emph{, O} \textsubscript{\textbf{t} 1}
\emph{, ...} ) \emph{, O} \textbf{\textsubscript{d}} )

(27) \emph{O} \textsubscript{un} ∈ B \textsubscript{20} ∧ ∀ \emph{x} ∈
\emph{O} \textbf{\textsubscript{t}} : \emph{x} ∈ B \textsubscript{32} ∧
\emph{O} \textbf{\textsubscript{d}} ∈ B

Nous définissons la fonction de filtre de Bloom, \emph{M} , pour réduire
un log entrée dans un Célibataire 256 octets hacher:

( · est le \_ \_ enchaînement de par te \_ arr a ys).

En outre:

(36) TRIE ( \emph{L} S ( \emph{\textbf{σ}} )) = \emph{P} ( \emph{BH \_}
) \emph{H} r

Ainsi TRIE ( \emph{L} S ( \emph{\textbf{σ}} )) est le hachage du nœud
racine du Merkle Patricia arbre structure contenant la valeur clé paires
de l'état \emph{\textbf{σ}} avec des valeurs codées en utilisant RLP, et
\emph{P} ( \emph{B} H ) est la parent bloc de \emph{B} , défini
directement.

Les valeurs issues du calcul des transactions notamment les
\protect\hyperlink{_bookmark21}{reçus de transaction,} \emph{B}
\textbf{\textsubscript{R}} , et que défini par la
\protect\hyperlink{_bookmark67}{fonction d'accumulation d'état} de la
transaction \protect\hyperlink{_bookmark67}{tion, Π,} sont formalisé
plus tard dans section
\protect\hyperlink{11.4._State_ux5cux26_Nonce_Validation}{11.4.}
\end{quote}

\begin{enumerate}
\def\labelenumi{\arabic{enumi}.}
\item
  \begin{quote}
  \emph{Sérialisation.} Le une fonction \emph{LB} \_ et \emph{L} H sont
  la prépa-
  \end{quote}
\end{enumerate}

\begin{quote}
(28) \emph{M} ( \emph{O} ) ≡
\end{quote}

\emph{x} ∈\{ \emph{O} une \}∪ \emph{O} \textbf{t}

\emph{M} 3:2048 ( \emph{x} )

\begin{quote}
ration les fonctions pour un bloc et bloc entête respectivement. Nous
affirmer la les types et Commande de la structure pour lorsque

où \emph{M} 3:2048 est un spécialisé Floraison filtre que ensembles
Trois

la RLP transformation est obligatoire:

morceaux dehors de 2048, donné un arbitraire octet séquence. Ce Est-ce
que

cette par prise la d'ordre inférieur 11 morceaux de chaque de la trois
premières paires d'octets dans un hachage Keccak-256 de l'octet
séquence. \protect\hyperlink{_bookmark28}{\textsuperscript{3}}
Officiellement:

(37)

(38)

\emph{L} \textsubscript{H} ( \emph{H} ) ≡ ( \emph{H} \textsubscript{p}
\emph{, Oh ,} \textsubscript{\_} \emph{H} \textsubscript{c} \emph{, Hr
,} \textsubscript{\_} \emph{H} \textsubscript{t} \emph{, Il ,}
\textsubscript{\_} \emph{H} \textsubscript{b} \emph{, Hd ,}
\textsubscript{\_}

\emph{Salut ,} \textsubscript{\_} \emph{Hl ,} \textsubscript{\_}
\emph{H} \textsubscript{g} \emph{, Hs ,} \textsubscript{\_} \emph{Hx ,}
\textsubscript{\_} \emph{Hm ,} \textsubscript{\_} \emph{H}
\textsubscript{n} )

\emph{L} \textsubscript{B} ( \emph{B} ) ≡ \emph{L} \textsubscript{H} (
\emph{B} \textsubscript{H} ) \emph{, L} ∗ T ( \emph{B}
\textbf{\textsubscript{T}} ) \emph{, L} \textsuperscript{∗}
\textsubscript{H} ( \protect\hyperlink{_bookmark18}{\emph{B}
\textbf{\textsubscript{U}}} )

(29) \emph{M}

( \textbf{x} : \textbf{X} ∈

\textbf{y} : \textbf{y} ∈ B 256 où: (0 \emph{,} 0 \emph{, ...,} 0) à
l'exception:

où \emph{L} J prend un spécial se soucier de EIP-2718 transactions:

B 2047 − \emph{m} ( \textbf{X} \emph{, je} ) ( \textbf{y} ) = 1

KEC ( \textbf{x} ){[} \emph{je, je} + 1{]} mode 2048
\end{quote}

(39)

\begin{quote}
\emph{L} J
\end{quote}

( \emph{T} ) = \protect\hyperlink{_bookmark12}{\emph{L} T} ( \emph{T} )
si \emph{T} x = 0

\begin{quote}
( \emph{T} x ) · RLP ( \emph{L} T ( \emph{T} )) autrement

où B est la fonction de référence de bit telle que B j ( \textbf{x} )
est égal à le bit d'index \emph{j} (indexé à partir de 0) dans le
tableau d'octets \textbf{x} . Notamment, ce traite \textbf{X} comme
big-endian (Suite important morceaux

sera avoir plus petite indices).

\protect\hypertarget{_bookmark27}{}{}avec \emph{L} \textsuperscript{∗}
\textsubscript{T} et \emph{L} \textsuperscript{∗} \textsubscript{H} être
\_ élément en t séquence transformations , Donc:

\emph{F} ∗\protect\hypertarget{_bookmark28}{}{} ( \emph{x} 0 \emph{, x1
,} \_ \emph{...} ) ≡ \emph{F} ( \emph{x} 0 ) \emph{, F} ( \emph{x} 1 )
\emph{, ...} pour quelconque une fonction \emph{F}

3 11 morceaux = 2 \textsuperscript{204 8} , et la l o w-commande 11
morceaux est la moi dulo \_ 2048 de la opérande , \_ qui \_ \_ \_ est
dans cette Cas est " chacun \_ \_ \_ de la première Trois paires d'
octets dans un Keccak-256 hacher de la octet séquence."

ÉTHERUM~: UN SÉCURISE DÉCENTRALISÉ GÉNÉRALISÉ TRANSACTION COMPTABLE
\textbf{BERLIN VERSION} 7

Le composant les types sont défini Donc:

(41) \href{/l}{\emph{H}} \protect\hyperlink{_bookmark13}{p} ∈ B 32 ∧
\emph{H} o ∈ B 32 ∧ \emph{H} c ∈ B 20 ∧
\protect\hyperlink{_bookmark23}{\emph{Hr} \_} ∈ B 32 ∧ \emph{H} t ∈ B 32
∧ \protect\hyperlink{_bookmark24}{\emph{H} e} ∈ B 32 ∧
\protect\hyperlink{_bookmark25}{\emph{H} \textsubscript{b}} ∈ B
\textsubscript{256} ∧ \emph{Hd} \textsubscript{\_} ∈ N ∧
\protect\hyperlink{_bookmark30}{\emph{Salut} \textsubscript{\_}} ∈ N ∧
\protect\hyperlink{_bookmark29}{\emph{H} \textsubscript{l}} ∈ N ∧
\emph{H} \textsubscript{g} ∈ N ∧
\protect\hyperlink{_bookmark32}{\emph{H} \textsubscript{s}} ∈ N
\textsubscript{256} ∧ \protect\hyperlink{_bookmark15}{\emph{H} x} ∈ B ∧
\emph{H} m ∈ B 32 ∧ \protect\hyperlink{_bookmark17}{\emph{H} n} ∈ B 8

où

(42) B n = \{ \emph{B} : \emph{B} ∈ B ∧ ll \emph{B} ll = \emph{n} \}

Nous disposons désormais d'un cahier des charges rigoureux pour la
construc- tion d'une structure de bloc formelle. La fonction RLP RLP
(voir annexe \protect\hyperlink{Appendix_B._Recursive_Length_Prefix}{B)}
fournit la méthode canonique de trans- formant cette structure en une
séquence d'octets prêts pour transmission terminé la câble ou alors
stockage localement.

\protect\hyperlink{_bookmark77}{{[}2016a{]}.} Dans la version
\emph{Byzance} , avec EIP-649, la glace l'âge a été retardé en créant un
faux numéro de bloc, \emph{H} \textsubscript{i} , qui est obtenu en
soustrayant trois millions de la valeur réelle numéro de bloc, ce qui en
d'autres termes a réduit \emph{E} et le différence de temps entre les
blocs, afin de permettre plus temps pour développer preuve de
participation et empêcher la réseau de « geler ». Par la suite, EIP-1234
par \protect\hyperlink{_bookmark94}{Schoedon}
\protect\hyperlink{_bookmark94}{{[}2018{]},} EIP-2384 par
\protect\hyperlink{_bookmark83}{Conner {[}2019{]},} EIP-3554 par
\protect\hyperlink{_bookmark102}{Hancock}
\protect\hyperlink{_bookmark102}{{[}2021{]},} et EIP-4345 par
\protect\hyperlink{_bookmark71}{Beiko et Al. {[}2021a{]}} a augmenté la
\protect\hypertarget{_bookmark29}{}{}soustraire \emph{κ} .

La limite canonique des gaz \emph{H} \textsubscript{l} d'un bloc
d'en-tête \emph{H} doit remplir la relation:
\end{quote}

\begin{enumerate}
\def\labelenumi{\arabic{enumi}.}
\setcounter{enumi}{1}
\item
  \emph{Bloc Entête Validité.} On définit \emph{P} ( \emph{B} H parent
  bloc de \emph{B} , officiellement:
\end{enumerate}

) pour être la

\begin{quote}
(53)

\emph{H} \textsubscript{l} \emph{\textless{} P} ( \emph{H} )
\textsubscript{H} l

+ \emph{P} ( \emph{H} ) H l
\end{quote}

1024

\protect\hypertarget{_bookmark30}{}{} \underline{\emph{P} ( \emph{H} )}

\begin{quote}
Le bloc Numéro est la parents bloc Numéro augmenter- menté par une:

(44 ) \emph{Salut} \protect\hypertarget{_bookmark31}{}{}≡ \emph{P} (
\emph{H} ) Salut \_ + 1

Le canonique difficulté de un bloc de entête \emph{H} est défini comme
\emph{D} ( \emph{H} ):

(45)

\emph{H} \textsubscript{l} ;;: 5000

\protect\hypertarget{_bookmark32}{}{}\emph{H} s est la horodatage (dans
d'Unix temps()) de bloc \emph{H} et doit remplir la relation:

\emph{D} ( \emph{H} ) ≡

où:

maximum \emph{ré}
\end{quote}

min

\emph{, P} ( \emph{H} ) H d

\begin{quote}
+ \emph{X} × \emph{ς} 2

+ \emph{E} autrement

(54) \emph{H} s \emph{\textgreater{} P} ( \emph{H} ) H s

(46)

(47)

(48)

\emph{D} min ≡ 2 17

\emph{x P} ( \emph{H} ) H d 2048

\emph{ς} 2 ≡ maximum ( \emph{y} −

\underline{\emph{H} s − \emph{P} ( \emph{H} ) H} s
\end{quote}

\emph{,} − 99

\begin{quote}
Ce mécanisme impose une homéostasie en termes de temps entre blocs; un
plus petite période entre la dernière deux blocs entraîne une
augmentation du niveau de difficulté et donc Additionnel calcul
obligatoire, rallongement la probable suivant période. Inversement, si
la période est aussi grande, la

(49)

(50)

(51)

\emph{y} 1 si ll \emph{P} ( \emph{H} ) \textbf{\textsubscript{U}} ll = 0

2 autrement

\emph{E} ≡ 2 l \emph{H} i \emph{t} ÷ 100000 J − 2

\emph{Salut} \textsubscript{\_} ≡ max( \emph{H} \textsubscript{je} −
\emph{κ,} 0)

difficulté, et \protect\hypertarget{_bookmark33}{}{}attendu temps pour
la suivant bloc, est réduit.

Le non fois, \protect\hyperlink{_bookmark17}{\emph{H} n} , doit
satisfaire la rapports:

2 256

5000000

9000000

9700000

  10700000 si \emph{Salut} \_

;;: \emph{F}
\end{quote}

FlècheGlacier

\begin{quote}
∧m \emph{\_} = \emph{H} m

\protect\hypertarget{_bookmark34}{}{}n \emph{,} \textbf{d} ).

ock's header \emph{H} , mais \emph{sans} le nonce et mélange-hachage
Composants, \textbf{ré} être la courant GAD, un grande Les données
Positionner avait besoin pour calculer la mélange-hachage, et PoW

Le \emph{Propriété} difficulté paramètre, \emph{ς} 2 , est utilisé pour
affecter

un dynamique homéostasie de temps entre blocs, comme la temps entre les
blocs varie, comme indiqué ci-dessous, tel que mis en œuvre dans EIP-2
par \protect\hyperlink{_bookmark76}{Butérine}
\protect\hyperlink{_bookmark76}{{[}2015{]}.} Dans la Propriété
Libération, le symbole de difficulté exponentielle, \emph{E} provoque la
difficulté à augmenter lentement (tous les 100 000 blocs) à un rythme
exponentiel taux, et augmentant ainsi la différence de temps de bloc, et
mettre une pression de temps sur la transition vers la preuve de
participation. Cet effet, connu sous le nom de "bombe de difficulté", ou
"ère glaciaire", a été expliqué dans EIP-649 par
\protect\hyperlink{_bookmark95}{Schoedon et Butérine {[}2017{]}}

et retardé et mis en œuvre plus tôt dans EIP-2. \emph{ς} 2 était aussi
modifié dans EIP-100 avec l'utilisation de \emph{x} , l'ajustement
facteur ci-dessus, et le dénominateur 9, afin de cibler la moyenne bloc
temps y compris oncle blocs par
\protect\hyperlink{_bookmark77}{Butérine}

est la preuve de travail une fonction (voir section
\protect\hyperlink{11.5._Mining_Proof-of-Work}{11.5):} cette évaluer-

ates à un tableau avec le premier élément étant le mix-hash, à prouver
que un Corriger DAG possède a été utilisé, et la seconde Objet être un
pseudo-aléatoire Numéro cryptographiquement dépendant de \emph{H} et
\textbf{d} . Étant donné un approximativement uniforme Distribution dans
le plage {[}0 \emph{,} 2 \textsuperscript{64} ), la temps prévu pour
trouver un Solution est proportionnel pour la difficulté, \emph{Hd} .
\textsubscript{\_}

C'est le fondement de la sécurité de la blockchain et est la raison
fondamentale pour laquelle un nœud malveillant peut- ne pas propager les
blocs nouvellement créés qui, autrement, écraser ("réécrire")
l'historique. Parce que le nonce doit s'asseoir satisfait à cette
exigence, et parce que sa satisfaction dépend sur le contenu du bloc et
à son tour sa composition transactions, créer Nouveau, valide, blocs est
difficile et,

ÉTHERUM~: UN SÉCURISE DÉCENTRALISÉ GÉNÉRALISÉ TRANSACTION COMPTABLE
\textbf{BERLIN VERSION} 8

terminé temps, a besoin environ la total calculer Puissance
\protect\hypertarget{_bookmark35}{}{}de la fiable portion de la
exploitation minière pairs.

Ainsi nous sont capable pour définir la bloc entête validité une
fonction \emph{V} ( \emph{H} ):

256
\end{quote}

\begin{enumerate}
\def\labelenumi{(\arabic{enumi})}
\setcounter{enumi}{55}
\item
  \emph{V} ( \emph{H} ) ≡ \emph{n H} ∧ \emph{m} = \emph{H} m ∧
\end{enumerate}

\begin{quote}
\emph{Hd} \textsubscript{\_} = \emph{ré} ( \emph{H} ) ∧

\emph{H} \textsubscript{g} ≤ \emph{H} \textsubscript{l} ∧
\end{quote}

\begin{enumerate}
\def\labelenumi{\arabic{enumi}.}
\setcounter{enumi}{5}
\item
  Transaction Exécution
\end{enumerate}

\begin{quote}
L'exécution d'une transaction est la partie la plus complexe du
protocole Ethereum : il définit la transition d'état fonction
\protect\hyperlink{_bookmark0}{Υ.} Il est supposé que toutes les
transactions exécutées première passer la initial essais de intrinsèque
validité. Celles-ci inclure:
\end{quote}

\begin{enumerate}
\def\labelenumi{\arabic{enumi}.}
\item
  La transaction est bien formé RLP, avec pas d'addi- national traînant
  octets~;
\item
  la transaction Signature est valide;
\end{enumerate}

\begin{quote}
\emph{H} \textsubscript{l} \emph{\textless{} P} ( \emph{H} )
\textsubscript{H} l

+ \emph{P} ( \emph{H} ) H l

1024

\emph{P} ( \emph{H} ) H l
\end{quote}

\begin{enumerate}
\def\labelenumi{\arabic{enumi}.}
\setcounter{enumi}{2}
\item
  \begin{quote}
  la \protect\hyperlink{_bookmark40}{transaction nonce} est valide
  (équivalent pour la \protect\hyperlink{_bookmark3}{expéditeur comptes
  courant nonce);}
  \end{quote}
\item
  \begin{quote}
  la expéditeur Compte possède non Contrat code déployé
  \end{quote}
\end{enumerate}

\begin{quote}
\emph{H} \textsubscript{l} ;;: 5000 ∧

\emph{H} s \emph{\textgreater{} P} ( \emph{H} ) H s ∧

\emph{Salut} \_ = \emph{P} ( \emph{H} ) Salut \_ + 1 ∧

ll \emph{H} x ll ≤ 32

où ( \emph{n, m} ) = PoW ( \emph{H} n \emph{, H} n \emph{,} \textbf{ré}
)

Notant aditionellement que \textbf{extraData} doit être à plus 32
octets.

5. Gaz et paiement

Afin d'éviter les problèmes d'abus de réseau et d'éviter les inévitables
questions issues de Turing complètent- ness, tous les calculs
programmables dans Ethereum sont soumis pour frais. Le frais programme
est spécifié dans unités de \emph{gaz} (voir Ap- appendice
\protect\hyperlink{Appendix_G._Fee_Schedule}{g} pour la frais associé
avec divers calcul). Ainsi tout fragment donné de calcul programmable
(cette comprend créer contrats, fabrication message appels, utiliser et
accéder au stockage du compte et exécuter des op- rations sur la machine
virtuelle) a un consensus universel Coût dans termes de gaz.

Chaque transaction a une quantité spécifique de gaz associée é avec ce:
\textbf{GasLimit} . Cette est la montant de gaz qui est implicitement
acheté à partir du solde du compte de l'expéditeur. L'achat a lieu au
prix du \textbf{gaz correspondant} , aussi spécifié dans la transaction.
Le transaction est consi- ered invalide si la Compte solde ne peux pas
Support tel un achat. Ce est nommé \textbf{GasLimit} puisque quelconque
inutilisé gaz à la finir de la transaction est remboursé (à la même taux
d'achat) sur le compte de l'expéditeur. Le gaz ne existent en dehors de
l'exécution d'une transaction. Ainsi pour comptes avec de confiance code
associé, un relativement haute gaz limite mai être Positionner et la
gauche seule.

En général, Ether achetait du gaz qui n'est pas recyclé. financé est
livré à l' adresse du \emph{bénéficiaire} , l'adresse de un Compte
typiquement en dessous de la contrôler de la mineur. Transacteurs sont
libre pour spécifier quelconque \textbf{gazPrix} que elles ou ils
souhaite, cependant les mineurs sont libres d'ignorer les transactions
comme ils choisissent. Un prix du gaz plus élevé sur une transaction
avant Coût la expéditeur Suite dans termes de Éther et livrer une plus
grande valeur pour le mineur et sera donc plus susceptible d'être
sélectionné pour être inclus par plus de mineurs. Les mineurs, en
général, choisira d'annoncer le prix minimum du gaz pour lequel ils
exécuteront des transactions et les commerçants seront libres de sonder
ces prix pour déterminer le prix du gaz à offre. Puisqu'il y aura une
distribution (pondérée) de min- prix du gaz acceptables, les opérateurs
devront nécessairement ont un compromis à faire entre la baisse du prix
du gaz et maximiser les chances que leur transaction soit miné dans un
opportun manière.
\end{quote}

\begin{enumerate}
\def\labelenumi{\arabic{enumi}.}
\setcounter{enumi}{4}
\item
  \begin{quote}
  la gaz limite est non plus petite que la intrinsèque gaz,
  \end{quote}
\end{enumerate}

\begin{quote}
\emph{g} 0 , utilisé par la transaction; et
\end{quote}

\begin{enumerate}
\def\labelenumi{\arabic{enumi}.}
\setcounter{enumi}{5}
\item
  \begin{quote}
  la expéditeur Compte solde contient à moins la Coût, \emph{v} 0 ,
  obligatoire dans à l'avant Paiement.
  \end{quote}
\end{enumerate}

\begin{quote}
Officiellement, nous considérer la une fonction
\protect\hyperlink{_bookmark0}{Υ,} avec \emph{J} être un transaction et
\emph{\textbf{σ}} la Etat:

(57 \emph{\textbf{)}} = Υ( \emph{\textbf{σ} , J} )

Ainsi \emph{\textbf{σ}} est l'état post-transactionnel. Nous définissons
également \protect\hyperlink{_bookmark42}{Υg \textsuperscript{\_}} pour
évaluer pour la montant de gaz utilisé dans la exécution d'une
transaction, \protect\hyperlink{_bookmark42}{Υ
\textbf{\textsuperscript{l}}} à évaluer par rapport aux charges à payer
de la transaction éléments de log et \protect\hyperlink{_bookmark42}{Υ
\textsuperscript{z}} pour évaluer le code d'état résultant depuis la
transaction. Celles-ci sera être officiellement défini plus tard.
\end{quote}

\begin{enumerate}
\def\labelenumi{\arabic{enumi}.}
\item
  \protect\hypertarget{6.1._Substate}{}{}\textbf{Sous-état.} Tout au
  long de l'exécution de la transaction, nous assurons Crue certaines
  informations qui sont traitées immédiatement suite à l'opération. Nous
  appelons cela la \emph{transaction accumulée. sous-état de tion} , ou
  sous- \emph{état accumulé} en abrégé, et représentent ce comme
  \emph{Un} , qui est un tuple~:
\end{enumerate}

\begin{quote}
(58) \emph{Un} ≡ ( \emph{Un} \textbf{\textsubscript{s}} \emph{,}
\textbf{\textsubscript{Al}} \emph{, \_ A} \textbf{\textsubscript{t}}
\emph{, A} \textsubscript{r} \emph{, Un} \textbf{\textsubscript{un}}
\emph{,} \textbf{\textsubscript{AK}} ) \emph{\_}

Le contenu du tuple inclut \emph{A} \textbf{s} , l'ensemble
d'autodestruction : un ensemble de comptes qui seront éliminés suite à
la trans- l'achèvement de l'action.
\protect\hypertarget{_bookmark38}{}{}\emph{A} \textbf{\textsubscript{l}}
est la série log : il s'agit d'une série de archivé et indexable 'points
de contrôle' dans VM code exécution qui permettent aux appels
contractuels d'être facilement suivis par onlook- ers externes au monde
Ethereum (tels que décentralisés frontaux d'application). \emph{A}
\textbf{t} est l'ensemble des comptes touchés, de qui la vider ceux sont
supprimé à la finir de un transac- tion.
\protect\hypertarget{_bookmark37}{}{}\emph{Un} r est le solde du
remboursement, augmenté grâce à l'utilisation la

\protect\hyperlink{_bookmark145}{STORE} instruction dans Commande pour
réinitialiser Contrat stockage pour

zéro à partir d'une valeur non nulle. Bien que pas immédiatement
remboursé, ce est autorisé pour partiellement décalage la total
exécution frais. Enfin, EIP-2929 par
\protect\hyperlink{_bookmark81}{Buterin et Swende {[}2020a{]}} introduit
\protect\hypertarget{_bookmark39}{}{}\emph{A} \textbf{a} , l'ensemble
des adresses de compte consultées, et \emph{A}
\textbf{\textsubscript{K}} , l'ensemble des clés de stockage accédées
(plus précisément, chaque élément \textbf{\textsubscript{de}} \emph{AK}
est un tuple d'une adresse de compte de 20 octets et un 32 octets
stockage insérer).

Nous définissons le sous-état accumulé vide \emph{A} \textsuperscript{0}
ne pas avoir s'autodétruit, non journaux, non touché comptes, zéro
rembourser bal-

ance, tous les contrats précompilés dans les adresses consultées, et non
accédé stockage:

(59) \emph{Un} \textsuperscript{0} ≡ ( ∅ \emph{,} () \emph{,} ∅ \emph{,}
0 \emph{, π,} ∅ )

où \emph{\protect\hyperlink{_bookmark51}{π}} est la Positionner de tout
précompilé adresses.

ÉTHERUM~: UN SÉCURISE DÉCENTRALISÉ GÉNÉRALISÉ TRANSACTION COMPTABLE
\textbf{BERLIN VERSION} 9
\end{quote}

\begin{enumerate}
\def\labelenumi{\arabic{enumi}.}
\setcounter{enumi}{1}
\item
  \begin{quote}
  \textbf{Exécution.} Nous définissons le gaz intrinsèque \emph{g} 0 ,
  la quantité de gaz que cette transaction nécessite d'être payé avant
  l'exécution, comme suit :
  \end{quote}
\end{enumerate}

\begin{quote}
accumulé sous-état \emph{UN} et statut code \emph{z} : (66)

 \textbf{} \protect\hyperlink{_bookmark44}{Λ} 4 ( \emph{\textbf{σ}} 0
\emph{, A} \textsuperscript{∗} \emph{, S} ( \emph{T} ) \emph{, S} (
\emph{T} ) \emph{, g ,}

\emph{g} 0 ≡

f \protect\hyperlink{_bookmark136}{\emph{G} txdatazero} si \emph{je} = 0

\protect\hyperlink{_bookmark47}{Θ} 4 ( \emph{\textbf{σ}} 0 \emph{, UN ,
S} ( \emph{T} ) \emph{, S} ( \emph{T} ) \emph{, T} t \emph{,}

 \emph{T} \textsubscript{t} \emph{, g , T} \textsubscript{p} \emph{,
Télé ,} \textsubscript{\_} \emph{Télé ,} \textsubscript{\_} \emph{T}
\textbf{\textsubscript{d}} \emph{,} 0 \emph{,} T ) autrement

\emph{je} ∈ \emph{T} \textbf{je} \emph{,T} \textbf{ré}

\protect\hyperlink{_bookmark137}{\emph{G} txdatanonzero} autrement

où

+ \protect\hyperlink{_bookmark135}{\emph{G} txcreate} si \emph{T} t = ∅

0 sinon

(67)

(68)

\emph{Un} \textsuperscript{∗} ≡ \emph{Un} \textsuperscript{0} à
l'exception

\emph{Un} \textsuperscript{∗} \textbf{\textsubscript{un}} ≡ \emph{Un}
\textsuperscript{0} ∪ \{ \emph{S} ( \emph{T} ) \} ∪
\textsubscript{\emph{E} ∈ \emph{T}}

\{ \protect\hyperlink{_bookmark9}{\emph{E}} une \}

+ \protect\hyperlink{_bookmark138}{transaction\emph{~G}}

\emph{TA} \textbf{\_} − 1

(69)
\end{quote}

\textbf{un}

\begin{quote}
\emph{A} \textsuperscript{∗} \textbf{\textsubscript{K}} ≡ L

\textbf{UN}

\{ ∀ \emph{je \textless{}} ll \emph{E} ll \emph{,} \textbf{\_} \emph{je}
∈ N : ( \emph{E} a \emph{, E} \textbf{s} {[} \emph{je} {]}) \}

+
\end{quote}

\emph{j} =0

\begin{quote}
Adresse de la liste d'accès \emph{G} + ll \emph{T} \textbf{A} {[}
\emph{j} {]} \textbf{s} ll \emph{G} accessliststorage

\emph{E} ∈ \emph{TA} \textbf{\_}

et \emph{g} est la montant de gaz restant après déduire

où \emph{T} \textbf{\textsubscript{je}} \emph{, T}
\textbf{\textsubscript{d}} signifie la série d'octets de la transaction
associé Les données et initialisation code EVM, en fonction,
dépendemment sur qu'il s'agisse la transaction est pour création de
contrat ou alors message-

appel. \emph{G} txcreate est ajoutée si la transaction est Contrat-
création, mais pas si un résultat de code EVM.
\protect\hyperlink{_bookmark132}{\textsubscript{Adresse de la liste
d'accès} \emph{G}} et \protect\hyperlink{_bookmark133}{\emph{G}
\textsubscript{accessliststorage}} sont les frais d'échauffement et
stockage accéder, respectivement. \emph{g} est pleinement défini dans
Ap-

appendice \protect\hyperlink{Appendix_G._Fee_Schedule}{G.}

Le à l'avant Coût \emph{v} 0 est calculé comme:

(61) \emph{contre} 0 ≡ \protect\hyperlink{_bookmark6}{\emph{T} g}
\protect\hyperlink{_bookmark5}{\emph{T} p} +
\protect\hyperlink{_bookmark7}{\emph{Télévision} \_}

Le validité est déterminé comme:

la basique montant obligatoire pour Payer pour la existence de la
transaction:
\end{quote}

\begin{enumerate}
\def\labelenumi{(\arabic{enumi})}
\setcounter{enumi}{69}
\item
  \emph{g} ≡ \emph{T} g − \emph{g} 0
\end{enumerate}

\begin{quote}
Notez que nous utilisons \protect\hyperlink{_bookmark47}{Θ} 4 et
\protect\hyperlink{_bookmark44}{Λ} 4 pour indiquer le fait que seul le
les quatre premières composantes des valeurs des fonctions sont prises~;
la finale représente la valeur de sortie de l'appel de message (un octet
déployer) et est inutilisé dans la le contexte de transaction évaluer-

tion.

Après le traitement de l'appel de message ou de la création du contrat,
le compteur de remboursement doit être incrémenté pour les comptes que
ont été auto-détruit tout au long de son invocation.
\end{quote}

\begin{enumerate}
\def\labelenumi{(\arabic{enumi})}
\setcounter{enumi}{70}
\item
  \begin{quote}
  \emph{Un} r ≡ \emph{Un} r + \emph{R} autodestruction
  \end{quote}
\end{enumerate}

\begin{quote}
\emph{je} ∈ \emph{A} \textbf{s}

(62) \emph{S} ( \emph{T} ) = ∅

\protect\hypertarget{_bookmark40}{}{} ∧

Puis la Etat est finalisé par déterminer la montant

\emph{T} n = \emph{\textbf{σ}} {[} \emph{S} ( \emph{T} ){]} n ∧

\emph{g} 0 \emph{T} g ∧

\emph{v} \textsubscript{0} \emph{\textbf{σ}} {[} \emph{S} ( \emph{T}
){]} \textsubscript{b} ∧

allocation depuis la rembourser compteur, pour la expéditeur à la
original taux.

\emph{T} \textsubscript{g} \emph{B} \textsubscript{H l} −
\protect\hyperlink{_bookmark2}{\emph{.€}} ( \emph{B}
\textbf{\textsubscript{R}} ) \textsubscript{u}

Noter la final état; la somme de la transactions gaz
\end{quote}

\begin{enumerate}
\def\labelenumi{(\arabic{enumi})}
\setcounter{enumi}{71}
\item
  \begin{quote}
  \emph{\hfill\break
  g} \textsuperscript{∗} ≡ \emph{g}
  \end{quote}
\end{enumerate}

\begin{quote}
+ min
\end{quote}

\emph{T} g − \emph{g}

\emph{, Un} \textsubscript{r}

\begin{quote}
limite, \emph{T} g , et la gaz utilisé dans cette bloc avant, donné par

\protect\hyperlink{_bookmark2}{\emph{.€}} ( \emph{B}
\textbf{\textsubscript{R}} ) \textsubscript{u} , je dois être \_ non
plus grand que la bl o c k's \textbf{GasLimi t} , \emph{B}
\textsubscript{Hl} . Aussi, avec un léger abuser de de notation, nous
présumer que \emph{\textbf{σ}} {[} \emph{S} ( \emph{T} ){]}
\textsubscript{c} = KEC () , \emph{\textbf{σ}} {[} \emph{S} ( \emph{T}
){]} \textsubscript{n} = 0, et \emph{\textbf{σ}} {[} \emph{S} ( \emph{T}
){]} \textsubscript{b} = 0 si \emph{\textbf{σ}} {[} \emph{S} ( \emph{T}
){]} = ∅ .

Le exécution de un valide transaction commence avec un changement
irrévocable apporté à l'état : le \protect\hyperlink{_bookmark3}{nonce
de la} \protect\hyperlink{_bookmark3}{compte de l'expéditeur,} \emph{S}
( \emph{T} ), est incrémenté de un et le solde est réduit par partie de
la à l'avant Coût, \emph{T} g \emph{T} p . Le

Le total remboursable montant est la légitimement rester-

gaz \emph{g} , ajoutée à \protect\hyperlink{_bookmark37}{\emph{A} r} ,
cette dernière composante étant plafonné à un maximum de la moitié
(arrondi à l'inférieur) du quantité totale utilisée \emph{T} g −
\emph{g} . Donc, \emph{g} \textsuperscript{∗} est le gaz total que
restes après la transaction possède a été réalisé.

Le Éther pour la gaz est donné pour la mineur, à qui adresse est
spécifié comme la Bénéficiaire de la cadeau bloc

\emph{B.} \_ Alors nous définir la pré-finale Etat \emph{\textbf{σ}}
\textsuperscript{∗} dans termes de la

provisoire Etat \emph{\textbf{σ}} P :

gaz disponible pour la procéder calcul, \emph{g} , est défini

comme \emph{T} g − \emph{g} 0 . Le calcul, qu'il s'agisse Contrat
création
\end{quote}

\begin{enumerate}
\def\labelenumi{(\arabic{enumi})}
\setcounter{enumi}{72}
\tightlist
\item
\end{enumerate}

\begin{quote}
\emph{\textbf{σ}} ∗ ≡ \emph{\textbf{σ}} P à l'exception

ou un appel de message, aboutit à un état éventuel (qui peut
juridiquement équivalent à l'état actuel), le passage à qui est
déterministe et jamais invalide : il ne peut y avoir invalide
transactions depuis cette indiquer.
\end{quote}

\begin{enumerate}
\def\labelenumi{(\arabic{enumi})}
\setcounter{enumi}{73}
\tightlist
\item
\item
\item
\end{enumerate}

\begin{quote}
\emph{\textbf{σ}} \textsuperscript{∗} {[} \emph{S} ( \emph{T} ){]}
\textsubscript{b} ≡ \emph{\textbf{σ}} \textsubscript{P} {[} \emph{S} (
\emph{T} ){]} \textsubscript{b} + \emph{g} \textsuperscript{∗} \emph{T}
\textsubscript{p}

\emph{\textbf{σ}} \textsuperscript{∗} {[} \emph{m} {]} \textsubscript{b}
≡ \emph{\textbf{σ}} \textsubscript{P} {[} \emph{m} {]} \textsubscript{b}
+ ( \emph{T} \textsubscript{g} − \emph{g} \textsuperscript{∗} ) \emph{T}
\textsubscript{p} \emph{m} ≡ \emph{BHC} \textsubscript{\_}

Nous définir la point de contrôle Etat \emph{\textbf{σ}} 0 :
\end{quote}

Le final Etat, \emph{\textbf{σ}} , est atteint après suppression tout
comptes

\protect\hypertarget{_bookmark41}{}{}que Soit apparaître dans la
auto-destruction Positionner ou alors sont touché

\begin{quote}
(63)

(64)

\emph{\textbf{σ}} 0 ≡ \emph{\textbf{σ}} à l'exception:

\emph{\textbf{σ}} \textsubscript{0} {[} \emph{S} ( \emph{T} ){]}
\textsubscript{b} ≡ \emph{\textbf{σ}} {[} \emph{S} ( \emph{T} ){]}
\textsubscript{b} − \emph{T} \textsubscript{g} \emph{T}
\textsubscript{p}

et vider:
\end{quote}

\begin{enumerate}
\def\labelenumi{(\arabic{enumi})}
\setcounter{enumi}{76}
\tightlist
\item
\end{enumerate}

\begin{quote}
\emph{\textbf{σ}} ≡ \emph{\textbf{σ}} \textsuperscript{∗} à l'exception

(65)

\emph{\textbf{σ}} 0 {[} \emph{S} ( \emph{T} ){]} n ≡ \emph{\textbf{σ}}
{[} \emph{S} ( \emph{T} ){]} n + 1
\end{quote}

\begin{enumerate}
\def\labelenumi{(\arabic{enumi})}
\setcounter{enumi}{77}
\tightlist
\item
\end{enumerate}

\begin{quote}
∀ \emph{je} ∈ \emph{Un} \textbf{s} : \emph{\textbf{σ}} {[} \emph{je} {]}
= ∅

Évaluation \emph{\textbf{σ}} P

depuis \emph{\textbf{σ}} 0

dépend sur la transaction taper;
\end{quote}

\begin{enumerate}
\def\labelenumi{(\arabic{enumi})}
\setcounter{enumi}{78}
\tightlist
\item
\end{enumerate}

\begin{quote}
∀ \emph{je} ∈ \emph{Un} \textbf{t} : \emph{\textbf{σ}} {[} \emph{je} {]}
= ∅ si MORT ( \emph{\textbf{σ}} ∗ \emph{, je} )

Soit Contrat création ou alors message appel; nous définir la tuple de
post-exécution provisoire Etat \emph{\textbf{σ}} P , restant gaz
\emph{g} ,

\protect\hypertarget{_bookmark42}{}{}Et finalement, nous spécifier Υ
\textsuperscript{g} , la total gaz utilisé dans cette transaction Υ
\textbf{\textsuperscript{l}} , la journaux créé par cette transaction et

ÉTHERUM~: UN SÉCURISE DÉCENTRALISÉ GÉNÉRALISÉ TRANSACTION COMPTABLE
\textbf{BERLIN VERSION} 10

Υ \textsuperscript{z} , la statut code de cette transaction:

(90)

\emph{\textbf{σ}} \textsuperscript{∗} {[} \emph{une} {]} = 1 \emph{, v}
+ \emph{v ,} \protect\hyperlink{_bookmark118}{TRIE} ( ∅ ) \emph{,} KEC
()
\end{quote}

\begin{enumerate}
\def\labelenumi{(\arabic{enumi})}
\setcounter{enumi}{79}
\tightlist
\item
\item
\end{enumerate}

\begin{quote}
Υ g ( \emph{\textbf{σ} , J} ) ≡ \emph{T} g − \emph{g} ∗

Υ \textbf{\textsuperscript{l}} ( \emph{\textbf{σ} , J} ) ≡
\protect\hyperlink{_bookmark38}{\emph{A} \textbf{\textsubscript{l}}}

(91)

\emph{\textbf{σ}} \textsuperscript{∗} {[} \emph{s} {]} =

∅ si \emph{\textbf{σ}} {[} \emph{s} {]} = ∅ ∧ \emph{v} = 0

\textbf{un} \textsuperscript{∗} autrement
\end{quote}

\begin{enumerate}
\def\labelenumi{(\arabic{enumi})}
\setcounter{enumi}{81}
\tightlist
\item
\end{enumerate}

\begin{quote}
Υ \textsuperscript{z} ( \emph{\textbf{σ} , J} ) ≡ \emph{z}

(92)

\textbf{un} \textsuperscript{∗} ≡ ( \emph{\textbf{σ}} {[} \emph{s} {]}
\textsubscript{n} \emph{, \textbf{σ }}{[} \emph{s} {]} \textsubscript{b}
− \emph{v , \textbf{σ }}{[} \emph{s} {]} \textbf{\textsubscript{s}}
\emph{, \textbf{σ }}{[} \emph{s} {]} \textsubscript{c} )

Ceux-ci sont utilisés pour aider à définir le
\protect\hyperlink{_bookmark21}{reçu de transaction} et sont aussi
utilisé \protect\hyperlink{_bookmark66}{plus tard} pour Etat et nonce
validation.
\end{quote}

\begin{enumerate}
\def\labelenumi{\arabic{enumi}.}
\setcounter{enumi}{5}
\item
  \begin{quote}
  Contrat Création
  \end{quote}
\end{enumerate}

\begin{quote}
Il existe un certain nombre de paramètres intrinsèques utilisés lorsque
créer un compte: expéditeur ( \emph{s} ), agent d'origine
\protect\hyperlink{_bookmark46}{\textsuperscript{4}} ( \emph{o} ), gaz
disponible ( \emph{g} ), prix du gaz ( \emph{p} ), dotation ( \emph{v} )
ensemble avec un arbitraire tableau d'octets de longueur, \textbf{je} ,
l'initialisation EVM code, la cadeau profondeur de la
message-appel/contrat- pile de création ( \emph{e} ), le sel pour
l'adresse du nouveau compte ( \emph{ζ} ) et enfin l' autorisation
d'apporter des modifications au Etat ( \emph{w} ). Le sel \emph{ζ}
pourrait être disparu ( \emph{ζ} = ∅~); officiellement,

(83) \emph{ζ} ∈ B 32 ∪ B 0

où \emph{v} est la valeur préexistante du compte, dans le cas où ce a
été précédemment dans existence:

(93) \emph{v} 0 si \emph{\textbf{σ}} {[} \emph{une} {]} = ∅

\emph{\textbf{σ}} {[} \emph{une} {]} \textsubscript{b} autrement

Enfin, le compte est initialisé par l'exécution du code EVM
d'initialisation \textbf{i} en fonction de l'exécution modèle (voir
section \protect\hyperlink{9._Execution_Model}{9).} L'exécution du code
peut affecter plusieurs événements qui ne sont pas internes à l'état
d'exécution~: la le stockage du compte peut être modifié, d'autres
comptes peuvent être créés et d'autres appels de messages peuvent être
passés. En tant que tel, la fonction d'exécution de code
\protect\hyperlink{9.4._Execution_Overview}{Ξ} s'évalue à un tuple du
résultant Etat \emph{\textbf{σ}} \textsuperscript{∗∗} , disponible gaz
restant \emph{g} \textsuperscript{∗∗} , la concernant- sultant accumulé
sous-état \emph{Un} \textsuperscript{∗∗} et la corps code de la Compte
\textbf{o} .

Si la création a été causé par \protect\hyperlink{_bookmark150}{CRÉER2}
, alors \emph{ζ} ∅ .

\protect\hypertarget{_bookmark44}{}{}On définit formellement la fonction
de création comme la fonction Λ, qui s'évalue à partir de ces valeurs,
ainsi que Etat \emph{\textbf{σ}} et la accumulé sous-état \emph{Un} ,
pour la tuple contenant le nouvel état, le gaz restant, le nouveau
sous-état accumulé, le statut code et production ( \emph{\textbf{σ} , g
, UN , z,} \textbf{o} ):

(84) ( \emph{\textbf{σ} , g , UN , z,} \textbf{o} ) ≡ Λ (
\emph{\textbf{σ} , UN, s, o, g, p, v,} \textbf{je} \emph{, e, , \_ w} )

L'adresse du nouveau compte est définie comme étant le le plus à droite
160 morceaux de la Keccak-256 hacher de la
\protect\hyperlink{_bookmark113}{RLP} encodage de la structure ne
contenant que l'expéditeur et le \protect\hyperlink{_bookmark3}{compte
nonce.} Pour \protect\hyperlink{_bookmark150}{CREATE2} la règle est
différente et est décrit dans EIP-1014 par
\protect\hyperlink{_bookmark82}{Buterin}
\protect\hyperlink{_bookmark82}{{[}2018{]}.} Combiner les deux cas, nous
définissons l'adresse résultante pour le nouveau Compte \emph{un} :

(94) ( \emph{\textbf{σ}} \textsuperscript{∗∗} \emph{, g}
\textsuperscript{∗∗} \emph{, A} \textsuperscript{∗∗} \emph{,} \textbf{o}
) ≡ Ξ( \emph{\textbf{σ}} \textsuperscript{∗} \emph{, g, A}
\textsuperscript{∗} \emph{, je} )

où \emph{je} contient la paramètres de la
\protect\hyperlink{9.3._Execution_Environment}{exécution environ-}
\protect\hyperlink{9.3._Execution_Environment}{hommes} , que est:

(85) \emph{un} \protect\hypertarget{_bookmark45}{}{}≡ ADR ( \emph{s,
\textbf{σ }}{[} \emph{s} {]} n − 1 \emph{, , \_} \textbf{je} )

(86) ADR ( \emph{s, n, , \_} \textbf{je} ) ≡ B 96 \emph{..} 255 KEC
\emph{LA} ( \emph{s} , \emph{n, , \_} \textbf{je} )

\emph{je} \textbf{\textsubscript{d}} évalue au tuple vide car il n'y a
pas de données d'entrée pour cette appel. \emph{Je} H possède non
spécial traitement et est déterminé

(87)

\emph{LA} ( \emph{s} , \emph{n, ζ,} \textbf{je} ) ≡

RLP ( \emph{s, n} ) si \emph{ζ} = ∅

(255) · \emph{s} · \emph{ζ} · KEC ( \textbf{i} ) autrement

depuis la chaîne de blocs.

Code exécution épuise gaz, et gaz mai ne pas aller au dessous de zéro,
Donc exécution mai sortie avant que la code possède viens

où · est la concaténation de tableaux d'octets, B
\emph{\textsubscript{a..b}} ( \emph{X} ) évaluant correspond à une
valeur binaire contenant les bits d'indices dans le Portée {[} \emph{un,
b} {]} de la binaire Les données \emph{X} , et \emph{\textbf{σ}} {[}
\emph{x} {]} est la adresse Etat de \emph{X} , ou alors ∅ si rien
existe. Noter nous utiliser une moins de que

la valeur nonce de l'expéditeur~; nous affirmons que nous avons augmenté
mentionné le nonce du compte de l'expéditeur avant cet appel, et donc la
valeur utilisée est le nonce de l'expéditeur au début de la responsable
transaction ou alors VM opération.

L'adresse du nouveau compte est ajoutée à l'ensemble des accédé comptes:
\end{quote}

\begin{enumerate}
\def\labelenumi{(\arabic{enumi})}
\setcounter{enumi}{87}
\item
  \emph{Un} \textsuperscript{∗} ≡ \emph{UN} à l'exception \emph{Un}
  \textsuperscript{∗} \textbf{\textsubscript{un}} ≡ \emph{Un}
  \textbf{\textsubscript{un}} ∪ \{ \emph{un} \}
\end{enumerate}

\begin{quote}
Le nonce du compte est initialement défini comme un, le bal- ance comme
la valeur passé, la stockage comme vider et la hachage de code en tant
que hachage Keccak 256 bits de la chaîne vide~; le solde de l'expéditeur
est également réduit de la valeur transmise. Ainsi la muté Etat devient
\emph{\textbf{σ}} \textsuperscript{∗} :
\end{quote}

\begin{enumerate}
\def\labelenumi{(\arabic{enumi})}
\setcounter{enumi}{88}
\item
  \begin{quote}
  \emph{\textbf{σ}} \textsuperscript{∗} ≡ \emph{\textbf{σ}} à
  l'exception:
  \end{quote}
\end{enumerate}

\begin{quote}
à un état d'arrêt naturel. Dans cette (et plusieurs autres) ex- cas
exceptionnels, nous disons qu'une exception de manque de gaz (OOG) a
s'est produit: Le évalué Etat est défini comme être la vider
Positionner, ∅ , et la entier créer opération devrait avoir non effet
sur l'état, le laissant effectivement tel qu'il était immédiatement
avant pour tenter la création.

Si le code d'initialisation se termine avec succès, un dernier création
de contrat Coût est payé, la dépôt de code Coût, \emph{c} ,
proportionnel pour la Taille de la créé contrat de code:

(104) \emph{c} ≡ \textsubscript{Dépôt de code} \emph{G} × tout
\textbf{va} bien

Si là est ne pas suffisant gaz restant pour Payer cette, c'est à dire

\emph{g} \textsuperscript{∗∗} \emph{\textless{} c} , alors nous aussi
déclarer un panne d'essence exception.

Le gaz restant sera nul dans de tels cas exceptionnels. condition,
c'est-à-dire si la création a été conduite comme la réception tion d'une
transaction, cela n'affecte pas le paiement de le coût intrinsèque de la
création de contrats~; il est payé quoi qu'il en soit. Toutefois, la
valeur de la transaction n'est pas transférée à la avorté contrat de
adresse lorsque nous sont panne d'essence.

4 \protect\hypertarget{_bookmark46}{}{}qui pouvez différer depuis la
expéditeur dans la Cas de un message appel ou alors Contrat création ne
pas directement déclenché par un transaction mais à venir depuis la
exécution de Code EVM

ÉTHERUM~: UN SÉCURISE DÉCENTRALISÉ GÉNÉRALISÉ TRANSACTION COMPTABLE
\textbf{BERLIN VERSION} 11

Si tel un exception Est-ce que ne pas se produire, alors la restant le
gaz est remboursé à l'initiateur et à l'état maintenant modifié est
autorisé à persister. Ainsi formellement, on peut préciser résultant
Etat, gaz, accumulé sous-état et statut code comme ( \emph{\textbf{σ} ,
g , UN , z} ) où:

(105)

\emph{g} 0 si \emph{F}

\emph{g} \textsuperscript{∗∗} − \emph{c} autrement

(106)

\emph{\textbf{σ}} si \emph{F} ∨ \emph{\textbf{σ}} \textsuperscript{∗∗} =
∅

\textbf{}  \emph{\textbf{σ}} sauf :

destinataire ( \emph{r} ), le compte dont le code doit être exécuté (
\emph{c} , généralement le même que le destinataire), gaz disponible (
\emph{g} ), valeur ( \emph{v} ) et le prix du gaz ( \emph{p} ) avec un
octet de longueur arbitraire déployer, \textbf{ré} , la saisir Les
données de la appel, la cadeau profondeur de la
appel-message/création-contrat pile ( \emph{e} ) et finalement la
autorisation pour Fabriquer modifications pour la Etat ( \emph{w} ).

De côté depuis évaluer pour un Nouveau Etat et accumulé transaction
sous-état, message appels aussi avoir un En plus composant - les données
de sortie désignées par le tableau d'octets \textbf{o} . Cette est
ignoré lorsque exécution transactions, pourtant mes- sauge appels pouvez
être initié exigible pour Code VM exécution et dans cette Cas cette
information est utilisé.

(110)

( \emph{\textbf{σ}} \emph{, g} \emph{, UN} \emph{, z ,} \textbf{o} ) ≡
\protect\hypertarget{_bookmark47}{}{}Θ ( \emph{\textbf{σ} , UN, s, o, r
, c, g , p, v , v} ˜ \emph{,} \textbf{ré} \emph{, e, w} )

\emph{\textbf{σ}} ≡

(107)

\emph{\textbf{σ}} {[} \emph{un} {]} = ∅ si MORT ( \emph{\textbf{σ}}
\textsuperscript{∗∗} \emph{, un} )

\emph{\textbf{σ}} \textsuperscript{∗∗} à l'exception:
\end{quote}

  \emph{\textbf{σ}} {[} \emph{une} {]} c = KEC ( \textbf{o} )
autrement

Noter que nous avoir besoin pour différencier entre la valeur que

\begin{quote}
est pour être transféré, \emph{v} , depuis la valeur apparent dans la
exécution co n t e x t, \emph{v} ˜ , pour la DELEG A TECALL instruction.
Nous définir \emph{\textbf{σ}} 1 , la première de transition Etat comme
la origine- finale Etat mais avec la valeur transféré depuis expéditeur
pour

\emph{A A} \textsuperscript{∗} si \emph{F} ∨ \emph{\textbf{σ}}
\textsuperscript{∗∗} = ∅

\emph{Un} \textsuperscript{∗∗} autrement

(108)

\emph{z} 0 si \emph{F} ∨ \emph{\textbf{σ}} \textsuperscript{∗∗} = ∅

1 autrement

où (109)

\emph{F} ≡ \emph{\textbf{σ}} {[} \emph{une} {]} = ∅ ∧ \emph{\textbf{σ}}
{[} \emph{une} {]} \emph{c} = KEC () ∨ \emph{\textbf{σ}} {[} \emph{une}
{]} \emph{n} = 0 ∨

( \emph{\textbf{σ}} \textsuperscript{∗∗} = ∅ ∧ \textbf{o} = ∅ ) ∨

\emph{g} \textsuperscript{∗∗} \emph{\textless{} c} ∨

destinataire:

(111) \emph{\textbf{σ}} \textsubscript{1} {[} \emph{r} {]}
\textsubscript{b} ≡ \emph{\textbf{σ}} {[} \emph{r} {]} \textsubscript{b}
+ \emph{v} ∧ \emph{\textbf{σ}} \textsubscript{1} {[} \emph{s} {]}
\textsubscript{b} ≡ \emph{\textbf{σ}} {[} \emph{s} {]} \textsubscript{b}
− \emph{v}

sauf si \emph{s} = \emph{r} .

Tout au long de la cadeau travail, ce est assumé que si
\emph{\textbf{σ}} 1 {[} \emph{r} {]} n'était pas défini à l'origine, il
sera créé en tant que compte sans code ni état et solde nul et nonce.
Ainsi la précédent équation devrait être pris pour moyenne:

(112) \emph{\textbf{σ}} \textsubscript{1} ≡ \emph{\textbf{σ}}
\textsubscript{1} à l'exception:

ll \textbf{o} ll \emph{\textgreater{}} 24576

\protect\hypertarget{_bookmark48}{}{}(113) \emph{\textbf{σ}} 1 {[}
\emph{s} {]} ≡ f ∅

si \emph{\textbf{σ}} \textsubscript{1} {[} \emph{s} {]} = ∅

∧ \emph{v} = 0

L'exception dans la détermination de \emph{\textbf{σ}} dicte que
\textbf{o} , la séquence d'octets résultante de l'exécution de la code
d'initialisation, spécifie le code de corps final pour le nouvellement
créé Compte.

Notez que l'intention est que le résultat soit soit une réussite nouveau
contrat créé avec succès avec sa dotation, ou pas Nouveau Contrat avec
non transférer de valeur. Dans une addition, ob-

servir que si l'exécution du code d'initialisation
\protect\hyperlink{_bookmark151}{revient} ( \emph{\textbf{σ}}
\textsuperscript{∗∗} = ∅ ∧ \textbf{o} = ∅ ), le gaz résultant \emph{g}
n'est pas épuisé (à condition de là a été non autre exception), mais non
Nouveau ac-

compter est créé.

7.1. \textbf{Subtilités.} Notez que tant que le code d'initialisation
est en cours d'exécution, l'adresse nouvellement créée existe mais avec
pas de code corporel intrinsèque
\protect\hyperlink{_bookmark49}{\textsuperscript{5}} . Ainsi tout
message d'appel reçu pendant ce temps, aucun code ne sera exécuté. Si
l'exécution de l'initialisation se termine par un SELFDESTRUCT
instruction, la question est sans objet puisque le compte sera supprimé
avant la fin de la transaction. Pour une normale ARRÊT code, ou si la
code revenu est autrement vide, alors l'état se retrouve avec un compte
zombie, et tout ce qui reste solde sera être fermé à clé dans la Compte
pour toujours.
\end{quote}

\begin{enumerate}
\def\labelenumi{\arabic{enumi}.}
\setcounter{enumi}{5}
\item
  \begin{quote}
  Message Appel
  \end{quote}
\end{enumerate}

\begin{quote}
Dans le cas de l'exécution d'un appel de message, plusieurs paramètres
eters sont obligatoire: expéditeur ( \emph{s} ), transaction auteur (
\emph{o} ),

\textbf{un} 1 autrement

(114) \textbf{à} \textsubscript{1} ≡ \emph{\textbf{σ}} \textsubscript{1}
{[} \emph{s} {]} \textsubscript{n} \emph{, \textbf{σ}} \textsubscript{1}
{[} \emph{s} {]} \textsubscript{b} − \emph{v , \textbf{σ}}
\textsubscript{1} {[} \emph{s} {]} \textbf{\textsubscript{s}} \emph{,
\textbf{σ}} \textsubscript{1} {[} \emph{s} {]} \textsubscript{c}

(115) et \emph{\textbf{σ}} \textsubscript{1} ≡ \emph{\textbf{σ}} à
l'exception:

(116)

\emph{\textbf{σ}} \textsubscript{1} {[} \emph{r} {]} ≡ (0 \emph{, v ,}
TRIE ( ∅ ) \emph{,} CEC (())) si \emph{\textbf{σ}} {[} \emph{r} {]} = ∅
∧ \emph{v} = 0

\emph{\textbf{σ}} \textsubscript{1} {[} \emph{r} {]} ≡ ∅ si
\emph{\textbf{σ}} {[} \emph{r} {]} = ∅ ∧ \emph{v} = 0

σ \emph{\textbf{\_}} \textsubscript{1} {[} \emph{r} {]} ≡ \textbf{un}
\textsubscript{1} sinon

(117) \textbf{un} \textsubscript{1} ≡ ( \emph{\textbf{σ}} {[} \emph{r}
{]} \textsubscript{n} \emph{, \textbf{σ }}{[} \emph{r} {]}
\textsubscript{b} + \emph{v , \textbf{σ }}{[} \emph{r} {]}
\textbf{\textsubscript{s}} \emph{, \textbf{σ }}{[} \emph{r} {]}
\textsubscript{c} )

Le code associé au compte (identifié comme le fragment ment dont le
hachage Keccak-256 est \emph{\textbf{σ}} {[} \emph{c} {]} c ) est
exécuté selon au modèle d'exécution (voir section
\protect\hyperlink{9._Execution_Model}{9).} Tout comme avec con- tract
création, si la exécution s'arrête dans un exceptionnel mode
(c'est-à-dire en raison d'une alimentation en gaz épuisée, sous- flux,
destination de saut invalide ou instruction invalide), puis aucun gaz
n'est remboursé à l'appelant et l'état revient à la indiquer
immédiatement avant pour solde transférer (c'est à dire
\emph{\textbf{σ}} ).

5 \protect\hypertarget{_bookmark49}{}{}Pendant initialisation code
exécution, EXTCODETAILLE sur la adresse devrait retourner zéro, qui est
la longueur de la code de la Compte pendant que

CODETAILLE devrait retourner la longueur de la initialisation code
(comme défini dans \protect\hyperlink{H.2._Instruction_Set}{H.2).}

ÉTHERUM~: UN SÉCURISE DÉCENTRALISÉ GÉNÉRALISÉ TRANSACTION COMPTABLE
\textbf{BERLIN VERSION} 12

\protect\hypertarget{_bookmark50}{}{}où
\end{quote}

\begin{enumerate}
\def\labelenumi{(\arabic{enumi})}
\setcounter{enumi}{130}
\item
  Ξ ≡
\end{enumerate}

\begin{quote}
et

\emph{\textbf{σ σ}} si \emph{\textbf{σ}} \textsuperscript{∗∗} = ∅

\emph{\textbf{σ}} \textsuperscript{∗∗} autrement

0 si \emph{\textbf{σ}} \textsuperscript{∗∗} = ∅ ∧
\end{quote}

\textbf{o} = ∅

\emph{g} \textsuperscript{∗∗} autrement

\begin{quote}
\emph{UNE UNE} si \emph{\textbf{σ}} \textsuperscript{∗∗} = ∅

\emph{Un} \textsuperscript{∗∗} autrement

f 0 si \emph{\textbf{σ}} \textsuperscript{∗∗} = ∅

Ξ ECREC ( \emph{\textbf{σ}} 1 \emph{, g, A, je} ) si \emph{c} = 1 Ξ
SHA256 ( \emph{\textbf{σ}} 1 \emph{, g, A, je} ) si \emph{c} = 2 Ξ
RIP160 ( \emph{\textbf{σ}} 1 \emph{, g, A, je} ) si \emph{c} = 3 Ξ ID (
\emph{\textbf{σ}} 1 \emph{, g, UN, je} ) si \emph{c} = 4 Ξ EXPMOD (
\emph{\textbf{σ}} 1 \emph{, g, A, je} ) si \emph{c} = 5 ΞBN \_ AJOUTER (
\emph{\textbf{σ}} 1 \emph{, g, A, je} ) si \emph{c} = 6 ΞBN \_ MUL (
\emph{\textbf{σ}} 1 \emph{, g, A, je} ) si \emph{c} = 7 Ξ SNARKV (
\emph{\textbf{σ}} 1 \emph{, g, A, je} ) si \emph{c} = 8 Ξ BLAKE2 F (
\emph{\textbf{σ}} 1 \emph{, g, UN, je} ) si \emph{c} = 9

Ξ( \emph{\textbf{σ}} 1 \emph{, g, UN, je} ) sinon

modèle formel d'une machine à états virtuelle, connu comme le Machine
virtuelle Ethereum (EVM). C'est un \emph{quasi-} Turing- machine
complète~; la \emph{quasi -} qualification vient de la fait que le
calcul est intrinsèquement borné par un paramètre, \emph{gas} , qui
limite la quantité totale de tation Fini.
\end{quote}

\begin{enumerate}
\def\labelenumi{\arabic{enumi}.}
\item
  \textbf{Bases.} L'EVM est une architecture simple basée sur la pile
  ture. La taille du mot de la machine (et donc la taille de la pile
  éléments) est de 256 bits. Cela a été choisi pour faciliter le Keccak-
  256 schéma de hachage et calculs de courbes elliptiques. Le Le modèle
  de mémoire est un simple tableau d'octets adressé par mot. Le pile a
  une taille maximale de 1024. La machine a également un indépendant
  stockage maquette; cette est similaire dans concept à la mémoire mais
  plutôt qu'un tableau d'octets, c'est un mot- tableau de mots
  adressable. Contrairement à la mémoire, qui est volatile, le stockage
  est non volatil et est maintenu dans le cadre du système Etat. Tout
  Emplacements dans tous les deux stockage et Mémoire sont bien défini
  initialement comme zéro.
\end{enumerate}

\begin{quote}
La machine ne suit pas la norme von Neu- homme architecture. Plutôt que
stocker programme code dans généralement accessible Mémoire ou alors
stockage, ce est stockée séparément dans un virtuel ROM interactif seul
par un spécialisé instruction.

La machine peut avoir une exécution exceptionnelle pendant plusieurs
raisons, y compris les débordements de pile et les instructions non
valides tions. Comme l'exception de panne de gaz, ils ne partent pas
changements d'état intacts. Au contraire, la machine s'arrête
immédiatement. rapidement et signale le problème à l'agent d'exécution
(soit la transaction processeur ou alors, récursivement, la frai
exécution environnement) qui sera accord avec ce séparément.
\end{quote}

\begin{enumerate}
\def\labelenumi{\arabic{enumi}.}
\setcounter{enumi}{1}
\item
  \begin{quote}
  \textbf{Frais Aperçu.} Frais (dénomination dans gaz) sont inculpé dans
  trois circonstances distinctes, toutes trois comme préalable à
  l'exécution d'une opération. La première et le plus courant est la
  redevance intrinsèque au calcul de l'opération (voir annexe
  \protect\hyperlink{Appendix_G._Fee_Schedule}{G).} Deuxièmement, le gaz
  peut être déduit dans Commande pour formulaire la Paiement pour un
  subalterne
  \end{quote}
\end{enumerate}

\begin{enumerate}
\def\labelenumi{(\arabic{enumi})}
\setcounter{enumi}{131}
\item
  \begin{quote}
  KEC ( \emph{I} \textbf{\textsubscript{b}} ) = \emph{\textbf{σ}} {[}
  \emph{c} {]} \textsubscript{c}
  \end{quote}
\end{enumerate}

\begin{quote}
Ce est assumé que la client sera avoir stockée la paire ( KEC (
\emph{je} \textbf{\textsubscript{b}} ) \emph{, je}
\textbf{\textsubscript{b}} ) à quelques indiquer avant dans Commande
pour Fabriquer la détermination de \emph{je} \textbf{\textsubscript{b}}
réalisable.

Comme pouvez être vu, là sont neuf exceptions pour la usage du cadre
général d'exécution Ξ pour l'évaluation des appel de messages : ce sont
des contrats dits 'précompilés', conçu comme une pièce préliminaire de
l'architecture qui peut plus tard deviennent \emph{des extensions
natives} . Les contrats aux adresses 1 à 9 exécuter la fonction de
récupération de clé publique à courbe elliptique, le schéma de hachage
SHA2 256 bits, le hachage RIPEMD 160 bits schéma, la fonction
d'identité, précision arbitraire modulaire exponentiation, addition de
courbe elliptique, scalaire de courbe elliptique multiplication, un
elliptique courbe jumelage Chèque, et la BLAKE2 fonction de compression
F respectivement. Leur plein définition formelle est dans l'annexe
\protect\hyperlink{Appendix_E._Precompiled_Contracts}{E.}
\protect\hypertarget{_bookmark51}{}{}Nous désignons l'ensemble des la
adresses de la précompilé contrats par \emph{π} :

(133 \emph{)} ≡ \{ 1 \emph{,} 2 \emph{,} 3 \emph{,} 4 \emph{,} 5
\emph{,} 6 \emph{,} 7 \emph{,} 8 \emph{,} 9 \}
\end{quote}

\begin{enumerate}
\def\labelenumi{\arabic{enumi}.}
\setcounter{enumi}{5}
\item
  \begin{quote}
  \protect\hypertarget{9._Execution_Model}{}{}Exécution Modèle
  \end{quote}
\end{enumerate}

\begin{quote}
Le modèle d'exécution spécifie comment l'état du système est modifié
étant donné une série d'instructions de bytecode et un petit tuple de
environnemental Les données. Cette est spécifié par un

appel de message ou création de contrat~; cela fait partie du Paiement
pour CRÉER , CRÉER2 , APPEL et CODE D'APPEL . Pour terminer, gaz mai
être payé exigible pour un augmenter dans la usage de la Mémoire.

Terminé un comptes exécution, la total frais pour Mémoire- usage payable
est proportionnel pour le plus petit plusieurs de 32 octets que sont
obligatoire tel que tout Mémoire indices (qu'il s'agisse pour lis ou
alors écrivez) sont inclus dans la Portée. Cette est payé pour sur un
juste à temps base; comme tel, référencement un région de Mémoire à
moins 32 octets plus grand que quelconque pré- une mémoire correctement
indexée se traduira certainement par une Mémoire usage frais. Exigible
pour cette frais ce est très peu probable adresses sera déjà aller au
dessus de 32 bits bornes. Que mentionné, implémentations doit être
capable pour faire en sorte cette éventualité. Stockage frais avoir un
légèrement nuancé comportement - à dans- centiviser minimisation de la
utiliser de stockage (qui cor- répond directement pour un plus grande
Etat base de données sur tout nœuds), la exécution frais pour un
opération que efface un entrée dans la stockage est ne pas seul renoncé,
un qualifié rembourser est donné; dans fait, cette rembourser est
effectivement payé à l'avant puisque la initial usage de un stockage
emplacement frais substantiellement Suite

que Ordinaire usage.

Voir annexe
\protect\hyperlink{Appendix_H._Virtual_Machine_Specificatio}{H} pour un
rigoureux définition de la EVM gaz Coût.

ÉTHERUM~: UN SÉCURISE DÉCENTRALISÉ GÉNÉRALISÉ TRANSACTION COMPTABLE
\textbf{BERLIN VERSION} 13
\end{quote}

\begin{enumerate}
\def\labelenumi{\arabic{enumi}.}
\item
  \begin{quote}
  \protect\hypertarget{9.3._Execution_Environment}{}{}\textbf{Environnement
  d'exécution.} En plus du système état tem \emph{\textbf{σ}} , le gaz
  restant pour le calcul \emph{g} , et le sous- état accumulé \emph{A} ,
  il existe plusieurs éléments importants informations utilisées dans
  l'environnement d'exécution que l'agent d'exécution doit fournir~;
  ceux-ci sont contenus dans le tuple \emph{Je} :
  \end{quote}

  \begin{itemize}
  \item
    \emph{je} un , la adresse de la Compte qui possède la code que est
    exécution.
  \item
    \emph{je} o , la expéditeur adresse de la transaction que origine-
    iné cette exécution.
  \item
    \emph{je} p , la le prix de gaz dans la transaction que d'origine-
    \protect\hypertarget{_bookmark54}{}{}noué cette exécution.
  \item
    \emph{je} , \textbf{\textsubscript{\_}} la octet déployer que est la
    saisir Les données pour cette exécution; si la exécution agent est
    un transaction,
  \end{itemize}
\end{enumerate}

\begin{quote}
devrait arrêt.

(135) Ξ( \emph{\textbf{σ} , g, UN, je} ) ≡ ( \emph{\textbf{σ} ,
\textbf{µg} ,} \_ \emph{UN ,} \textbf{o} )

(136) ( \emph{\textbf{σ} , \textbf{µ} , UN , ...,} \textbf{o} ) ≡
\emph{X} ( \emph{\textbf{σ} , \textbf{µ} , UN, je} )
\end{quote}

\begin{longtable}[]{@{}
  >{\raggedright\arraybackslash}p{(\columnwidth - 6\tabcolsep) * \real{0.25}}
  >{\raggedright\arraybackslash}p{(\columnwidth - 6\tabcolsep) * \real{0.25}}
  >{\raggedright\arraybackslash}p{(\columnwidth - 6\tabcolsep) * \real{0.25}}
  >{\raggedright\arraybackslash}p{(\columnwidth - 6\tabcolsep) * \real{0.25}}@{}}
\toprule
\begin{minipage}[b]{\linewidth}\raggedright
\begin{quote}
(137)
\end{quote}
\end{minipage} & \emph{\textbf{µg}} \_ &
\begin{minipage}[b]{\linewidth}\raggedright
\begin{quote}
≡
\end{quote}
\end{minipage} & \emph{g} \\
\midrule
\endhead
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
(138)
\end{quote}
\end{minipage} & \emph{\textbf{µpc}} \_ &
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
≡
\end{quote}
\end{minipage} & 0 \\
\bottomrule
\end{longtable}

\begin{quote}
\protect\hypertarget{_bookmark55}{}{}  ∅ \emph{, \textbf{µ} , UN, je
,} ∅ si \emph{Z} ( \emph{\textbf{σ} , \textbf{µ} , UN, je} )

cette voudrais être la transaction Les données.
\end{quote}

\begin{itemize}
\item
  \emph{je} suis , la adresse de la Compte qui causé la
\end{itemize}

\begin{quote}
\emph{X} ( \emph{\textbf{σ} , \textbf{µ} , UN, je} )

≡ \textbf{}  ∅ \emph{, \textbf{µ}} \emph{, UN, je ,} \textbf{o} si
\emph{w} =

REVENIR

code pour être exécuter~; si la exécution agent est un transaction,
cette voudrais être la transaction expéditeur.
\end{quote}

\begin{itemize}
\item
  \emph{je} v , la valeur, dans Wei, passé pour cette Compte comme
  partie de la même procédure comme exécution; si la
\end{itemize}

\begin{quote}
l'agent d'exécution est une transaction, ce serait le transaction
valeur.
\end{quote}

\begin{itemize}
\item
  \emph{je} \textbf{\textsubscript{b}} , la octet déployer que est la
  machine code pour être
\end{itemize}

\begin{quote}
réalisé.
\end{quote}

\begin{itemize}
\item
  \emph{Je} H , la bloc entête de la cadeau bloc.
\end{itemize}

\begin{quote}
où (144)

(145)

(146)

\emph{O} ( \emph{\textbf{σ} , \textbf{µ} , UN, je} ) \textbf{o} si
\textbf{o} = ∅

 \emph{X O} ( \emph{\textbf{σ} , \textbf{µ} , A, je} ) autrement

\textbf{o} ≡ \emph{H} ( \emph{\textbf{µ} , je} )

( \emph{un, b, c, ré} ) · \emph{e} ≡ ( \emph{un, b, c, ré, e} )

\emph{\textbf{µ}} ≡ \emph{\textbf{µ}} à l'exception:
\end{quote}

\begin{itemize}
\item
  \emph{je} e , la profondeur de la cadeau message-appel ou alors
\end{itemize}

\begin{quote}
création de contrat (c'est à dire la nombre de APPELS \_ ou alors

CRÉER(2) s être réalisé à cadeau).

(147)
\end{quote}

\emph{\textbf{µg}} \_

\begin{quote}
≡ \emph{\textbf{µg}} \_
\end{quote}

\begin{itemize}
\item
  \emph{\hfill\break
  C} ( \emph{\textbf{σ} , \textbf{µ} , UN, je} )

  \begin{itemize}
  \item
    \emph{je} w , la autorisation pour Fabriquer modifications pour la
  \end{itemize}
\end{itemize}

\begin{quote}
Etat.

Le modèle d'exécution définit la fonction Ξ, qui peut calculer l'état
résultant \emph{\textbf{σ}} , le gaz restant \emph{g} , la sous- état
accumulé résultant \emph{A} et la sortie résultante, \textbf{o} , compte
tenu de ces définitions. Pour le contexte actuel, nous allons définir ce
comme:

(134) ( \emph{\textbf{σ} , g , UN ,} \textbf{o} ) ≡ Ξ( \emph{\textbf{σ}
, g, UN, je} )

où nous sera rappelles toi que \emph{Un} , la accumulé sous-état, est
défini dans section \protect\hyperlink{6.1._Substate}{6.1.}
\end{quote}

\begin{enumerate}
\def\labelenumi{\arabic{enumi}.}
\item
  \begin{quote}
  \protect\hypertarget{9.4._Execution_Overview}{}{}\textbf{Présentation
  de l'exécution.} Il faut maintenant définir le Ξ une fonction. Dans la
  plupart des implémentations pratiques, ce sera modelé comme un
  itératif progression de la paire comprenant l'état du système complet,
  \emph{\textbf{σ}} et l'état de la machine, \emph{\textbf{µ}} . Pour-
  mally, nous le définissons récursivement avec une fonction \emph{X} .
  Cette les usages un itérateur une fonction \emph{O} (qui définit la
  résultat de un
  \end{quote}
\end{enumerate}

\begin{quote}
Noter que, lorsque nous évaluer Ξ, nous laissez tomber la Quatrième

élément \emph{je} et extrait la restant gaz \emph{\textbf{µg}} \_ depuis
la résultant machine Etat \emph{\textbf{µ}} .

\emph{X} est donc cyclé (récursivement ici, mais les implémentations
sont généralement censés utiliser une simple boucle itérative) jusqu'à
ce que soit \emph{\protect\hyperlink{_bookmark59}{Z}} devient vrai
indiquant que l'état actuel est exceptionnel et que la machine doit être
arrêtée et tout changements mis au rebut ou alors jusqu'à
\emph{\protect\hyperlink{_bookmark60}{H}} devient un séries (plutôt que
l'ensemble vide) indiquant que la machine a atteint un contrôlé arrêt.
\end{quote}

\begin{enumerate}
\def\labelenumi{\arabic{enumi}.}
\item
  \emph{Machine État.} Le machine Etat \emph{\textbf{µ}} est défini
  comme la tuple ( \emph{g, ordinateur personnel,} \textbf{moi} \emph{,
  je,} \textbf{s} ) qui sont la gaz disponible, la
\end{enumerate}

\begin{quote}
compteur de programme \emph{pc} ∈ N 256 , le contenu de la mémoire, la
actif Numéro de mots dans Mémoire (compte en continu

à partir de la position 0), et le contenu de la pile. La mémoire Contenu
\emph{\textbf{µ}} sont un séries de des zéros de Taille 2
\textsuperscript{256} .

Pour la facilité de en train de lire, la instruction mnémotechnique,

écrit en petites majuscules (par exemple ADD ), doit être interprété
comme leur numérique équivalents~; la plein table de des instructions et
leur détails est donné dans annexe
\protect\hyperlink{Appendix_H._Virtual_Machine_Specificatio}{H}

Pour la fins de définir \emph{Z} , \emph{H} et \emph{Ô} , nous définir
\emph{w}

comme la courant opération pour être réalisé:

Célibataire cycle de la Etat machine) ensemble avec les fonctions

\emph{\protect\hyperlink{_bookmark59}{Z}} qui détermine si la cadeau
Etat est un \protect\hyperlink{_bookmark59}{exceptionnel}

(148) \emph{w} ≡

f \emph{je} \textbf{\textsubscript{b}} {[} \emph{\textbf{µ}} p c
\end{quote}

{]} si \emph{\textbf{µpc}} \_

\begin{quote}
\emph{\textless{}} ll \emph{je} \textbf{\textsubscript{b}} ll

\protect\hyperlink{_bookmark59}{arrêt} de la machine et
\protect\hyperlink{_bookmark60}{\emph{H}} , spécifiant la sortie données
de l'instruction si et seulement si l'état actuel est un
\protect\hyperlink{_bookmark60}{Ordinaire s'arrêter} Etat de la machine.

La séquence vide, notée (), n'est pas égale à la ensemble vide, noté ∅ ;
c'est important lors de l'interprétation la sortie de \emph{H} , qui
s'évalue à ∅ lorsque l'exécution doit Continuez mais un séries
(potentiellement vider) lorsque exécution

\protect\hyperlink{_bookmark143}{ARRÊTER} sinon

Nous supposons également les quantités fixes de \emph{δ} et \emph{α} ,
en spécifiant la pile éléments supprimé et ajoutée, tous les deux
inscriptible sur l'instruction et une fonction de coût d'instruction
\emph{C} évaluant uating pour la plein Coût, dans gaz, de exécution la
donné instruction.

ÉTHERUM~: UN SÉCURISE DÉCENTRALISÉ GÉNÉRALISÉ TRANSACTION COMPTABLE
\textbf{BERLIN VERSION} 14
\end{quote}

\begin{enumerate}
\def\labelenumi{\arabic{enumi}.}
\setcounter{enumi}{1}
\item
  \protect\hypertarget{_bookmark59}{}{}\emph{Exceptionnel Arrêt.} La
  fonction d'arrêt exceptionnelle tion \emph{Z} est défini comme:
\end{enumerate}

\begin{quote}
(149)

\emph{Z} ( \emph{\textbf{σ} , \textbf{µ} , UN, je} ) ≡ \emph{\textbf{µg}
\_ \textless{} C} ( \emph{\textbf{σ} , \textbf{µ} , UN, je} ) ∨

\protect\hypertarget{_bookmark60}{}{}9.4.4. \emph{Arrêt normal.} La
fonction d'arrêt normale \emph{H} est défini~:

(154)

  \emph{H} RETOUR ( \emph{\textbf{µ}} ) \_ si \emph{w} ∈ \{
\protect\hyperlink{_bookmark149}{RETOUR} \emph{,} REVE R T \}

\emph{δ w} = ∅ ∨ ll \textbf{\emph{µ} \textsubscript{s }}ll
\emph{\textless{} δw \_} ∨

( \emph{w} = SAUTER ∧ \textbf{\emph{µs {[}} 0} {]} ∈ \emph{/ D} (
\emph{je} \textbf{\textsubscript{b}} )) ∨

\emph{H} ( \emph{\textbf{µ} , je} ) ≡

() si \emph{w} ∈ \{ \protect\hyperlink{_bookmark143}{ARRÊTER} \emph{,}
\protect\hyperlink{_bookmark152}{AUTODESTRUCTION} \}

 ∅ sinon

où

( \emph{w} = JUMPI ∧ \textbf{\emph{µs {[}} 1} {]} = 0 ∧

\textbf{\emph{µs {[}} 0} {]} ∈ \emph{/ D} ( \emph{je}
\textbf{\textsubscript{b}} )) ∨

( \emph{w} = RETOURDATACOPIE ∧

\textbf{\emph{µ} s} {[}1{]} + \textbf{\emph{µ} s} {[}2{]}
\emph{\textgreater{}} ll \textbf{\emph{µ} o} ll ) ∨ ll \textbf{\emph{µ}
\textsubscript{s }}ll − \emph{δ w} + \emph{α w \textgreater{}} 1024 ∨ (
¬ \emph{je} w ∧ \emph{O} ( \emph{w, \textbf{µ }})) ∨

( \emph{w} = STORE ∧ \emph{\textbf{µg} \_} Allocation d'appel \emph{G} )

Les opérations d'arrêt de retour de données,
\protect\hyperlink{_bookmark149}{RETOURNER} et REVERT , ont une fonction
spéciale \emph{H} RETURN . A noter également la différence entre la
séquence vide et la séquence vide Positionner comme discuté
\protect\hyperlink{_bookmark58}{ici.}
\end{quote}

\begin{enumerate}
\def\labelenumi{\arabic{enumi}.}
\setcounter{enumi}{1}
\item
  \textbf{Le Exécution Cycle.} Les éléments de la pile sont ajoutés ou
  supprimé de la partie la plus à gauche et la plus basse de l'index
  séries; tout autre éléments rester inchangé:
\end{enumerate}

\begin{quote}
(150) \emph{O} ( \emph{w, \textbf{µ }}) ≡ \emph{w} ∈ \{ CRÉER \emph{,}
CRÉER2 \emph{,} STORE \emph{,}

AUTODESTRUCTION \} ∨

LOG0 ≤ \emph{w} ∧ \emph{w} ≤ LOG4 ∨

\emph{w} = APPEL ∧ \textbf{\emph{µs} {[}} 2{]} = 0

(155)

(156)

(157)

(158)
\end{quote}

\emph{O} ( \emph{\textbf{σ} , \textbf{µ} , UN, Je} ) ≡ (
\emph{\textbf{σ} , \textbf{µ} , UN , je} )

\begin{quote}
∆ ≡ \emph{αw \_} − \emph{δw \_}

ll \textbf{\emph{µ} s} ll ≡ ll \textbf{\emph{µ} s} ll + ∆

∀ \emph{x} ∈ {[} \emph{α w ,} ll \textbf{\emph{µ} s} ll ) :
\emph{\textbf{µs}} {[} \emph{x} {]} \textbf{\_} ≡ \emph{\textbf{µs}} {[}
\emph{x} \textbf{\textsubscript{\_}} − ∆{]}

Celui-ci précise que l'exécution est dans un arrêt exceptionnel. l'état
de fonctionnement s'il n'y a pas assez de gaz, si l'instruction est
invalide (et donc son indice \emph{δ} est indéfini), s'il y a sont
insuffisant pile éléments, si un SAUTER / SAUTER destination n'est pas
valide, la nouvelle taille de la pile serait supérieure à 1024 ou Etat
modification est tenté pendant un statique appel. Le comme-

Le gaz est réduit par la des instructions gaz Coût et pour la plupart
des instructions, le compteur de programme s'incrémente sur chaque
cycle, pour les trois exceptions, on suppose une fonction \emph{J} ,
indice par une de deux des instructions, qui évalue pour la selon
valeur:

Tut lecteur sera prendre conscience de que cette implique que non
instruction

peut, à travers son exécution, cause un exceptionnel arrêt. Aussi, la
exécution est dans un exceptionnel s'arrêter Etat si la gaz

(159)

\emph{\textbf{µ}} g ≡ \emph{\textbf{µg}} \_ − \emph{C} (
\emph{\textbf{σ} , \textbf{µ} , UN, je} )

   \protect\hyperlink{_bookmark147}{\emph{J} SAUT P} (
\emph{\textbf{µ}} ) si \emph{w} = SAUTER

laissé avant l'exécution d'une instruction
\protect\hyperlink{_bookmark145}{SSTORE} est inférieur à ou alors égal
pour la appel traitement \protect\hyperlink{_bookmark134}{\emph{G}
\textsubscript{appelle l'allocation}} . Le dernière état a été introduit
dans EIP-1706 par \protect\hyperlink{_bookmark96}{Forshtat et Weiss
{[}2019{]}}

(160)

\emph{\textbf{µ}} pc ≡

\protect\hyperlink{_bookmark148}{\emph{J} SAUTPI} ( \emph{\textbf{µ}} )
si \emph{w} = JUMPI

  \emph{N} ( \emph{\textbf{µ}} p c \emph{, w} ) sinon

(partie de EIP-2200 par \protect\hyperlink{_bookmark105}{Soie} {[}
\protect\hyperlink{_bookmark105}{2019{]}).}

Dans général, nous présumer la Mémoire, accumulé sous-état

et système Etat faire ne pas monnaie:
\end{quote}

\begin{enumerate}
\def\labelenumi{\arabic{enumi}.}
\setcounter{enumi}{2}
\item
  \emph{Validité de la destination de saut.} Nous utilisions auparavant
  \emph{D} comme fonction pour déterminer l'ensemble des destinations de
  saut valides. nations étant donné le code qui est exécuté. Nous
  définissons ceci comme quelconque position dans la code occupé par un
  JUMPDEST instruction.
\end{enumerate}

\begin{quote}
(161)

(162)

(163)

(164)

\textbf{\emph{µ} m} ≡ \textbf{\emph{µm} \_ \emph{µ }}je ≡
\emph{\textbf{µ}} je

\emph{Un} ≡ \emph{UN}

\emph{\textbf{σ}} ≡ \emph{\textbf{σ}}

Tous ces postes doivent être sur instruction valide lié- bélier, plutôt
que de rester assis dans la partie données de PUSH opérations et doit
apparaître dans le cadre explicitement défini portion de la code (plutôt
que dans la implicitement défini \protect\hyperlink{_bookmark143}{ARRÊT}
opérations que Piste ce).

Officiellement:

(151) \emph{ré} ( \textbf{c} ) ≡ \emph{ré} J ( \textbf{c} \emph{,} 0)
où:

(152)

\{\} si \emph{je} ;;: ll \textbf{c} ll

\emph{ré} ( \textbf{c} \emph{, je} ) \{ \emph{je} \} ∪ \emph{DJ} ( c
\emph{,} \textbf{\_} \emph{N} ( \emph{je,} \textbf{c} {[} \emph{je}
{]}))

si \textbf{c} {[} \emph{je} {]} = JUMPDEST

\emph{DJ} ( c \emph{,} \textbf{\_} \emph{N} ( \emph{je,} \textbf{c} {[}
\emph{je} {]})) sinon

où \emph{N} est la suivant valide instruction position dans la code,
saut la Les données de un POUSSER instruction, si quelconque: (153)

  \emph{je} + \emph{w} − PUSH1 + 2

Cependant, les instructions modifient généralement un ou plusieurs
composantes de ces valeurs. Composants modifiés répertoriés par
instruction sont c'est noté dans annexe
\protect\hyperlink{Appendix_H._Virtual_Machine_Specificatio}{H,} aux
côtés de valeurs pour \emph{α} et \emph{δ} et un officiel la description
de la gaz conditions.
\end{quote}

\begin{enumerate}
\def\labelenumi{\arabic{enumi}.}
\setcounter{enumi}{5}
\item
  \begin{quote}
  \protect\hypertarget{10._Blocktree_to_Blockchain}{}{}Blocktree pour
  Chaîne de blocs
  \end{quote}
\end{enumerate}

\begin{quote}
La blockchain canonique est un chemin de la racine à la feuille dans
toute l'arborescence des blocs. Afin d'avoir un consensus terminé qui
chemin ce est, conceptuellement nous identité la chemin qui a eu le plus
de calculs effectués dessus, ou, le chemin \emph{le plus lourd .} De
toute évidence, un facteur qui aide à déterminer la le plus lourd chemin
est la bloc Numéro de la feuille, équivalent pour la Numéro de blocs, ne
pas compte la non miné \protect\hyperlink{_bookmark153}{genèse}
\protect\hyperlink{_bookmark153}{bloquer,} dans le chemin. Plus le
chemin est long, plus la total de l'effort minier qui doit avoir été
fait pour arriver à la feuille. Cela s'apparente aux régimes existants,
tels que que employé dans Dérivé de Bitcoin protocoles.

Puisqu'un en-tête de bloc inclut la difficulté, l'en-tête seule est
suffisant pour valider la calcul Fini. Quelconque

\emph{N} ( \emph{je, w} ) ≡

si \emph{w} {[} APPUYER1 \emph{,} PUSH32 {]}

  \emph{je} + 1 sinon

bloc contribue vers la total calcul ou alors \emph{total difficulté} de
un chaîne.

ÉTHERUM~: UN SÉCURISE DÉCENTRALISÉ GÉNÉRALISÉ TRANSACTION COMPTABLE
\textbf{BERLIN VERSION} 15

comme:
\end{quote}

Ainsi nous définir la total difficulté de bloc \emph{B} récursivement

\begin{quote}
Si là sont collisions de la Bénéficiaire adresses être- interpolation
ommers et la bloc (c'est à dire deux ommers avec la

(165)

(166)

\emph{B} \textsubscript{t} ≡ \emph{B} \textsubscript{t} + \emph{B}
\textsubscript{d} \emph{B} ≡ \emph{P} ( \emph{BH} ) \_

même Bénéficiaire adresse ou alors un ommer avec la même béné- adresse
ficiaire comme bloc actuel), les ajouts sont appliqués
\protect\hypertarget{_bookmark62}{}{}cumulativement.

Comme tel donné un bloc \emph{B} , \emph{B} t est son total difficulté,
\emph{B} est son parent bloc et \emph{B} \textsubscript{d} est son
difficulté.

Nous définir la bloc récompense dans Wei~: (176)
\end{quote}

\begin{enumerate}
\def\labelenumi{\arabic{enumi}.}
\setcounter{enumi}{10}
\item
  \protect\hypertarget{11._Block_Finalisation}{}{}Bloc Finalisation
\end{enumerate}

\begin{quote}
Le processus de finalisation un bloc implique quatre étapes:
\end{quote}

\begin{enumerate}
\def\labelenumi{\arabic{enumi}.}
\item
  Valider (ou alors, si exploitation minière, déterminer) ommers~;
\end{enumerate}

\begin{quote}
Bloc \emph{R} = 10 18 ×

5 si \emph{Salut} \_ \emph{\textless{} Fa} Byzance

3 si \emph{Fa} Byzance \emph{Salut \textless{}} \_ \emph{F}
Constantinople

\protect\hypertarget{11.4._State_ux5cux26_Nonce_Validation}{}{}  2 si
\emph{Salut} \_ ;;: \emph{F} Constanti nople \_ \_
\end{quote}

\begin{enumerate}
\def\labelenumi{\arabic{enumi}.}
\setcounter{enumi}{1}
\item
  valider (ou alors, si exploitation minière, déterminer) transactions;
\item
  appliquer récompenses;
\item
  Vérifier (ou alors, si exploitation minière, calculer un valide) Etat
  et \protect\hyperlink{_bookmark17}{bloc nonce.}
\end{enumerate}

\begin{quote}
11.1. \textbf{Ommer Validation.} Le validation de
\protect\hyperlink{_bookmark18}{ommer} les
\protect\hyperlink{_bookmark18}{en-têtes} ne signifient rien de plus que
de vérifier que chaque om- mer entête est tous les deux un valide entête
et satisfait la relation

de \emph{N} ème génération ommer pour la cadeau bloc où \emph{N} ≤ 6.

Le maximum de ommer en-têtes est deux. Officiellement:

11.4. \textbf{État \& Nonce Validation.} Nous mai à présent définir

la fonction, Γ, qui mappe un bloc \emph{B} à son état d'initiation~:
(177)

Γ( \emph{B} ) \emph{\textbf{σ}} 0 si \emph{P} ( \emph{BH} ) \_ = ∅

\emph{\textbf{σ}} je : \protect\hyperlink{_bookmark118}{TRIE} ( \emph{L}
S ( \emph{\textbf{σ}} je )) = \emph{P} ( \emph{B} H ) H r autrement

Ici, TRIE ( \emph{L} S ( \emph{\textbf{σ}} je )) moyens la hacher de la
racine nœud de un trie d'état \emph{\textbf{σ}} i ; on suppose que les
implémentations seront boutique cette dans la Etat base de données, qui
est banal et efficace

puisque la essayer est par nature un immuable Les données structure.

(167) ll \emph{B} \textbf{\textsubscript{U}}
\end{quote}

ll 2

\begin{quote}
\textbf{U} ∈ \emph{B} \textbf{U}
\end{quote}

\protect\hyperlink{_bookmark35}{\emph{V} ( \textbf{U}} ) ∧ \emph{k} (
\textbf{U} \emph{, P} ( \textbf{B}

\textbf{H} ) \textbf{H}

\emph{,} 6)

\begin{quote}
Et enfin nous définissons Φ, la fonction de transition de bloc, qui
Plans un incomplet bloc \emph{B} pour un Achevée bloc \emph{B} :

où \emph{k} dénote la "est-parent" biens:

(168)

(178) Φ( \emph{B} ) ≡ \emph{B} : \emph{B} = \emph{B} \textsuperscript{∗}
à l'exception:

\emph{k} ( \emph{U, H, n} ) ≡

\emph{faux} si \emph{n} = 0

\emph{s} ( \emph{U, H} )

(179)

\emph{B} \textsubscript{n} = \emph{n} : \emph{x}

2 256

\href{/l}{\emph{Hd}} \href{/l}{\textsubscript{\_}}

  ∨ \emph{k} ( \emph{U , P} ( \emph{H} ) H \emph{, n} − 1) autrement

(180) \emph{B} \textsubscript{m} = \emph{m} avec ( \emph{x, m} ) = PoW (
\emph{B} \protect\hyperlink{_bookmark34}{n ∗} \emph{, n,} \textbf{ré} )

(169)

\emph{s} ( \emph{U , H} ) ≡ ( \emph{P} ( \emph{H} ) = \emph{P} (
\emph{U} ) ∧ \emph{H U} ∧ \emph{tu} ∈ \emph{/ B} ( \emph{H} )
\textbf{\textsubscript{U}} )

où \emph{B} ( \emph{H} ) et \emph{P} ( \emph{H} ) sont la bloc et la
parent bloc de la correspondant entête \emph{H} respectivement.
\end{quote}

\begin{enumerate}
\def\labelenumi{\arabic{enumi}.}
\setcounter{enumi}{1}
\item
  \textbf{Transaction Validation.} Le donné \textbf{gazUtilisé} doit
  correspondre fidèlement aux transactions répertoriées :
  \protect\hyperlink{_bookmark14}{\emph{B} \textsubscript{Hg}} , la
  total gaz utilisé dans la bloc, doit être égal pour la accumulé gaz
  utilisé selon pour la final transaction:
\end{enumerate}

\begin{quote}
(170) \protect\hyperlink{_bookmark14}{\emph{B} H} g =
\protect\hyperlink{_bookmark2}{\emph{.€}} (
\protect\hyperlink{_bookmark22}{\textbf{R} ) u}
\end{quote}

\begin{enumerate}
\def\labelenumi{\arabic{enumi}.}
\setcounter{enumi}{2}
\item
  \textbf{Demande de récompense.} L'application des récompenses à un
  bloc consiste à relever le solde des comptes de l'adresse bénéficiaire
  du bloc et de chaque ommer par un un certain montant. Nous élevons le
  compte bénéficiaire du bloc par \_
  \protect\hyperlink{_bookmark62}{\textsubscript{bloc} \emph{R}}~;
  \protect\hyperlink{_bookmark62}{\textsubscript{\_} \textsubscript{\_}
  \textsubscript{\_}} pour chacun \_ \_ ommer, nous \_ augmenter la bl o
  c k's b bénéficiaire d'un complément \textsuperscript{\underline{1}}
  de la récompense globale et du bénéfice ciaire de l'ommer est
  récompensé en fonction du bloc nombre
  \protect\hypertarget{_bookmark65}{}{}. Officiellement nous définir la
  une fonction Ω~:
\end{enumerate}

\begin{quote}
(171)

Ω( \emph{B , \textbf{σ }}) ≡ \emph{\textbf{σ}} : \emph{\textbf{σ}} =
\emph{\textbf{σ}} sauf :

Avec \textbf{ré} être un base de données comme spécifié dans annexe
\protect\hyperlink{Appendix_J._Ethash}{J}

Comme précisé au début du présent travail,
\protect\hyperlink{_bookmark67}{Π} est la fonction de transition d'état,
qui est définie en termes de \protect\hyperlink{_bookmark65}{Ω,} la
fonction de finalisation du bloc et \protect\hyperlink{_bookmark0}{Υ,}
la transaction- évaluation une fonction, tous les deux à présent bien
défini.

Comme précédemment détaillé, \textbf{R} {[} \emph{n} {]}
\textsubscript{z} , \textbf{R} {[} \emph{n} {]}
\textbf{\textsubscript{l}} et \textbf{R} {[} \emph{n} {]}
\textsubscript{u} sont le \emph{n} ième code d'état correspondant, les
journaux et le gaz cumulé utilisé après chacun \_ \_ transaction (
\textbf{R} {[} \emph{n} {]} \textsubscript{b} , il \_ Quatrième com p
one n t dans le tuple, a déjà été défini en termes de logs). Nous
définissons également le \emph{n} ième état \emph{\textbf{σ}} {[}
\emph{n} {]}, qui est défini simplement comme la Etat résultant depuis
appliquer la correspondant

transaction à l'état résultant de la transaction précédente. action (ou
l'état initial du bloc dans le cas du premier tel transaction):
\end{quote}

(182) \protect\hypertarget{_bookmark66}{}{}\emph{\textbf{σ}} {[}
\emph{n} {]} = \href{/l}{Γ(} \emph{B} ) si \emph{n \textless{}} 0

\href{/l}{Υ(} \emph{\textbf{σ}} {[} \emph{n} − 1{]} \emph{, B}
\textbf{\textsubscript{T}} {[} \emph{n} {]}) autrement

\begin{quote}
Dans la Cas de \emph{B} \textbf{\textsubscript{R}} {[} \emph{n} {]}
\textsubscript{u} , nous \_ prendre \_ \_ un similaire approche \_ \_
définir \_ chaque Objet comme la gaz utilisé dans évaluer la
correspondre- ing transaction sommé avec la précédent Objet (ou alors
zéro, si ce est la première), donnant nous un course total:

(172) \emph{\textbf{σ}} {[} \textbf{B} {]} = \emph{\textbf{σ}} {[}
\textbf{B} {]} + ( 1 + ll \textbf{B U} ll \emph{R}

   0 si \emph{n \textless{}} 0

(173)

∀ \textbf{U} ∈ \textbf{BU \textsubscript{\_}} :

  + \textbf{R} {[} \emph{n} − 1{]} tu sinon

f ∅ si \emph{\textbf{σ}} {[} \textbf{U} {]} = ∅ ∧ \emph{R} = 0

Pour \textbf{R} {[} \emph{n} {]} \textbf{\textsubscript{l}} , nous
utiliser la \protect\hyperlink{_bookmark42}{Υ} une fonction que nous
conver-

\emph{\textbf{σ}} {[} \textbf{U} c {]} =
\end{quote}

c

\begin{quote}
\textbf{un} autrement

gentiment défini dans la transaction exécution une fonction.

(184) \textbf{R} {[} \emph{n} {]} \textbf{\textsubscript{l}} = Υ
\textbf{\textsuperscript{l}} ( \emph{\textbf{σ}} {[} \emph{n} − 1{]}
\emph{, B} \textbf{\textsubscript{T}} {[} \emph{n} {]})

(174) \textbf{un} ≡ ( \emph{\textbf{σ}} {[} \emph{U} \textsubscript{c}
{]} \textsubscript{n} \emph{, \textbf{σ }}{[} \emph{U} \textsubscript{c}
{]} \textsubscript{b} + \emph{R , \textbf{σ }}{[} \emph{U}
\textsubscript{c} {]} \textbf{\textsubscript{s}} \emph{, \textbf{σ }}{[}
\emph{U} \textsubscript{c} {]} \textsubscript{c} )

(175) \emph{R} ≡ ( 1 + \underline{1} ( \emph{U} − \emph{B} ) \emph{R}
\end{quote}

bloc

\begin{quote}
Nous définir \protect\hyperlink{_bookmark42}{\textbf{R} {[} \emph{n} {]}
z} dans un similaire manière.

(185) \textbf{R} {[} \emph{n} {]} \textsubscript{z} = Υ
\textsuperscript{z} ( \emph{\textbf{σ}} {[} \emph{n} − 1{]} \emph{, B}
\textbf{\textsubscript{T}} {[} \emph{n} {]})

ÉTHERUM~: UN SÉCURISE DÉCENTRALISÉ GÉNÉRALISÉ TRANSACTION COMPTABLE
\textbf{BERLIN VERSION} 16

\protect\hypertarget{_bookmark67}{}{}Enfin, nous définissons Π comme le
nouvel état étant donné le bloc re- fonction ward
\protect\hyperlink{_bookmark65}{Ω} appliquée à la résultante de la
transaction finale Etat, \protect\hyperlink{_bookmark2}{\emph{.€}} (
\emph{\textbf{σ}} ):

(186) Π( \emph{\textbf{σ} , B} ) ≡ Ω( \emph{B , .€} ( \emph{\textbf{σ}}
))

Ainsi, le mécanisme complet de transition de bloc est dé- une amende, à
l'exception pour PoW , la preuve de travail une fonction.

\protect\hypertarget{11.5._Mining_Proof-of-Work}{}{}11.5.
\textbf{Exploitation minière Preuve de travail.} Le exploitation minière
preuve de- travail (PoW) existe comme un cryptographiquement sécurise
nonce que prouve au-delà raisonnable doute que un particulier quantité
de calcul a été dépensée dans la détermination mination d'une valeur de
jeton \emph{n} . Il est utilisé pour faire respecter la chaîne de blocs
Sécurité par donnant sens et foi pour la notion de difficulté (et, par
extension, total dif- difficulté). Cependant, depuis l'extraction de
nouveaux blocs vient avec une récompense attachée, la preuve de travail
ne fonctionne pas seulement comme un méthode de sécurisation confiance
que la chaîne de blocs restera canonique dans le futur, mais aussi comme
une richesse Distribution mécanisme.

Pour ces deux raisons, il y a deux objectifs importants du fonction de
preuve de travail~; premièrement, il doit être aussi accessible que
possible au plus grand nombre. L'exigence de, ou récompense de, matériel
spécialisé et peu commun devrait être minimisé. Cela rend le modèle de
distribution comme ouvrir comme possible, et, idéalement, fait du la loi
de exploitation minière un échange simple de l'électricité à l'éther à
peu près au même taux pour personne environ la monde.

Deuxièmement, ce devrait ne pas être possible pour Fabriquer
super-linéaire profits, et surtout pas avec une barrière initiale
élevée. Tel un mécanisme permet un bien financé adversaire pour Gain un
gênant montant de la du réseau total exploitation minière Puissance et
comme tel donne eux un super-linéaire récompense (Donc biaiser
Distribution dans leur favoriser) comme Bien comme réduire la réseau
Sécurité.

L'un des fléaux du monde Bitcoin est les ASIC. Ceux-ci sont pièces
spécialisées de matériel de calcul qui n'existent que pour faire une
seule tâche \protect\hyperlink{_bookmark98}{(Smith {[}1997{]}).} Dans le
cas de Bitcoin, la tâche est la fonction de hachage SHA256
\protect\hyperlink{_bookmark84}{(Courtois et al. {[}2014{]}).} Tandis
que Les ASIC existent pour une fonction de preuve de travail, les deux
objectifs sont mis en danger. Pour cette raison, une fonction de preuve
de travail résistant aux ASIC (c'est-à-dire difficile ou économiquement
inefficace à mettre en œuvre dans du matériel de calcul spécialisé)
possède a été identifié comme la proverbial argent balle.

Deux directions exister pour ASIC résistance; d'abord Fabriquer il
séquentiel à mémoire dure, c'est-à-dire concevoir la fonction telle que
la détermination de la \protect\hyperlink{_bookmark17}{nonce} a besoin
un terrain de mem- ory et bande passante tel que la Mémoire ne peux pas
être utilisé en parallèle pour découvrir plusieurs nonces simultanément.
Le deuxième est de faire le type de calcul dont il aurait besoin pour
faire à usage général~; la signification de «~matériel spécialisé~» pour
un polyvalent tâche Positionner est, naturellement, général but Matériel
et comme tel produit de base bureau des ordinateurs sont probable pour
être jolie proche pour "spécialisé Matériel" pour la tâche. Pour
Ethereum 1.0 nous avoir choisi la première chemin.

Suite officiellement, la preuve de travail une fonction prend la
formulaire de PoW~:

(187)

256

\emph{m} = \protect\hyperlink{_bookmark16}{\emph{H} m} ∧ \emph{n}
\protect\hyperlink{_bookmark31}{\emph{H}} avec ( \emph{moi, n} ) = PoW (
\protect\hyperlink{_bookmark34}{\emph{H} n} \emph{, H} n \emph{,}
\textbf{ré} )

Où \emph{H} n est l'en-tête du nouveau bloc mais \emph{sans} la
composants nonce et mix-hash~; \emph{H} n est le nonce du entête;
\textbf{d} est un grand ensemble de données nécessaire pour calculer le
mix- Hacher et \emph{Hd} \textsubscript{\_} est la Nouveau bloc de
difficulté valeur (c'est à dire la

bloquer la difficulté de la section
\protect\hyperlink{10._Blocktree_to_Blockchain}{10).} PoW est la preuve
de travail fonction qui évalue un tableau avec le premier élément étant
le mixHash et le deuxième élément étant un pseudo- nombre aléatoire
cryptographiquement dépendant de \emph{H} et \textbf{d} . L'algorithme
sous-jacent s'appelle Ethash et est décrit au dessous de.

11.5.1. \emph{Éthash.} Éthash est la PoW algorithme pour Ethereum

1.0. C'est la dernière version de Dagger-Hashimoto, intro- réalisé par
\protect\hyperlink{_bookmark78}{Buterin}
\protect\hyperlink{_bookmark78}{{[}2013b{]}} et
\protect\hyperlink{_bookmark90}{Dryja}
\protect\hyperlink{_bookmark90}{{[}2014{]},} bien qu'il ne peut plus
s'appeler ainsi puisque beaucoup de les caractéristiques originales des
deux algorithmes ont été radicalement modifié avec R\&D de février 2015
au 4 mai 2015 \protect\hyperlink{_bookmark106}{(Jentzs ch}
\protect\hyperlink{_bookmark106}{{[}2015{]}).} L'itinéraire général que
l'algorithme prend est comme suit :

Il existe une graine qui peut être calculée pour chaque bloc en
parcourant les en-têtes de bloc jusqu'à ce que indiquer. A partir de la
graine, on peut calculer un pseudo-aléatoire cachette,
\protect\hyperlink{_bookmark155}{\emph{J} \textsubscript{cacheinit}}
octets en taille initiale. Magasin clients légers le cache. De la
cachette, nous pouvons générer un jeu de données,
\protect\hyperlink{_bookmark156}{\emph{J} \textsubscript{datasetinit}}
octets en taille initiale, avec la propriété que chaque l'élément de
l'ensemble de données ne dépend que d'un petit nombre de éléments de la
cache. Les clients complets et les mineurs stockent le base de données.
Le base de données grandit linéairement avec temps.

L'exploitation minière consiste à saisir des tranches aléatoires de
l'ensemble de données et les hacher ensemble. La vérification peut se
faire avec mémoire faible en utilisant le cache pour régénérer le
éléments de l'ensemble de données dont vous avez besoin, vous n'avez
donc qu'à boutique la cache. Le grande base de données est mis à jour
une fois tous

\protect\hyperlink{_bookmark157}{\emph{J} \textsubscript{époque}} blocs,
donc le vaste majorité de un mineur l'effort sera être en train de lire
la base de données, ne pas fabrication changements pour ce. Le

les paramètres mentionnés ainsi que l'algorithme sont expliqués dans
détail dans annexe \protect\hyperlink{Appendix_J._Ethash}{J}
\end{quote}

\begin{enumerate}
\def\labelenumi{\arabic{enumi}.}
\setcounter{enumi}{11}
\item
  \begin{quote}
  Exécution Contrats
  \end{quote}
\end{enumerate}

\begin{quote}
Il existe plusieurs modèles d'ingénierie contractuelle qui permettre des
comportements utiles particuliers~; deux d'entre eux que nous sera
brièvement discuter sont Les données flux et Aléatoire Nombres.
\end{quote}

\begin{enumerate}
\def\labelenumi{\arabic{enumi}.}
\item
  \textbf{Flux de données.} Un contrat de flux de données est un contrat
  qui pro- fournit un service unique : il donne accès aux informations
  de le monde extérieur au sein d'Ethereum. La précision et l'actualité
  de ces informations n'est pas garantie et il est la tâche d'un auteur
  de contrat secondaire - le contrat qui utilise la Les données
  nourrir---à déterminer comment beaucoup confiance pouvez être mis dans
  quelconque Célibataire Les données nourrir.
\end{enumerate}

\begin{quote}
Le schéma général implique un contrat unique au sein de Ethereum qui,
lorsqu'il reçoit un appel de message, répond avec quelques opportun
information concernant un externe phénomène- non. Un exemple pourrait
être la température locale de New York. Cela serait mis en œuvre sous la
forme d'un contrat qui renvoyé cette valeur d'un point connu dans le
stockage. De bien sûr ce point de stockage doit être maintenu avec le
corriger une telle température, et donc la deuxième partie de la modèle
voudrais être pour un externe serveur pour Cours un Ethereum nœud, et
immédiatement sur Découverte de un Nouveau bloc, crée une nouvelle
transaction valide, envoyée au contrat, mettant à jour ladite valeur en
stockage. Le code du contrat accepterait de telles mises à jour seul
depuis la identité contenu sur mentionné serveur.
\end{quote}

\begin{enumerate}
\def\labelenumi{\arabic{enumi}.}
\setcounter{enumi}{1}
\item
  \begin{quote}
  \textbf{Nombres aléatoires.} Fournir des nombres aléatoires au sein
  d'un système déterministe est naturellement impossible tâche.
  Cependant, on peut approximer avec un pseudo-aléatoire Nombres par
  utilisant Les données qui est en général inconnaissable
  \end{quote}
\end{enumerate}

\begin{quote}
ÉTHERUM~: UN SÉCURISE DÉCENTRALISÉ GÉNÉRALISÉ TRANSACTION COMPTABLE
\textbf{BERLIN VERSION} 17

au moment de la transaction. Ces données pourraient inclure le le
hachage du bloc, l'horodatage du bloc et le bénéfice du bloc adresse
ciaire. Afin de rendre la tâche difficile aux mineurs malveillants pour
contrôler ces valeurs, il faut utiliser le
\protect\hyperlink{_bookmark144}{BLOCKHASH} opération dans Commande pour
utiliser hachages de la précédent 256 blocs sous forme de nombres
pseudo-aléatoires. Pour une série de tels nombres, une solution triviale
serait d'ajouter une quantité constante et hachage la résultat.
\end{quote}

\begin{enumerate}
\def\labelenumi{\arabic{enumi}.}
\setcounter{enumi}{12}
\item
  \begin{quote}
  Futur les directions
  \end{quote}
\end{enumerate}

\begin{quote}
La base de données d'état ne sera pas obligée de conserver toutes les
données passées Etat \protect\hyperlink{_bookmark118}{essayer}
structures dans la futur. Ce devrait maintenir un âge pour chaque nœud
et finalement Jeter nœuds que ne sont ni assez récents ni points de
contrôle. Points de contrôle, ou un ensemble de nœuds dans la base de
données qui permettent à un trie d'état du bloc à traverser, pourrait
être utilisé pour placer un limite maximale de la quantité de calcul
nécessaire dans Commande pour récupérer quelconque Etat tout au long de
la chaîne de blocs.

La consolidation de la blockchain pourrait être utilisée afin
\protect\hypertarget{_bookmark70}{}{}de re- duc la montant de blocs un
client voudrais avoir besoin pour Télécharger pour agir comme un nœud
minier complet. Une archive compressée du structure triée à des moments
donnés (peut-être un sur \protect\hypertarget{_bookmark69}{}{}chaque 10
000e bloc) pourrait être maintenu par le réseau de pairs, refondre
efficacement le \protect\hyperlink{_bookmark153}{bloc de genèse.} Cela
réduirait le montant à télécharger sur une seule archive
\protect\hypertarget{_bookmark71}{}{}plus un dur maximum limite de
blocs.

Enfin, la compression de la blockchain pourrait peut-être être con-
canalisé~: nœuds dans l'état trie qui n'ont pas envoyé/reçu
\protect\hypertarget{_bookmark72}{}{}un transaction dans une quantité
constante de blocs pourrait être jeté dehors, réduire tous les deux
Fuite d'éther et la croissance de la Etat base de données.

13.1. \textbf{Évolutivité. L'évolutivité reste une} préoccupation
éternelle .\protect\hypertarget{_bookmark75}{}{} Avec un généralisé Etat
passage une fonction, ce devient dif- difficile de partitionner et de
paralléliser les transactions pour appliquer la stratégie de diviser
pour mieux régner. Sans réponse, la
\protect\hypertarget{_bookmark74}{}{}dynamique la plage de valeurs du
système reste essentiellement fixe et la moyen transaction valeur
augmente, la moins de valeur de ils deviennent ignorés, étant
économiquement inutile d'in- inclure dans le grand livre principal.
Cependant, plusieurs stratégies
\protect\hypertarget{_bookmark73}{}{}existent qui peuvent
potentiellement être exploitées pour fournir un Suite évolutif
protocole.

Une certaine forme de structure hiérarchique, réalisée soit par
consolider les petites chaînes plus légères dans le
\protect\hypertarget{_bookmark78}{}{}principal bloc ou alors immeuble la
principale bloc par la incrémental- combinaison et adhésion (par preuve
de travail) de des ensembles de transactions plus petits peuvent
permettre la parallélisation des
\protect\hypertarget{_bookmark76}{}{}trans- combinaison d'action et
construction de blocs. Le parallélisme pourrait proviennent également
d'un ensemble prioritaire de chaînes de blocs parallèles
\protect\hypertarget{_bookmark77}{}{}, consolider chaque bloc et avec
dupliquer ou alors invalide transactions jeté dehors par conséquent.

Enfin, un calcul vérifiable, s'il est fait
\protect\hypertarget{_bookmark79}{}{}généralement capable et
suffisamment efficace, peut fournir un itinéraire pour permettre au
preuve de travail pour être la vérification de final Etat.
\end{quote}

\begin{enumerate}
\def\labelenumi{\arabic{enumi}.}
\setcounter{enumi}{13}
\item
  \begin{quote}
  Conclusion
  \end{quote}
\end{enumerate}

\begin{quote}
Nous avons introduit, discuté et formellement
défini\protect\hypertarget{_bookmark81}{}{}
\protect\hypertarget{_bookmark82}{}{}la protocole d'Ethereum. Grâce à ce
protocole, le lecteur peut implémenter un nœud sur le réseau Ethereum et
\protect\hypertarget{_bookmark80}{}{}rejoindre d'autres dans un système
d'exploitation social sécurisé décentralisé. Contrats mai être auteur
dans Commande pour algorithmiquement spécifier et de manière autonome
imposer règles de interaction.
\end{quote}

\begin{enumerate}
\def\labelenumi{\arabic{enumi}.}
\setcounter{enumi}{14}
\item
  \begin{quote}
  Remerciements
  \end{quote}
\end{enumerate}

\begin{quote}
Beaucoup Merci pour Aéron Buchanan pour création la Révisions de
\emph{Homestead} , Christoph Jentzsch pour l'auteur du Algorithme Ethash
et Yoichi Hirai pour avoir fait la plupart des Modifications EIP-150.
Entretien important, correction utile tions et suggestions ont été à
condition de par un Numéro de autres de l'organisation Ethereum DEV et
Ethereum com- m uni t y un t grande y compris Rafale a v Simonson, P a w
e l w Bylica, Jutta Steiner, Nick \_ \_ Épargnants , \_ \_ Viktor T r ´
on, Marquez \_ \_ Sim o vic, Giacomo Tazzari et, de cours, Vitalik
Butérine.
\end{quote}

\begin{enumerate}
\def\labelenumi{\arabic{enumi}.}
\setcounter{enumi}{15}
\item
  \begin{quote}
  Disponibilité
  \end{quote}
\end{enumerate}

\begin{quote}
Le la source de cette papier est entretenu à
\href{https://github.com/ethereum/yellowpaper/}{https:}

\href{https://github.com/ethereum/yellowpaper/}{//github.com/ethereum/yellowpaper/}
. Un auto- Le PDF généré se trouve sur
\href{https://ethereum.github.io/yellowpaper/paper.pdf}{https://ethereum.github.}
\href{https://ethereum.github.io/yellowpaper/paper.pdf}{io/yellowpaper/paper.pdf}
.

Références

Jacob Aron. Le logiciel BitCoin trouve une nouvelle vie. \emph{Nouveau
scientifique} , 213(2847):20, 2012. URL
\href{http://www.sciencedirect.com/science/article/pii/S0262407912601055}{http://www.sciencedirect.}
\href{http://www.sciencedirect.com/science/article/pii/S0262407912601055}{com
/science/article/pii/S0262407912601055} .

Adam Arrière. Haschcash - Amortissable Publiquement Auditable

Fonctions de coût, 2002. URL
\href{http://www.hashcash.org/papers/amortizable.pdf}{http://www.hashcash.org/}
\href{http://www.hashcash.org/papers/amortizable.pdf}{papiers/amortissable.pdf}
.

Tim Beiko, James Hancock et Thomas Jay Rush. EIP- 4345~: Retard de la
bombe de difficulté à juin 2022, octobre 2021a. URL
\url{https://eips.ethereum.org/EIPS/eip-4345} .

Tim Beiko et Al. Berlin réseau améliorer spécifique-

tion, 2021b. URL
\href{https://github.com/ethereum/eth1.0-specs/blob/master/network-upgrades/mainnet-upgrades/berlin.md}{https://github.com/ethereum/}
\href{https://github.com/ethereum/eth1.0-specs/blob/master/network-upgrades/mainnet-upgrades/berlin.md}{eth1.0-specs/blob/master/network-upgrades/}
\href{https://github.com/ethereum/eth1.0-specs/blob/master/network-upgrades/mainnet-upgrades/berlin.md}{mainnet-upgrades/berlin.md}
.

Guide Bertoni, Jeanne Démons, Michal Peter, et Gilles Van Assche. Le
KECCAK SHA-3 sous- mission, 2011. URL
\href{https://keccak.team/files/Keccak-submission-3.pdf}{https://keccak.team/files/}

\href{https://keccak.team/files/Keccak-submission-3.pdf}{Keccak-submission-3.pdf}
.

romain Boutellier et mareike Heinzen. Pirates, Pio- neers, innovateurs
et imitateurs. En \emph{croissance jusqu'à Innover} , pages 85--96.
Springer, 2014. URL
\href{https://www.springer.com/gb/book/9783319040158}{https:}

\href{https://www.springer.com/gb/book/9783319040158}{//www.springer.com/gb/book/9783319040158}
.

Vitalik Buterin. Ethereum~: Une Smart de nouvelle génération Contrat et
Décentralisé Application Plateforme,

2013a. URL
\href{https://github.com/ethereum/wiki/wiki/White-Paper}{https://github.com/ethereum/wiki/}
\href{https://github.com/ethereum/wiki/wiki/White-Paper}{wiki/Livre
blanc} .

Vitalik Buterin. Dagger~: une mémoire difficile à calculer, Memory-Easy
to Verify Scrypt Alternative, 2013b. URL
\url{http://www.hashcash.org/papers/dagger.html} .

Vitalik Butérine. EIP-2~: Propriété hard-fork changements,

2015. URL \url{https://eips.ethereum.org/EIPS/eip-2} . Vitalik Butérine.
EIP-100~: Changer difficulté ajustement pour cibler moyenne bloc temps y
compris oncles, Avril 2016a.

URL \url{https://eips.ethereum.org/EIPS/eip-100} . Vitalik Butérine.
EIP-155~: Simple rejouer attaque protéger

tion, Octobre 2016b. URL
\href{https://eips.ethereum.org/EIPS/eip-155}{https://eips.ethereu m.}
\href{https://eips.ethereum.org/EIPS/eip-155}{org/EIPS/eip-155} .

Vitalik Buterin. EIP-1014~: Skinny CREATE2, avril 2018. URL
\url{https://eips.ethereum.org/EIPS/eip-1014} .
\end{quote}

Vitalik Butérine et Martin Swende. EIP-2929~: Gaz Coût dans-

plis pour Etat accéder les opcodes, Septembre 2020a. URL

\begin{quote}
\url{https://eips.ethereum.org/EIPS/eip-2929} .

Vitalik Buterin et Martin Swende. EIP-2930~: Accompagnement en option
listes d'accès, août 2020b. URL
\href{https://eips.ethereum.org/EIPS/eip-2930}{https://eips.ethereum.}
\href{https://eips.ethereum.org/EIPS/eip-2930}{org/EIPS/eip-2930} .

ÉTHERUM~: UN SÉCURISE DÉCENTRALISÉ GÉNÉRALISÉ TRANSACTION COMPTABLE
\textbf{BERLIN VERSION} 18

\protect\hypertarget{_bookmark83}{}{}Éric Conner. EIP-2384~: Muir
Glacier difficulté b \protect\hypertarget{_bookmark85}{}{}omb retard,
Novembre 2019. URL
\href{https://eips.ethereum.org/EIPS/eip-2384}{https://eips.ethereum.}
\href{https://eips.ethereum.org/EIPS/eip-2384}{org/EIPS/eip-2384} .

Nicolas T Courtoise, marek Grajek, et Rahul
\protect\hypertarget{_bookmark86}{}{}Naïk.

\emph{Optimisation SHA256 dans Bitcoin Exploitation minière} , pages
131--

144. Springer Berlin Heidelberg, Berlin, Heidel- berg, 2014. ISBN
978-3-662-44893-9. est ce que je: dix. 1007/978-3-662-44893-9 12. URL
\href{https://doi.org/10.1007/978-3-662-44893-9_12}{https://doi.org/10.}
\href{https://doi.org/10.1007/978-3-662-44893-9_12}{1007/978-3-662-44893-9\_12}
.

BA Davey et HA Prisley. \emph{Introduction pour treillis et Commande. 2e
éd.} Cambridge~: Université \protect\hypertarget{_bookmark89}{}{}de
Cambridge \protect\hypertarget{_bookmark90}{}{}Presse, 2e éd. édition,
2002. ISBN 0-521-78451-4/pbk. Thaddée Dryja. Hashimoto~: E/S lié preuve
de travail, 2014. URL http://diyhpl.us/ \textasciitilde{} bryan/papers2/

bitcoin/meh/hashimoto.pdf .

Cynthia Dwork et Moni Naour. Tarification passant par
\protect\hypertarget{_bookmark92}{}{}pro- arrêter ou combattre le
courrier indésirable. Dans \emph{In 12th An- nual International
Cryptology Conference} , pages 139-- 147, 1992. URL
\href{http://www.wisdom.weizmann.ac.il/~naor/PAPERS/pvp.pdf}{http://www.wisdom.weizmann.ac.il/}

\textasciitilde{} naor/PAPERS/pvp.pdf .

Dankrad Feist, Dmitri Khovratovitch, et Marius van
\protect\hypertarget{_bookmark94}{}{}der

Wijden. EIP-3607~: Rejeter transactions depuis expéditeurs avec déployé
code, Juin 2021. URL
\href{https://eips.ethereum.org/EIPS/eip-3607}{https://eips.}
\href{https://eips.ethereum.org/EIPS/eip-3607}{ethereum.org/EIPS/eip-3607}
.

Alexandre Forshtat et Yoav Weiss. EIP-1706~: Désactiver sstore

avec gaz gauche plus bas que appel traitement, 2019. URL https:

//eips.ethereum.org/EIPS/eip-1706 .

Phong Vo Glenn Fowler, Landon Curt Noll. Fo
\protect\hypertarget{_bookmark98}{}{}wlerNol- Fonction de hachage lVo,
1991. URL
\href{http://www.isthe.com/chongo/tech/comp/fnv/index.html}{http://www.isthe.com/}
\href{http://www.isthe.com/chongo/tech/comp/fnv/index.html}{chongo/tech/comp/fnv/index.html}
.

Nils Goura, Arun Patel, Arvinderpal Errer, Hans Eberle
\protect\hypertarget{_bookmark100}{}{},

et Sheueling Chang Shantz. Comparer la courbe elliptique cryptographie
et RSA sur les processeurs 8 bits. En \emph{cryptographie Matériel et
Systèmes Embarqués-CHES 2004} ,
\protect\hypertarget{_bookmark101}{}{}pages 119--132. Springer, 2004.
URL
\href{https://www.iacr.org/archive/ches2004/31560117/31560117.pdf}{https://www.iacr.org/}
\href{https://www.iacr.org/archive/ches2004/31560117/31560117.pdf}{archive/ches2004/31560117/31560117.pdf}
.

James Hancock. EIP-3554~: Difficile retard de la bombe à De- décembre
2021, mai 2021. URL
\href{https://eips.ethereum.org/EIPS/eip-3554}{https://eips.ethereum.}
\href{https://eips.ethereum.org/EIPS/eip-3554}{org/EIPS/eip-3554} .

Tjaden Hesse, Mat Luongo, Piotr Dyraga, et James

Hancock. EIP-152~: Ajouter la fonction de compression BLAKE2 tion 'F'
précompiler, Octobre 2016. URL
\href{https://eips.ethereum.org/EIPS/eip-152}{https://eips.}
\href{https://eips.ethereum.org/EIPS/eip-152}{ethereum.org/EIPS/eip-152}
.

Christophe Jentzsch. Commettre Date pour éthash, 2015. URL

\href{https://github.com/ethereum/yellowpaper/commit/77a8cf2428ce245bf6e2c39c5e652ba58a278666\#commitcomment-24644869}{https://github.com/ethereum/yellowpaper/commit/}
\href{https://github.com/ethereum/yellowpaper/commit/77a8cf2428ce245bf6e2c39c5e652ba58a278666\#commitcomment-24644869}{77a8cf2428ce245bf6e2c39c5e652ba58a278666\#}
\href{https://github.com/ethereum/yellowpaper/commit/77a8cf2428ce245bf6e2c39c5e652ba58a278666\#commitcomment-24644869}{commitcomment-24644869}
.

Enfiler Johnson, Alfred Ménezès, et Scott Van- calcul. Le Elliptique
Courbe Signalisation numérique-\protect\hypertarget{_bookmark109}{}{}
ture Algorithme (ECDSA), 2001. URL https:

//web.archive.org/web/20170921160141/http://

cs.ucsb.edu/ \textasciitilde{} koc/ccs130h/notes/ecdsa-
\protect\hypertarget{_bookmark110}{}{}cert.pdf . Accédé 21 Septembre
2017, mais la original lien a été

inaccessible sur 19 Octobre 2017. Faire référence à section 6.2 pour
ECDSAPUBKEY, et section 7 pour ECDSASIGN et

ECDSARECOVER.

Sergio Démian Lerner. Stricte Mémoire Dur Hachage Fonction- tions, 2014.
URL
\href{http://www.hashcash.org/papers/memohash.pdf}{http://www.hashcash.org/papers/}
\href{http://www.hashcash.org/papers/memohash.pdf}{memohash.pdf} .

Marquer Meunier. Le Futur de Droit. Dans \emph{Pennsylvanie-}

\emph{par livré à la conférence Extra 3 (août 9)} , 1997. URL
\href{https://drive.google.com/file/d/0Bw0VXJKBgYPMS0J2VGIyWWlocms/edit?usp=sharing}{https://drive.google.com/file/d/}
\href{https://drive.google.com/file/d/0Bw0VXJKBgYPMS0J2VGIyWWlocms/edit?usp=sharing}{0Bw0VXJKBgYPMS0J2VGIyWWlocms/edit?usp=partage}
.

Satoshi Nakamoto. Bitcoin~: UN d'égal à égal électronique espèces

système, 2008. URL
\href{http://www.bitcoin.org/bitcoin.pdf}{http://www.bitcoin.org/bitcoin.}
\href{http://www.bitcoin.org/bitcoin.pdf}{pdf} .

Meni Rosenfeld, Yoni Assie, Vitalik Butérine, m li- orhakiLior, Oded
Leïba, Assaf Shomer, et Eli- couru Zach. Coloré Pièces de monnaie
Protocole Spécification, 2012. URL
\href{https://github.com/Colored-Coins/Colored-Coins-Protocol-Specification}{https://github.com/Colored-Coins/}

\href{https://github.com/Colored-Coins/Colored-Coins-Protocol-Specification}{Spécification
du protocole des pièces de couleur} .

Markku-Juhani Saarinen et Jean Philippe Aumasson. RFC~7693~: Le hachage
cryptographique BLAKE2 et mes- code d'authentification sage (MAC),
novembre 2015. URL \url{https://tools.ietf.org/html/rfc7693} .

Afrique Schoedon. EIP-1234~: Constantinople difficulté bombe

retard et bloc récompense ajustement, 2018. URL https:

//eips.ethereum.org/EIPS/eip-1234 .

Afri Schoedon et Vitalik Buterin. EIP-649~: Métropole- retard de bombe
de difficulté de lis et réduction de récompense de bloc, Juin 2017. URL
\href{https://eips.ethereum.org/EIPS/eip-649}{https://eips.ethereum.org/EIPS/}

\href{https://eips.ethereum.org/EIPS/eip-649}{eip-649} .

Michael John Sébastien Forgeron. \emph{Spécifique à l'application
Intégré Circuits} . Addison-Wesley, 1997. ISBN 0201500221.

Yonatan Sompolinsky et Aviv Zohar. Accélération peu- pièces de monnaie
transaction En traitement. vite de l'argent grandit sur des arbres, ne
pas Chaînes, 2013. URL
\href{https://eprint.iacr.org/2013/881}{https://eprint.iacr.org/ \_}

\href{https://eprint.iacr.org/2013/881}{2013/881} .

Simon Sprankel. Technique Base de Numérique Devises, 2013. URL
\href{http://www.coderblog.de/wp-content/uploads/technical-basis-of-digital-currencies.pdf}{http://www.coderblog.de/wp-content/}
\href{http://www.coderblog.de/wp-content/uploads/technical-basis-of-digital-currencies.pdf}{téléchargements/
base-technique-des-monnaies-numériques.}
\href{http://www.coderblog.de/wp-content/uploads/technical-basis-of-digital-currencies.pdf}{pdf}
.

pseudo Szabo. Formaliser et sécurisation relation-

navires sur le public réseaux. \emph{Première Lundi} , 2(9), 1997. URL
\href{http://firstmonday.org/ojs/index.php/fm/article/view/548}{http://firstmonday.org/ojs/index.php/}
\href{http://firstmonday.org/ojs/index.php/fm/article/view/548}{fm/article/vue/548}
.

Wei Soie. EIP-2200 : structuré définitions pour rapporter gaz moi-

tering, 2019. URL
\href{https://eips.ethereum.org/EIPS/eip-2200}{https://eips.ethereum.org/EIPS/}
\href{https://eips.ethereum.org/EIPS/eip-2200}{eip-2200} .

Vivek Vishnumurthy, Sangeeth Chandrakumar, et Emin Gn Sirer. KARMA : Un
cadre économique sécurisé pour d'égal à égal Ressource partage, 2003.
URL https://

www.cs.cornell.edu/people/egs/papers/karma.pdf .

J R Willette. MasterCoin Complet Spécification, 2013. URL
\url{https://github.com/mastercoin-MSC/spec} .

Michée Zoltu. EIP-2718~: Tapé transaction enveloppe,

Juin 2020. URL
\href{https://eips.ethereum.org/EIPS/eip-2718}{https://eips.ethereum.org/EIPS/}
\href{https://eips.ethereum.org/EIPS/eip-2718}{eip-2718} .

\protect\hypertarget{Appendix_A._Terminology}{}{}annexe UN. Terminologie

\textbf{Acteur externe~:} Une personne ou une autre entité capable de
s'interfacer avec un nœud Ethereum, mais extérieure au monde de
Ethereum. Il peut interagir avec Ethereum en déposant des transactions
signées et en inspectant la blockchain et associé Etat. Possède une (ou
alors Suite) intrinsèque Comptes.

\textbf{Adresse:} UN 160 bits code utilisé pour identifier Comptes.

\textbf{Compte:} Comptes avoir un intrinsèque solde et transaction
compter entretenu comme partie de la Ethereum Etat. Ils aussi avoir
quelques (peut-être vider) EVM Code et un (peut-être vider) Stockage
État associé avec eux.

ÉTHERUM~: UN SÉCURISE DÉCENTRALISÉ GÉNÉRALISÉ TRANSACTION COMPTABLE
\textbf{BERLIN VERSION} 19

Bien qu'homogène, il est logique de distinguer deux types pratiques de
comptes : ceux avec vide Code EVM associé (ainsi le solde du compte est
contrôlé, le cas échéant, par une entité externe) et ceux avec Code EVM
associé non vide (le compte représente donc un Objet Autonome). Chaque
compte a un Célibataire Adresse que identifie ce.

\textbf{Transaction:} Une donnée, signée par un Acteur Externe. Il
représente soit un Message soit une nouvelle Autonome Objet.
Transactions sont enregistré dans chaque bloc de la chaîne de blocs.

\textbf{Objet autonome~:} un objet fictif existant uniquement dans
l'état hypothétique d'Ethereum. A une valeur intrinsèque adresse et donc
un compte associé ; le compte aura un code EVM associé non vide.
Incorporé seul comme la Stockage État de que Compte.

\textbf{État de stockage~:} Les informations propres à un compte donné
qui sont conservées entre les moments où le Comptes associé EVM Code
court.

\textbf{Message:} Les données (sous la forme d'un ensemble d'octets) et
la valeur (spécifiée comme Ether) qui sont transmises entre deux
comptes, soit par le fonctionnement déterministe d'un Objet Autonome ou
la signature cryptographiquement sécurisée du Transaction.

\textbf{Appel de message~:} action de transmettre un message d'un compte
à un autre. Si le compte de destination est associé avec non vide EVM
Code, puis le La MV va démarrer avec le état de ledit Objet et le
message a agi sur. Si l'expéditeur du message est un objet autonome,
l'appel transmet toutes les données renvoyées par la VM opération.

\textbf{Gaz:} L'unité de coût de réseau fondamentale. Payé exclusivement
par Ether (à partir de PoC-4), qui est converti librement en et du gaz
selon les besoins. Le gaz n'existe pas en dehors du moteur de calcul
interne d'Ethereum ; son prix est Positionner par la Transaction et
mineurs sont libre pour ignorer Transactions à qui Gaz le prix est aussi
bas.

\textbf{Contrat:} Terme informel utilisé pour désigner à la fois un
morceau de code EVM qui peut être associé à un compte ou un Autonome
Objet.

\textbf{Objet:} Synonyme pour Autonome Objet.

\textbf{Application~:} Un visible par l'utilisateur final application
hébergé dans la Ethereum Navigateur.

\textbf{Navigateur Ethereum :} (alias Ethereum Reference Client) Une
interface graphique multiplateforme d'une interface similaire à une
interface simplifiée navigateur (à la Chrome) capable d'héberger des
applications en bac à sable dont le backend est purement sur l'Ethereum
protocole.

\textbf{Ethereum Virtuel Machine:} (alias EVM) Le virtuel machine que
formes la clé partie de la exécution maquette pour un Comptes associé
EVM Code.

\textbf{Environnement d'exécution Ethereum~:} (alias ERE)
L'environnement fourni à un objet autonome s'exécutant dans l'EVM.
Inclut l'EVM mais aussi la structure de l'état mondial sur laquelle
s'appuie l'EVM pour certain E/S des instructions y compris APPEL \&
CRÉER.

\textbf{Code EMV~:} Le bytecode que la EVM pouvez nativement exécuter.
Utilisé pour officiellement spécifier la sens et ramifications de un
message pour un Compte.

\textbf{EVM Assemblée:} Le lisible par l'homme formulaire de Code EVM.

\textbf{JE VAIS:} Le Lisp-like Niveau faible Langue, un inscriptible par
l'homme Langue utilisé pour création Facile contrats et général niveau
faible Langue boîte à outils pour trans-compilation pour.

\protect\hypertarget{Appendix_B._Recursive_Length_Prefix}{}{}annexe B
Récursif Longueur Préfixe

\protect\hypertarget{_bookmark113}{}{}Cette est un sérialisation méthode
pour codage arbitrairement structuré binaire Les données (octet
tableaux). Nous définir la Positionner de possible structures T :

(188)

(189)

(190)

J ≡ L \textbackslash± B

L ≡ \{ \textbf{t} : \textbf{t} = ( \textbf{t} {[}0{]} \emph{,}
\textbf{t} {[}1{]} \emph{, ...} ) ∧ ∀n \emph{\_ \textless{}} ll
\textbf{ll} ll : \textbf{t} {[} \emph{n} {]} ∈ T \}

B ≡ \{ \textbf{b} : \textbf{b} = ( \textbf{b} {[}0{]} \emph{,}
\textbf{b} {[}1{]} \emph{, ...} ) ∧ ∀n \emph{\_ \textless{}} ll
\textbf{b} ll : \textbf{b} {[} \emph{n} {]} ∈ O \}

Où O est la Positionner de (8 bits) octets. Ainsi B est la Positionner
de tout séquences de octets (autrement connu comme octet tableaux, et
une feuille si on l'imagine comme un arbre), L est l'ensemble de toutes
les (sous-)structures arborescentes qui ne sont pas une seule feuille
(un nœud de branche si imaginé comme un arbre) et J est la Positionner
de tout octet tableaux et tel de construction séquences. Le disjoint
syndicat \textbackslash± est avait besoin seul

pour distinguer la vider octet déployer () ∈ B depuis la vider liste ()
∈ L , qui sont codé différemment comme défini au dessous de; comme

commun, nous sera abuser de notation et laisser la disjoint syndicat
indices implicite, inférable depuis le contexte.

Nous définissons la fonction RLP comme RLP à travers deux
sous-fonctions, la première gérant l'instance lorsque la valeur est un
octet déployer, la seconde lorsque ce est un séquence de plus loin
valeurs:

(191) RLP ( \textbf{x} ) \emph{R} b ( \textbf{x} ) si \textbf{X} ∈ B

\emph{R} \textsubscript{l} ( \textbf{x} ) sinon

Si la valeur pour être sérialisé est un octet déployer, la RLP
sérialisation prend une de Trois formes:
\end{quote}

\begin{itemize}
\item
  Si la octet déployer contient uniquement un Célibataire octet et que
  Célibataire octet est moins que 128, alors la saisir est exactement
  égal pour la production.
\item
  Si la octet déployer contient moins de que 56 octets, alors la
  production est égal pour la saisir préfixé par la octet égal pour la
  longueur de la octet déployer plus 128.
\end{itemize}

\begin{quote}
ÉTHERUM~: UN SÉCURISE DÉCENTRALISÉ GÉNÉRALISÉ TRANSACTION COMPTABLE
\textbf{BERLIN VERSION} 20
\end{quote}

\begin{itemize}
\item
  Autrement, la production est égal pour la saisir, à condition de que
  ce contient moins de que 2 octets, préfixé par la
\end{itemize}

\begin{quote}
longueur minimale octet déployer qui lorsque interprété comme un
big-endian entier est égal pour la longueur de la saisir octet

déployer, qui est lui-même préfixé par la Numéro de octets obligatoire
pour fidèlement encoder cette longueur valeur plus 183.

Tableaux d'octets contenant 2 \textsuperscript{64} ou plusieurs octets
ne peuvent pas être encodés. Cette restriction garantit que le premier
octet de l'encodage \protect\hypertarget{_bookmark114}{}{}de un octet
déployer est toujours au dessous de 192, et Donc ce pouvez être
facilement distingué depuis la encodages de séquences dans L. \_

Formellement , \_ \_ nous \_ définir \emph{R} \textsubscript{b} :

(192)

\protect\hypertarget{_bookmark115}{}{}\emph{R} \textsubscript{b} (
\textbf{x} ) ≡

\textbf{x} si ll \textbf{x} ll = 1 ∧ \textbf{×} {[}0{]}
\emph{\textless{}} 128

(128 + ll \textbf{x} ll ) · \textbf{x} sinon si ll \textbf{x} ll
\emph{\textless{}} 56

∅ sinon

\textbf{b} − 1

(193)

ÊTRE ( \emph{x} ) ≡ ( \emph{b} 0 \emph{, b} 1 \emph{, ...} ) : \emph{b}
0

0 ∧ \emph{X} =

\emph{n} =0

\emph{b n} · 256 \textbf{b} − 1 − \emph{n}

(194) ( \emph{x} 1 \emph{, ..., x n} ) · ( \emph{y} 1 \emph{, ..., y m}
) = ( \emph{x} 1 \emph{, ..., x n , y} 1 \emph{, ..., y m} )

Ainsi ÊTRE est la une fonction que se développe un non négatif entier
valeur pour un big-endian octet déployer de minimal longueur et la point
opérateur effectue séquence enchaînement.

Si Au lieu, la valeur pour être sérialisé est un séquence de autre
éléments alors la RLP sérialisation prend une de deux formes:
\end{quote}

\begin{itemize}
\item
  Si la concaténé sérialisations de chaque contenu Objet est moins que
  56 octets dans longueur, alors la production est égal pour que
  enchaînement préfixé par la octet égal pour la longueur de cette octet
  déployer plus 192.
\item
  Autrement, la production est égal pour la concaténé sérialisations, à
  condition de que elles ou ils contenir moins de que 2 octets,
\end{itemize}

\begin{quote}
préfixé par la longueur minimale octet déployer qui lorsque interprété
comme un big-endian entier est égal pour la longueur

de la concaténé sérialisations octet déployer, qui est lui-même préfixé
par la Numéro de octets obligatoire pour fidèlement encoder cette
longueur valeur plus 247.

Séquences à qui concaténé sérialisé éléments contenir 2
\textsuperscript{64} ou alors Suite octets ne peux pas être codé. Cette
restriction assure \protect\hypertarget{_bookmark116}{}{}que la première
octet de la codage Est-ce que ne pas dépasser 255 (autrement ce voudrais
ne pas être un octet).

Ainsi nous terminer par officiellement définir \emph{R}
\textsubscript{l} :

(195)

\emph{R} \textsubscript{l} ( \textbf{x} ) ≡

247 + BE ( ll \emph{s} ( \textbf{x} ) ll ) · BE ( ll \emph{s} (
\textbf{x} ) ll ) · \emph{s} ( \textbf{x} ) autre si \emph{s} (
\textbf{x} ) = ∅ ∧ ll \emph{s} ( \textbf{x} ) ll \emph{\textless{}} 2
\textsuperscript{64}

F

Si RLP est utilisé pour encoder un scalaire, défini seul comme un non
négatif entier (dans N , ou alors dans N \emph{x} pour quelconque
\emph{x} ), ce doit être codé comme le tableau d'octets le plus court
dont l'interprétation gros-boutiste est le scalaire. Ainsi, le RLP d'un
entier non négatif \emph{i} est défini comme:

(197) RLP ( \emph{je} : \emph{je} ∈ N ) ≡ RLP ( BE ( \emph{i} ))

Lors de l'interprétation des données RLP, si un fragment attendu est
décodé en tant que scalaire et que des zéros non significatifs sont
trouvés dans l'octet séquence, les clients sont tenus de la considérer
comme non canonique et de la traiter de la même manière que des données
RLP autrement invalides, congédier ce totalement.

Là est non spécifique canonique codage format pour signé ou alors point
flottant valeurs.

annexe C Préfixe hexadécimal Codage

Le codage par préfixe hexadécimal est une méthode efficace pour coder un
nombre arbitraire de quartets sous la forme d'un tableau d'octets. Il
est capable de stocker un indicateur supplémentaire qui, lorsqu'il est
utilisé dans le contexte du trie (le seul contexte dans lequel il est
utilisé), lève l'ambiguïté entre nœud les types.

Il est défini comme la fonction HP qui mappe à partir d'une séquence de
quartets (représentés par l'ensemble Y ) avec un booléen valeur pour un
séquence de octets (représentée par la Positionner B ):

(198)

PS ( \textbf{x} \emph{, t} ) : \textbf{x} Y (16 \emph{f} ( \emph{t} )
\emph{,} 16 \textbf{fois} {[}0{]} + \textbf{x} {[}1{]} \emph{,} 16
\textbf{×} {[}2{]} + \textbf{x} {[}3{]} \emph{, ...} ) si ll \textbf{x}
ll est même

(16( \emph{f} ( \emph{t} ) + 1) + \textbf{x} {[}0{]} \emph{,} 16
\textbf{fois} {[}1{]} + \textbf{x} {[}2{]} \emph{,} 16 \textbf{fois}
{[}3{]} + \textbf{x} {[}4{]} \emph{, ...} ) autrement

(199)

\emph{F} ( \emph{t} ) ≡ f 2 si \emph{t} 0

0 autrement

Ainsi, le quartet haut du premier octet contient deux drapeaux~; le bit
le plus bas codant l'impair de la longueur et le deuxième codage le plus
bas du drapeau \emph{t} . Le quartet bas du premier octet est nul dans
le cas d'un nombre pair de quartets et le premier quartet dans le cas
d'un nombre impair. Tous les quartets restants (maintenant un nombre
pair) s'insèrent correctement dans le reste octets.

ÉTHERUM~: UN SÉCURISE DÉCENTRALISÉ GÉNÉRALISÉ TRANSACTION COMPTABLE
\textbf{BERLIN VERSION} 21

\protect\hypertarget{Appendix_D._Modified_Merkle_Patricia_Tre}{}{}annexe
RÉ. Modifié Merkel Patricia Arbre

\protect\hypertarget{_bookmark118}{}{}L'arbre Merkle Patricia modifié
(trie) fournit une structure de données persistante pour mapper entre
binaire de longueur arbitraire données (tableaux d'octets). Il est
défini en termes de structure de données mutable pour mapper entre des
fragments binaires de 256 bits et données binaires de longueur
arbitraire, généralement implémentées sous forme de base de données. Le
noyau du trie, et sa seule exigence en termes de la protocole
spécification, est pour fournir un Célibataire valeur que identifie un
donné Positionner de valeur clé paires, qui mai être Soit une séquence
de 32 octets ou la séquence d'octets vide. Il est laissé comme une
considération de mise en œuvre pour stocker et maintenir le structure de
la essayer dans un manière que permet efficace et efficace la
concrétisation de la protocole.

Officiellement, nous présumer la saisir valeur je , un Positionner
contenant paires de octet séquences avec unique clés:

(200) je = \{ ( \textbf{k} 0 ∈ B \emph{,} \textbf{v} 0 ∈ B ) \emph{,} (
\textbf{k} 1 ∈ B \emph{,} \textbf{v} 1 ∈ B ) \emph{,} \}

Lors de l'examen d'une telle séquence, nous utilisons la notation
d'indice numérique commune pour faire référence à la clé ou à la valeur
d'un tuple, Donc:

(201) ∀ \emph{je} ∈ Je : \emph{je} ≡ ( \emph{je} 0 \emph{, je} 1 )

Quelconque séries de octets mai aussi trivialement être vu comme un
séries de grignote, donné un spécifique à endian notation; ici nous
présumer big-endian. Ainsi:

(202)

(203)

∀n \emph{\_} : ∀ \emph{je \textless{}} 2 ll \textbf{k} \emph{n}

\emph{y} ( je ) = \{ ( \textbf{k} \textsubscript{0} ∈ Oui \emph{,}
\textbf{v} \textsubscript{0} ∈ B ) \emph{,} ( \textbf{k}
\textsubscript{1} ∈ Oui \emph{,} \textbf{v} \textsubscript{1} ∈ B )
\emph{, ...} \}

\textbf{k} \emph{n} {[} \emph{je} 2{]} 16si \emph{je} est même

\emph{n}

\textbf{k} \emph{n} {[} l \emph{je} ÷ 2 J {]} mod \_ \_ 16 autrement

Nous définissons la fonction TRIE , qui évalue à la racine du trie qui
représente cet ensemble lorsqu'il est encodé dans ce structure:

(204) TRIE ( I ) ≡ KEC RLP ( \emph{c} ( je \emph{,} 0))

Nous supposons également une fonction \emph{n} , la fonction de cap de
nœud du trie. Lors de la composition d'un nœud, nous utilisons RLP pour
coder le structure. Comme un moyens de réduire stockage complexité, nous
boutique nœuds à qui composé RLP est moins de que 32 octets directement;
pour les plus grands, nous affirmons la prescience du tableau d'octets
dont le hachage Keccak-256 s'évalue à notre référence. Ainsi nous
définissons dans termes de \emph{c} , la nœud composition une fonction:
\end{quote}

 () si je = ∅

KEC RLP ( \emph{c} ( je \emph{, je} )) sinon

\begin{quote}
D'une manière similaire à un arbre de base, lorsque le trie est parcouru
de la racine à la feuille, on peut construire une seule paire
clé-valeur. La clé est accumulée tout au long du parcours, en acquérant
un seul quartet à partir de chaque nœud de branche (tout comme avec un
arbre de base). Contrairement à un base arbre, dans la Cas de plusieurs
clés partage la même préfixe ou alors dans la Cas de un Célibataire clé
ayant un unique suffixe, deux nœuds d'optimisation sont fournis. Ainsi,
lors de la traversée, on peut potentiellement acquérir plusieurs
quartets de chaque de la autre deux nœud les types, extension et
feuille. Là sont Trois sortes de nœuds dans la essayer~:

\textbf{Feuille~:} une structure à deux éléments dont le premier élément
correspond aux quartets dans la clé qui ne sont pas déjà pris en compte
par le accumulation de clés et de branches parcourues depuis la racine.
La méthode de codage par préfixe hexadécimal est utilisée et le seconde
paramètre pour la une fonction est obligatoire pour être 1.

\textbf{Extension:} Une structure à deux éléments dont le premier
élément correspond à une série de quartets de taille supérieure à un qui
sont partagées par au moins deux clés distinctes passé le cumul des clés
de quartets et des clés de branches comme traversé à partir de la
racine. La méthode de codage par préfixe hexadécimal est utilisée et le
deuxième paramètre de la fonction est obligatoire pour être 0.

\textbf{Branche :} une structure de 17 éléments dont les seize premiers
éléments correspondent à chacune des seize valeurs de quartet possibles
pour la clés à cette indiquer dans leur traversée. Le 17ème Objet est
utilisé dans la Cas de cette être un terminateur nœud et Donc un clé
être terminé à cette indiquer dans son traversée.

Une branche n'est alors utilisée qu'en cas de nécessité ; aucun nœud de
branche ne peut exister qui ne contienne qu'une seule entrée non nulle.
Nous mai officiellement définir cette structure avec la de construction
composition une fonction \emph{c} :

HP ( \emph{je} {[} \emph{je..} ( \emph{je} 1){]} \emph{,} 1) \emph{, je}
si je = 1 où \emph{je} : \emph{je} je

HP ( \emph{I} 0 {[} \emph{i..} ( \emph{j} − 1){]} \emph{,} 0) \emph{, n}
( je \emph{, j} ) si \emph{je} = \emph{j} où \emph{j} = max \{ \emph{x}
: ∃ \textbf{l} : ll \textbf{ll} ll = \emph{x} ∧ ∀ \emph{je} ∈ Je :
\emph{je} 0 {[}0 \emph{..} ( \emph{x} − 1){]} = \textbf{l} \}

(206) \emph{c} ( je \emph{, je} ) ≡ \textbf{} ( \emph{u} (0) \emph{,
tu} (1) \emph{, ..., tu} (15) \emph{, v} ) sinon où \emph{tu} ( \emph{j}
) ≡ \emph{n} f ( \{ \emph{je} : \emph{je} ∈ je ∧ \emph{je} 0 {[}
\emph{je} {]} = \emph{j} \} \emph{, je} + 1)

D.1. \textbf{Essayer Base de données.} Ainsi non explicite hypothèses
sont fabriqué concernant quelle Les données est stockée et quelle est ne
pas, puisque que est un spécifique à la mise en œuvre considération;
nous simplement définir la identité une fonction cartographie la valeur
clé Positionner je pour un 32 octets hacher et affirmer que seul un
Célibataire tel hacher existe pour quelconque je , qui mais ne pas
strictement vrai est précis dans acceptable précision donné la Keccak
hachis collision résistance. Dans réalité, un sensible la mise en oeuvre
sera ne pas pleinement recalculer la essayer racine hacher pour chaque
Positionner.

Une implémentation raisonnable maintiendra une base de données de nœuds
déterminée à partir du calcul de divers essais ou, Suite officiellement,
ce sera mémoire la une fonction \emph{c} . Cette stratégie les usages la
nature de la essayer pour tous les deux facilement rappeler la Contenu
de

ÉTHERUM~: UN SÉCURISE DÉCENTRALISÉ GÉNÉRALISÉ TRANSACTION COMPTABLE
\textbf{BERLIN VERSION} 22

tout ensemble de valeurs-clés précédent et de stocker plusieurs de ces
ensembles de manière très efficace. En raison de la relation de
dépendance, Merkle-preuves mai être construit avec un \emph{O} (log
\emph{N} ) espace exigence que pouvez démontrer un particulier feuille
doit exister dans un essayer de un donné racine hacher.

\protect\hypertarget{Appendix_E._Precompiled_Contracts}{}{}annexe E.
Précompilé Contrats

Pour chaque précompilé Contrat, nous Fabriquer utiliser de un modèle une
fonction, Ξ PRE , qui met en oeuvre la panne d'essence vérification.

(207) \protect\hypertarget{_bookmark120}{}{}Ξ
\end{quote}

PRÉ

( \emph{\textbf{σ} , g, UN, Je} ) ( ∅ \emph{,} 0 \emph{, UN,} ()) si
\emph{g \textless{} g} r

( \emph{\textbf{σ} , g} − \emph{g} r \emph{, UN,} \textbf{o} ) autrement

\begin{quote}
Les contrats précompilés utilisent chacun ces définitions et fournissent
des spécifications pour le \textbf{o} (les données de sortie) et
\emph{g} r , le gaz conditions.

On définit Ξ ECREC sous forme de contrat précompilé pour la clé publique
de l'algorithme de signature numérique à courbe elliptique (ECDSA)
fonction de récupération (ecrecover). Voir l'annexe
\protect\hyperlink{Appendix_F._Signing_Transactions}{F} pour la
définition de la fonction ECDSARECOVER . Nous définissons également
\textbf{d} comme étant les données d'entrée, bien définies pour une
longueur infinie en ajoutant des zéros si nécessaire. En cas de
signature invalide ( ECDSARECOVER ( \emph{h, v, r, s} ) = ∅ ), nous
retourner non production.

(208)

(209)

(210)

Ξ ECREC ≡ Ξ PRÉ où:

\emph{g} r = 3000

\textbf{o} = 0 si ECDSARECOVER ( \emph{h, v, r, s} ) = ∅

32 autrement

(211)

(212)

(213)

(214)

si tout \textbf{va} bien = 32 :

\textbf{o} {[}0 \emph{..} 11{]} = 0

\textbf{o} {[}12 \emph{..} 31{]} = KEC ECDSARECOVER ( \emph{h, v, r, s}
) {[}12 \emph{..} 31{]} où:

\textbf{d} {[}0 \emph{..} ( ll \protect\hyperlink{_bookmark54}{\emph{I}
\textbf{\textsubscript{d}}} ll − 1){]} = \emph{je}
\textbf{\textsubscript{d}}
\end{quote}

\begin{longtable}[]{@{}
  >{\raggedright\arraybackslash}p{(\columnwidth - 6\tabcolsep) * \real{0.25}}
  >{\raggedright\arraybackslash}p{(\columnwidth - 6\tabcolsep) * \real{0.25}}
  >{\raggedright\arraybackslash}p{(\columnwidth - 6\tabcolsep) * \real{0.25}}
  >{\raggedright\arraybackslash}p{(\columnwidth - 6\tabcolsep) * \real{0.25}}@{}}
\toprule
\begin{minipage}[b]{\linewidth}\raggedright
\begin{quote}
(215)
\end{quote}
\end{minipage} & \textbf{d} {[} ll \emph{je} \textbf{\textsubscript{d}}
ll \emph{..} {]} & = & \begin{minipage}[b]{\linewidth}\raggedright
\begin{quote}
(0 \emph{,} 0 \emph{, ...} )
\end{quote}
\end{minipage} \\
\midrule
\endhead
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
(216)
\end{quote}
\end{minipage} & \emph{h} & = &
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\textbf{d} {[}0 \emph{..} 31{]}
\end{quote}
\end{minipage} \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
(217)
\end{quote}
\end{minipage} & \emph{v} & = &
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\textbf{d} {[}32 \emph{..} 63{]}
\end{quote}
\end{minipage} \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
(218)
\end{quote}
\end{minipage} & \emph{r} & = &
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\textbf{d} {[}64 \emph{..} 95{]}
\end{quote}
\end{minipage} \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
(219)
\end{quote}
\end{minipage} & \emph{s} & = &
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\textbf{d} {[}96 \emph{..} 127{]}
\end{quote}
\end{minipage} \\
\bottomrule
\end{longtable}

\begin{quote}
Nous définir Ξ SHA256 et Ξ RIP160 comme précompilé contrats exécution la
SHA2-256 et RIPEMD-160 hacher les fonctions respectivement. Leur gaz
usage est dépendant sur la saisir Les données Taille, un facteur arrondi
en haut pour la la plus proche Numéro de mots.

(220) Ξ SHA256 ≡ Ξ PRÉ où:

(221)

\emph{g} = 60 + 12 \underline{ll \emph{je} \textbf{d} ll}

32

(222) \textbf{ou} {[}0 \emph{..} 31{]} = SHA256 ( \emph{je}
\textbf{\textsubscript{d}} )

(223) Ξ RIP160 ≡ Ξ PRÉ où:

(224)

\emph{g} = 600 + 120 \underline{ll \emph{je} \textbf{d} ll}

32

(225) \textbf{ou} {[}0 \emph{..} 11{]} = 0

(226) \textbf{ou} {[}12 \emph{..} 31{]} = RIPEMD160 ( \emph{I}
\textbf{\textsubscript{d}} )

Pour la fins ici, nous présumer nous avoir bien défini la norme
cryptographique les fonctions pour RIPEMD-160 et SHA2-256 de la
formulaire:

(227)

(228)

SHA256 ( \textbf{je} ∈ B ) ≡ \emph{o} ∈ B 32

RIPEMD160 ( \textbf{je} ∈ B ) ≡ \emph{o} ∈ B 20

Le Quatrième Contrat, la identité une fonction Ξ ID simplement définit
la production comme la saisir:

(229) Ξ ID ≡ Ξ PRÉ où:

(230)

\emph{g} = 15 + 3 \underline{ll \emph{je} \textbf{d} ll}

32
\end{quote}

\begin{enumerate}
\def\labelenumi{(\arabic{enumi})}
\setcounter{enumi}{230}
\item
  \textbf{o} = \emph{je} \textbf{\textsubscript{d}}
\end{enumerate}

\begin{quote}
Le cinquième contrat \_ \_ effectue \_ précision arbitraire ex p on n
tiation en dessous de moi dulo . Tiens , \_ 0 \textsuperscript{0} est
pris \_ \_ pour être \_ une, et \emph{X} mod \_ \_ 0 est nul pour tout
\emph{x} . Le premier mot de l'entrée spécifie le nombre d'octets
occupés par le premier entier non négatif \emph{B.} Le deuxième mot de
l'entrée spécifie le nombre d'octets occupés par le deuxième entier non
négatif \emph{E.} Le troisième mot dans la saisir précise la Numéro de
octets que la troisième non négatif entier \emph{M} occupe. Celles-ci
Trois mots sont

ÉTHERUM~: UN SÉCURISE DÉCENTRALISÉ GÉNÉRALISÉ TRANSACTION COMPTABLE
\textbf{BERLIN VERSION} 23

suivi par \emph{B} , \emph{E} et \emph{M} . Le le repos de la saisir est
mis au rebut. Chaque fois que la saisir est aussi court, la disparu
octets sont considéré pour être zéro. Le production est codé big-endian
dans la même format comme \emph{M} 's.
\end{quote}

\begin{enumerate}
\def\labelenumi{(\arabic{enumi})}
\setcounter{enumi}{231}
\item
  \begin{quote}
  Ξ EXPMOD ≡ Ξ PRÉ à l'exception:
  \end{quote}
\item
\end{enumerate}

\begin{quote}
\emph{g} = maximum 200 \emph{,} je \emph{F} max( \emph{.€}
\textsubscript{M} \emph{, .€} \textsubscript{B} ) max( \emph{.€}
\textsubscript{E} \emph{,} 1)
\end{quote}

\begin{enumerate}
\def\labelenumi{(\arabic{enumi})}
\setcounter{enumi}{233}
\tightlist
\item
\item
\end{enumerate}

\begin{quote}
\emph{G} quaddiviseur ≡ 3

\emph{F} ( \emph{x} ) ≡ \emph{\underline{X}} l 2

quaddiviseur
\end{quote}

\begin{enumerate}
\def\labelenumi{(\arabic{enumi})}
\setcounter{enumi}{235}
\tightlist
\item
\end{enumerate}

\begin{quote}
\emph{.€} \textsubscript{E} =

0 si \emph{.€} E ≤ 32 ∧ \emph{E} = 0

l log \textsubscript{2} ( \emph{E} ) J si \_ \emph{.€} E ≤ 32 ∧ \emph{E}
= 0

8( \emph{.€} E − 32) + l lo g \textsubscript{2} ( \emph{je} {[}(96 +
\emph{.€} B ) \emph{..} (127 + \emph{.€} B ){]}) J si 32
\emph{\textless{} . €} E ∧ \emph{je} {[}(96 + \emph{.€} B ) \emph{..}
(127 + \emph{.€} B ){]} = 0

8( \emph{.€} E − 32) sinon
\end{quote}

\begin{enumerate}
\def\labelenumi{(\arabic{enumi})}
\setcounter{enumi}{236}
\item
  \begin{quote}
  \textbf{o} = \emph{B \textsuperscript{E}} mod \_ \_ \emph{M} ∈ N
  \textsubscript{8 \emph{£}}
  \end{quote}
\end{enumerate}

\begin{longtable}[]{@{}
  >{\raggedright\arraybackslash}p{(\columnwidth - 6\tabcolsep) * \real{0.25}}
  >{\raggedright\arraybackslash}p{(\columnwidth - 6\tabcolsep) * \real{0.25}}
  >{\raggedright\arraybackslash}p{(\columnwidth - 6\tabcolsep) * \real{0.25}}
  >{\raggedright\arraybackslash}p{(\columnwidth - 6\tabcolsep) * \real{0.25}}@{}}
\toprule
\begin{minipage}[b]{\linewidth}\raggedright
\begin{quote}
(238)
\end{quote}
\end{minipage} & \emph{.€} B & ≡ &
\begin{minipage}[b]{\linewidth}\raggedright
\begin{quote}
\emph{je} {[}0 \emph{..} 31{]}
\end{quote}
\end{minipage} \\
\midrule
\endhead
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
(239)
\end{quote}
\end{minipage} & \emph{.€} E & ≡ &
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\emph{je} {[}32 \emph{..} 63{]}
\end{quote}
\end{minipage} \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
(240)
\end{quote}
\end{minipage} & \emph{.€} M & ≡ &
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\emph{je} {[}64 \emph{..} 95{]}
\end{quote}
\end{minipage} \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
(241)
\end{quote}
\end{minipage} & \emph{B} & ≡ &
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\emph{je} {[}96 \emph{..} (95 + \emph{.€} B ){]}
\end{quote}
\end{minipage} \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
(242)
\end{quote}
\end{minipage} & \emph{E} & ≡ &
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\emph{je} {[}(96 + \emph{.€} B ) \emph{..} (95 + \emph{.€} B + \emph{.€}
E ){]}
\end{quote}
\end{minipage} \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
(243)
\end{quote}
\end{minipage} & \emph{M} & ≡ &
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\emph{je} {[}(96 + \emph{.€} B + \emph{.€} E ) \emph{..} (95 + \emph{.€}
B + \emph{.€} E + \emph{.€} M ){]}
\end{quote}
\end{minipage} \\
\bottomrule
\end{longtable}

\begin{quote}
(244)

\emph{je} {[} \emph{x} {]} \emph{je} \textbf{\textsubscript{ré}} {[}
\emph{x} {]} si \emph{X \textless{}} ll \emph{je}
\textbf{\textsubscript{d}} ll

0 sinon
\end{quote}

\begin{enumerate}
\def\labelenumi{\arabic{enumi}.}
\item
  \textbf{zkSNARK Lié Précompilé Contrats.} Nous choisir deux Nombres,
  tous les deux de qui sont prime.
\end{enumerate}

\begin{quote}
(245) \emph{p} ≡
2188824287183927522246405745257275088696311157297823662689037894645226208583

(246) \emph{q} ≡
2188824287183927522246405745257275088548364400416034343698204186575808495617

Depuis \emph{p} est un prime Numéro, \{ 0 \emph{,} 1 \emph{, . . . , p}
− 1 \} formes un domaine avec une addition et multiplication modulo
\emph{p} . Nous appel cette domaine \emph{Fp} . \_

Nous définir un Positionner \emph{C} 1 avec

(247) \emph{C} 1 ≡ \{ ( \emph{X, Oui} ) ∈ \emph{F} p × \emph{F} p
\textbar{} \emph{Oui} 2 = \emph{X3} \_ + 3 \} ∪ \{ (0 \emph{,} 0) \}

Nous définir un binaire opération + sur \emph{C} 1 pour distinct
éléments ( \emph{X} 1 \emph{, Y} 1 ) \emph{,} ( \emph{X} 2 \emph{, Oui}
2 ) avec

(248)

\protect\hypertarget{_bookmark121}{}{}( \emph{X , Oui} ) + ( \emph{X ,
Oui} ) ≡ f ( \emph{X , Oui} ) si \emph{X} 1 = \emph{X2} \_
\end{quote}

\emph{λ \underline{Y }}\underline{2 − \emph{Oui} 1}

\emph{X2} \_ − \emph{X} 1

\begin{quote}
\emph{X} ≡ \emph{λ} 2 − \emph{X} 1 − \emph{X2} \_

\emph{Oui} ≡ \emph{λ} ( \emph{X} 1 − \emph{X} ) − \emph{Oui} 1

Dans la Cas où ( \emph{X} 1 \emph{, Oui} 1 ) = ( \emph{X} 2 \emph{, Y} 2
), nous définir + sur \emph{C} 1 avec

(249) \protect\hypertarget{_bookmark122}{}{}( \emph{X , Oui} ) + (
\emph{X , Oui} ) ≡ f ( \emph{X , Oui} ) si \emph{Oui} 1 0
\end{quote}

1 1 2 2

\emph{λ} ≡

\begin{quote}
(0 \emph{,} 0) sinon

3 \emph{X} \textsuperscript{2}

2 \emph{ans} 1

\emph{X} ≡ \emph{λ} 2 − 2 \emph{X} 1

\emph{Oui} ≡ \emph{λ} ( \emph{X} 1 − \emph{X} ) − \emph{Oui} 1

( \emph{C} 1 \emph{,} +) est connu pour formulaire un grouper. Nous
définir scalaire multiplication \protect\hypertarget{_bookmark123}{}{}·
avec

(250) \emph{n} · \emph{P} ≡ (0 \emph{,} 0) + \emph{P} + · · · + \emph{P}

\emph{n}

pour un Naturel Numéro \emph{n} et un indiquer \emph{P} dans \emph{C1} .
\_

Nous définir \emph{P} 1 pour être un indiquer (1 \emph{,} 2) sur
\emph{C1} . \_ Laisser \emph{G} 1 être la sous-groupe de ( \emph{C} 1
\emph{,} +) généré par \emph{P1} . \_ \emph{G} 1 est connu pour être un
cyclique grouper de Commande \emph{Q.} \_ Pour un indiquer \emph{P} dans
\emph{G} 1 , nous définir journal \textsubscript{\emph{P} 1} ( \emph{P}
) pour être la le plus petit Naturel Numéro \emph{n} satisfaisant
\emph{n} · \emph{P} 1 = \emph{P} . journal \emph{P} 1 ( \emph{P} ) est à
plus \emph{q} − 1.

Laisser \emph{F \textsubscript{p }}2 être \_ un domaine \emph{F
\textsubscript{p }}{[} \emph{je} {]} \emph{/} ( \emph{je}
\textsuperscript{2} + 1). Nous \_ définir un Positionner \emph{C2}
\textsubscript{\_} avec

(251) \emph{C} \textsubscript{2} ≡ \{ ( \emph{X, Oui} ) ∈ \emph{F
\textsubscript{p }}2 × \emph{F \textsubscript{p }}2 \textbar{}
\emph{Oui} \textsuperscript{2} = \emph{X3} \textsuperscript{\_} + 3(
\emph{je} + 9) \textsuperscript{− 1} \} ∪ \{ (0 \emph{,} 0) \}

ÉTHERUM~: UN SÉCURISE DÉCENTRALISÉ GÉNÉRALISÉ TRANSACTION COMPTABLE
\textbf{BERLIN VERSION} 24

Nous définir un binaire opération + et scalaire multiplication · avec la
même équations \protect\hyperlink{_bookmark121}{(248),}
\protect\hyperlink{_bookmark122}{(249)} et
\protect\hyperlink{_bookmark123}{(250).} ( \emph{C2 ,} \_ +) est aussi
connu pour être un grouper. Nous définir \emph{P2} \_ dans \emph{C2} \_
avec

(252)

\emph{P} 2 ≡
(11559732032986387107991004021392285783925812861821192530917403151452391805634
× \emph{je}

+10857046999023057135944570762232829481370756359578518086990519993285655852781
\emph{,}

4082367875863433681332203403145435568316851327593401208105741076214120093531
× \emph{je}

+8495653923123431417604973247489272438418190587263600148770280649306958101930)

Nous définir \emph{G} 2 pour être la sous-groupe de ( \emph{C2 ,} \_ +)
généré par \emph{P2} . \_ \emph{G} 2 est connu pour être la seul
cyclique grouper de Commande \emph{q} sur \emph{C2} . \_ Pour un
indiquer \emph{P} dans \emph{G} 2 , nous définir journal
\textsubscript{\emph{P} 2} ( \emph{P} ) être la le plus petit Naturel
Numéro \emph{n} satisfaisant \emph{n} · \emph{P2} \_ = \emph{P} . Avec
cette définition, journal \emph{P} 2 ( \emph{P} ) est à plus \emph{q} −
1.

Laisser \emph{G\textsubscript{~T}} être la multiplicatif abélien grouper
sous-jacent \emph{F \textsubscript{q }}12 . Ce est connu que un non
dégénéré bilinéaire carte \emph{e} : \emph{G} 1 × \emph{G} 2 → \emph{G
T} existe. Cette application bilinéaire est un appariement de type
trois. Il existe plusieurs cartes bilinéaires de ce type, ce n'est pas
le cas question qui est choisi pour être \emph{e} . Laisser \emph{PT \_}
= \emph{e} ( \emph{P} 1 \emph{, P} 2 ), \emph{un} être un Positionner de
\emph{k} points dans \emph{G} 1 , et \emph{b} être un Positionner de
\emph{k} points dans \emph{G} 2 . Ce suit depuis la définition de un
jumelage que la Suivant sont équivalent

(253)

(254)

\protect\hypertarget{_bookmark124}{}{}log \emph{P} 1 \_ ( \emph{un}
\textsubscript{1} ) × log \emph{P} 2 \_ ( \emph{b} \textsubscript{1} ) +
· · · + log \emph{P} 1 \_ ( \emph{un \textsubscript{k }}) × log \emph{P}
2 \_ ( \emph{bk} ) \emph{\textsubscript{\_}} ≡ 1 mod \_ \_ \emph{q}
\end{quote}

\emph{k}

\begin{quote}
\emph{e} ( \emph{un je , b je} ) = \emph{PT \_}

\emph{je} =0

Ainsi la jumelage opération fournit un méthode pour Vérifier
\protect\hyperlink{_bookmark124}{(253).}

UN 32 octet Numéro \textbf{X} ∈ \textbf{P256} \_ pourrait et pourrait ne
pas représenter un élément de \emph{Fp} . \_

(255) \emph{δ} ( \textbf{x} ) ≡ f \textbf{x} si \textbf{X}
\emph{\textless{} p}

∅ autrement

UN 64 octet Les données \textbf{X} ∈ \textbf{B} 512 pourrait et pourrait
ne pas représenter un élément de \emph{G} 1 .

(256)

\emph{δ} ( \textbf{x} ) ≡ f \emph{g} 1 si \emph{g} 1 ∈ \emph{G} 1

(257)

∅ sinon
\end{quote}

\begin{enumerate}
\def\labelenumi{\alph{enumi}.}
\setcounter{enumi}{6}
\item
  ( \emph{x, y} ) si \emph{X} = ∅ ∧ \emph{y} ∅
\end{enumerate}

\begin{quote}
∅ sinon

(258) \emph{x} ≡ \emph{δ} p ( \textbf{x} {[}0 \emph{..} 31{]})

(259) \emph{y} ≡ \emph{δ} p ( \textbf{x} {[}32 \emph{..} 63{]})

UN 128 octet Les données \textbf{X} ∈ \textbf{B} 1024 pourrait et
pourrait ne pas représenter un élément de \emph{G} 2 .

(260)

\emph{δ} ( \textbf{x} ) ≡ f \emph{g} 2 si \emph{g} 2 ∈ \emph{G} 2

(261)

∅ sinon

\emph{g} (( \emph{x} 0 \emph{je} + \emph{y} 0 ) \emph{,} ( \emph{x} 1
\emph{je} + \emph{y} 1 )) si \emph{x} 0 = ∅ ∧ \emph{y} 0 = ∅ ∧ \emph{x1}
\_

∅ sinon

∅ ∧ \emph{y} 1 = ∅
\end{quote}

\begin{longtable}[]{@{}
  >{\raggedright\arraybackslash}p{(\columnwidth - 6\tabcolsep) * \real{0.25}}
  >{\raggedright\arraybackslash}p{(\columnwidth - 6\tabcolsep) * \real{0.25}}
  >{\raggedright\arraybackslash}p{(\columnwidth - 6\tabcolsep) * \real{0.25}}
  >{\raggedright\arraybackslash}p{(\columnwidth - 6\tabcolsep) * \real{0.25}}@{}}
\toprule
\begin{minipage}[b]{\linewidth}\raggedright
\begin{quote}
(262)
\end{quote}
\end{minipage} & \emph{x} 0 &
\begin{minipage}[b]{\linewidth}\raggedright
\begin{quote}
≡
\end{quote}
\end{minipage} & \begin{minipage}[b]{\linewidth}\raggedright
\begin{quote}
\emph{δ} p ( \textbf{x} {[}0 \emph{..} 31{]})
\end{quote}
\end{minipage} \\
\midrule
\endhead
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
(263)
\end{quote}
\end{minipage} & \emph{y} 0 &
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
≡
\end{quote}
\end{minipage} & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\emph{δ} p ( \textbf{x} {[}32 \emph{..} 63{]})
\end{quote}
\end{minipage} \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
(264)
\end{quote}
\end{minipage} & \emph{x1} \_ &
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
≡
\end{quote}
\end{minipage} & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\emph{δ} p ( \textbf{x} {[}64 \emph{..} 95{]})
\end{quote}
\end{minipage} \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
(265)
\end{quote}
\end{minipage} & \emph{y} 1 &
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
≡
\end{quote}
\end{minipage} & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\emph{δ} p ( \textbf{x} {[}96 \emph{..} 127{]})
\end{quote}
\end{minipage} \\
\bottomrule
\end{longtable}

\begin{quote}
Nous définir Ξ SNARKV comme un précompilé Contrat qui chèques si
\protect\hyperlink{_bookmark124}{(253)} tient, pour prévu utiliser dans
zkSNARK vérification.

ÉTHERUM~: UN SÉCURISE DÉCENTRALISÉ GÉNÉRALISÉ TRANSACTION COMPTABLE
\textbf{BERLIN VERSION} 25
\end{quote}

\begin{enumerate}
\def\labelenumi{(\arabic{enumi})}
\setcounter{enumi}{265}
\item
  Ξ SNARKV ≡ Ξ PRÉ à l'exception:
\item
  \begin{quote}
  Ξ SNARKV ( \emph{\textbf{σ} , g, UN, je} ) = ( ∅ \emph{,} 0 \emph{,
  UN,} ()) si \emph{F}
  \end{quote}
\item
\item
\item
\item
\item
\item
\item
\item
\item
\end{enumerate}

\begin{quote}
\emph{F} ≡ ( ll \emph{je} \textbf{\textsubscript{d}} ll mod \_ \_ 192 =
0 ∨ ( ∃ \emph{j. un} \textsubscript{j} = ∅ ∨ \emph{b} \textsubscript{j}
= ∅ ))

\emph{k} = \underline{ll \emph{je} \textbf{\textsubscript{d}} ll}

192

\emph{g} r = 34000k \emph{\_} + 45000

\textbf{o} {[}0 \emph{..} 31{]} 0 \emph{x}
0000000000000000000000000000000000000000000000000000000000001 si
\emph{v} ∧ ¬F \emph{\_}

0 \emph{x}
00000000000000000000000000000000000000000000000000000000000000 si ¬
\emph{v} ∧ ¬ \emph{F}

\emph{v} ≡ ( log \emph{P} 1 ( \emph{un} \textsubscript{1} ) × log
\emph{P} 2 \_ ( \emph{b} \textsubscript{1} ) + · · · + log \emph{P} 1 \_
( \emph{un \textsubscript{k }}) × log \emph{P} 2 \_ ( \emph{bk} )
\emph{\textsubscript{\_}} ≡ 1 mod \_ \_ \emph{q} ) \emph{une}
\textsubscript{1} ≡ \emph{δ} \textsubscript{1} ( \emph{I}
\textbf{\textsubscript{d}} {[}0 \emph{..} 63{]})

\emph{b} \textsubscript{1} ≡ \emph{δ} \textsubscript{2} ( \emph{I}
\textbf{\textsubscript{d}} {[}64 \emph{..} 191{]})

.

\emph{un \textsubscript{k}} ≡ \emph{δ} \textsubscript{1} ( \emph{je}
\textbf{\textsubscript{ré}} {[}( ll \emph{je}
\textbf{\textsubscript{ré}} ll − 192) \emph{..} ( ll \emph{je}
\textbf{\textsubscript{d}} ll − 129){]})

\emph{b \textsubscript{k}} ≡ \emph{δ} \textsubscript{2} ( \emph{je}
\textbf{\textsubscript{ré}} {[}( ll \emph{je}
\textbf{\textsubscript{ré}} ll − 128) \emph{..} ( ll \emph{je}
\textbf{\textsubscript{d}} ll − 1){]})

Nous définir un précompilé Contrat pour une addition sur \emph{G} 1 .
\end{quote}

\begin{enumerate}
\def\labelenumi{(\arabic{enumi})}
\setcounter{enumi}{276}
\item
  \begin{quote}
  (277)
  \end{quote}
\item
\item
\item
\item
\item
\item
\end{enumerate}

\begin{quote}
\protect\hypertarget{_bookmark125}{}{}ΞBN \_ AJOUTER ≡ ΞBN \_ PRÉ à
l'exception:

ΞBN \_ AJOUTER ( \emph{\textbf{σ} , g, UN, je} ) = ( ∅ \emph{,} 0
\emph{, UN,} ()) si \emph{X} = ∅ ∨ \emph{y} = ∅

\emph{g} r = 150

\textbf{o} ≡ \emph{δ} − 1 ( \emph{x} + \emph{y} ) où + est la grouper op
ération \_ dans \emph{G} 1 \emph{x δ} \textsubscript{1} \emph{Je} ¯
\textbf{d} {[}0 \emph{..} 63{]}

\emph{y} ≡ \emph{δ} \textsubscript{1} \emph{je} ¯ \textbf{d} {[}64
\emph{..} 127{]}

\textbf{ré}

0 sinon

Nous \_ définir un précompilé contrat \_ \_ pour scalaire m
ultiplication sur \emph{G} \textsubscript{1} , où \emph{je} ¯ \textbf{d}
est défini \_ dans \protect\hyperlink{_bookmark125}{(283).}
\end{quote}

\begin{enumerate}
\def\labelenumi{(\arabic{enumi})}
\setcounter{enumi}{283}
\tightlist
\item
\item
\item
\item
\item
\end{enumerate}

\begin{quote}
ΞBN \_ MU ≡ Ξ PRÉ à l'exception:

ΞBN \_ MUL ( \emph{\textbf{σ} , g, UN, je} ) = ( ∅ \emph{,} 0 \emph{,
UN,} ()) si \emph{X} = ∅

\emph{g} r = 6000

\textbf{o} ≡ \emph{δ} − 1 ( \emph{n} · \emph{x} ) où · est la scalaire m
ultiplication dans \emph{G 1x} \_ ≡ \emph{δ} \textsubscript{1} \emph{Je}
¯ \textbf{d} {[}0 \emph{..} 63{]}

(289) \emph{n} ≡ \emph{Je} ¯ \textbf{d} {[}64 \emph{..} 95{]}
\end{quote}

\begin{enumerate}
\def\labelenumi{\arabic{enumi}.}
\item
  \begin{quote}
  \textbf{BLAKE2 Précompilé Contrat.} EIP-152 par
  \protect\hyperlink{_bookmark104}{Hess et al.}
  \protect\hyperlink{_bookmark104}{{[}2016{]}} définit Ξ BLAKE2 F sous
  forme de contrat pré-compilé implémentant la fonction de compression F
  utilisée dans l'algorithme de hachage cryptographique BLAKE2. La
  compression F une fonction est spécifié dans RFC 7693 par
  \protect\hyperlink{_bookmark92}{Saarinen et Aumasson {[}2015{]}.}
  \end{quote}
\end{enumerate}

\begin{quote}
(290)

(291)

(292)

(293)

Ξ BLAKE2 F ≡ Ξ PRE à l'exception:

Ξ \textsubscript{BLAKE2} \textsubscript{F} ( \emph{\textbf{σ} , g, UN,
je} ) = ( ∅ \emph{,} 0 \emph{, UN,} ()) si ll \emph{je}
\textbf{\textsubscript{d}} ll =
\end{quote}

\emph{g} r = \emph{r}

\begin{quote}
\textbf{o} ≡ LE \textsubscript{8} ( \emph{h} \textsubscript{0} ) ·
\emph{...} · LE \textsubscript{8} ( \emph{h} \textsubscript{7} )

213 ∨ \emph{F} ∈ \emph{/} \{ 0 \emph{,} 1 \}
\end{quote}

\begin{longtable}[]{@{}
  >{\raggedright\arraybackslash}p{(\columnwidth - 6\tabcolsep) * \real{0.25}}
  >{\raggedright\arraybackslash}p{(\columnwidth - 6\tabcolsep) * \real{0.25}}
  >{\raggedright\arraybackslash}p{(\columnwidth - 6\tabcolsep) * \real{0.25}}
  >{\raggedright\arraybackslash}p{(\columnwidth - 6\tabcolsep) * \real{0.25}}@{}}
\toprule
\begin{minipage}[b]{\linewidth}\raggedright
\begin{quote}
(294)
\end{quote}
\end{minipage} & ( \emph{h} \textsubscript{0} \emph{, . . . , h}
\textsubscript{7} ) & \begin{minipage}[b]{\linewidth}\raggedright
\begin{quote}
≡
\end{quote}
\end{minipage} & \begin{minipage}[b]{\linewidth}\raggedright
\begin{quote}
F ( \emph{h, moi, t} \textsubscript{bas} \emph{, t}
\textsubscript{élevé} \emph{, F} ) avec \emph{r} Les manches et \emph{w}
= 64
\end{quote}
\end{minipage} \\
\midrule
\endhead
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
(295)
\end{quote}
\end{minipage} & BE 4 ( \emph{r} ) &
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
≡
\end{quote}
\end{minipage} & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\emph{Je} \textbf{\textsubscript{d}} {[}0 \emph{..} 4{]}
\end{quote}
\end{minipage} \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
(296)
\end{quote}
\end{minipage} & LE 8 ( \emph{h} 0 ) &
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
≡
\end{quote}
\end{minipage} & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\emph{Je} \textbf{\textsubscript{d}} {[}4 \emph{..} 12{]}
\end{quote}
\end{minipage} \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
(297)
\end{quote}
\end{minipage} & & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\emph{. . .}
\end{quote}
\end{minipage} & \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
(298)
\end{quote}
\end{minipage} & LE 8 ( \emph{h} 7 ) &
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
≡
\end{quote}
\end{minipage} & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\emph{Je} \textbf{\textsubscript{d}} {[}60 \emph{..} 68{]}
\end{quote}
\end{minipage} \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
(299)
\end{quote}
\end{minipage} & LE 8 ( \emph{m} 0 ) &
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
≡
\end{quote}
\end{minipage} & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\emph{je} {[}68 \textbf{\textsubscript{..}} \emph{76} {]}
\end{quote}
\end{minipage} \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
(300)
\end{quote}
\end{minipage} & & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\emph{. . .}
\end{quote}
\end{minipage} & \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
(301)
\end{quote}
\end{minipage} & LE 8 ( \emph{m} 15 ) &
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
≡
\end{quote}
\end{minipage} & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\emph{Je} \textbf{\textsubscript{d}} {[}188 \emph{..} 196{]}
\end{quote}
\end{minipage} \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
(302)
\end{quote}
\end{minipage} & LE \textsubscript{8} ( \emph{t} \textsubscript{faible}
) & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
≡
\end{quote}
\end{minipage} & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\emph{Je} \textbf{\textsubscript{d}} {[}196 \emph{..} 204{]}
\end{quote}
\end{minipage} \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
(303)
\end{quote}
\end{minipage} & LE 8 ( \emph{t} élevé ) &
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
≡
\end{quote}
\end{minipage} & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\emph{Je} \textbf{\textsubscript{d}} {[}204 \emph{..} 212{]}
\end{quote}
\end{minipage} \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
(304)
\end{quote}
\end{minipage} & \emph{F} & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
≡
\end{quote}
\end{minipage} & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\emph{je {[}} \textbf{\textsubscript{212}} {]}
\end{quote}
\end{minipage} \\
\bottomrule
\end{longtable}

\begin{quote}
ÉTHERUM~: UN SÉCURISE DÉCENTRALISÉ GÉNÉRALISÉ TRANSACTION COMPTABLE
\textbf{BERLIN VERSION} 26

où \emph{r} ∈ B \textsubscript{32} , ∀ \emph{je} ∈ 0 \emph{..} 7 :
\emph{h \textsubscript{je}} ∈ B \textsubscript{64} , ∀ \emph{je} ∈ 0
\emph{..} 15 : \emph{m \textsubscript{je}} ∈ B \textsubscript{64} ,
\emph{t} \textsubscript{faible} ∈ B \textsubscript{64} , \emph{t}
\textsubscript{élevé} ∈ B \textsubscript{64} , \emph{f} ∈ B
\textsubscript{8} , BE \emph{\textsubscript{k}} est le \emph{k} -octet
big-endian représentation---comparer
\protect\hyperlink{_bookmark115}{avec(193):}

\emph{k} - 1

(305) BE \emph{\textsubscript{k}} ( \emph{x} ) ≡ ( \emph{b}
\textsubscript{0} \emph{, b} \textsubscript{1} \emph{, ..., b
\textsubscript{k }}\textsubscript{- 1} ) : \emph{X} = \emph{b
\textsubscript{n}} · 256 \textsuperscript{−} \textsuperscript{−}

\emph{n} =0

et LE \emph{\textsubscript{k}} est la \emph{k} -octet petit endian
représentation:

\emph{k} - 1

(306) LE \emph{\textsubscript{k}} ( \emph{x} ) ≡ ( \emph{b}
\textsubscript{0} \emph{, b} \textsubscript{1} \emph{, ..., b
\textsubscript{k }}\textsubscript{- 1} ) : \emph{X} = \emph{b
\textsubscript{n}} · 256 \emph{\textsuperscript{n}}

\emph{n} =0

\protect\hypertarget{Appendix_F._Signing_Transactions}{}{}annexe F.
Signature Transactions

Les transactions sont signées à l'aide de signatures ECDSA récupérables.
Cette méthode utilise la courbe SECP-256k1 comme décrit par
\protect\hyperlink{_bookmark84}{Courtois et Al. {[}2014{]},} et est mis
en œuvre De même pour comme décrit par
\protect\hyperlink{_bookmark99}{Goura et Al.} {[}
\protect\hyperlink{_bookmark99}{2004{]}} sur p. 9 de 15, para. 3.

Ce est assumé que la expéditeur possède un valide privé clé \emph{p} r ,
qui est un au hasard choisi positif entier (représentée comme un octet
déployer de longueur 32 dans big-endian formulaire) dans la Portée {[}1
\emph{,} secp256k1n − 1{]}.

Nous présumer la existence de les fonctions ECDSAPUBKEY , ECDSASIGN et
ECDSARECOVER . Celles-ci sont officiellement défini dans la

Littérature, par exemple par \protect\hyperlink{_bookmark108}{Johnson et
Al. {[}2001{]}.}

(307)

(308)

(309)

ECDSAPUBKEY ( \emph{p} r ∈ B 32 ) ≡ \emph{p} tu ∈ B 64

ECDSASIGN ( \emph{e} ∈ B 32 \emph{, p} r ∈ B 32 ) ≡ ( \emph{v} ∈ B 1
\emph{, r} ∈ B 32 \emph{, s} ∈ B 32 )

ECDSARECOVER ( \emph{e} ∈ B 32 \emph{, v} ∈ B 1 \emph{, r} ∈ B 32
\emph{, s} ∈ B 32 ) ≡ \emph{p} tu ∈ B 64

Où \emph{tu} es est la clé publique, supposée être un tableau d'octets
de taille 64 (formé de la concaténation de deux entiers chaque
\emph{\textless{}} 2 \textsuperscript{256} ), \emph{p} r est la privé
clé, un octet déployer de Taille 32 (ou alors un Célibataire positif
entier dans la susmentionné Portée) et \emph{e} est la hacher de la
transaction, \protect\hyperlink{_bookmark130}{\emph{h} ( \emph{T}} ). Ce
est assumé que \protect\hypertarget{_bookmark127}{}{}\emph{v} est la
'récupération identifiant'. Le récupération identifiant

est une valeur de 1 octet spécifiant la parité et la finitude des
coordonnées du point de courbe pour lequel \emph{r} est la valeur x~;
cette la valeur est dans la plage de {[}0 \emph{,} 3{]}, cependant nous
déclarons les deux possibilités supérieures, représentant des valeurs
infinies, invalides. Le valeur 0 représente un même \emph{y} valeur et 1
représente un étrange \emph{y} valeur.

Nous déclarer que un ECDSA Signature est invalide sauf si tout la
Suivant conditions sont vrai:

(310)

(311)

(312)

où: (313)

0 \emph{\textless{}}\protect\hypertarget{_bookmark128}{}{}
\protect\hypertarget{_bookmark129}{}{}\emph{r \textless{}} secp256k1n

0 \emph{\textless{} s \textless{}} secp256k1n ÷ 2 + 1

\protect\hyperlink{_bookmark127}{\emph{v}} ∈ \{ 0 \emph{,} 1 \}

secp256k1n =
115792089237316195423570985008687907852837564279074904382605163141518161494337

Pour un donné privé clé, \emph{p} r , la Ethereum adresse \emph{A} (
\emph{p} r ) (un 160 bits valeur) pour qui ce correspond est défini
comme la le plus à droite 160 bits de la Keccak-256 hacher de la
correspondant ECDSA Publique clé:

(314) \emph{A} ( \emph{p} r ) = \protect\hypertarget{_bookmark130}{}{}B
96 \emph{..} 255 KEC ECDSAPUBKEY ( \emph{p} r )

Le message hacher, \emph{h} ( \emph{T} ), pour être signé est la
Keccak-256 hacher de la transaction. Trois différent les saveurs de
signature régimes sont disponible:

(315)

\emph{LX} ( \emph{T} \_ ) ≡

où

( \emph{T} n \emph{, T} p \emph{, T} g \emph{, T} t \emph{, Télé ,} \_
\textbf{p} ) si \emph{T} x = 0 ∧ \emph{T} w ∈ \{ 27 \emph{,} 28 \}

( \emph{T} n \emph{, T} p \emph{, T} g \emph{, T} t \emph{, Télé ,} \_
\textbf{p} \emph{, β,} () \emph{,} ()) si \emph{T} x = 0 ∧ \emph{T} w ∈
\{ 2 \emph{β} + 35 \emph{,} 2 \emph{β} + 36 \}

 ( \emph{T} \textsubscript{c} \emph{, T} \textsubscript{n} \emph{, T}
\textsubscript{p} \emph{, T} \textsubscript{g} \emph{, T}
\textsubscript{t} \emph{, Télé ,} \textsubscript{\_} \textbf{p} \emph{,
T} \textbf{\textsubscript{A}} ) si \emph{T} \textsubscript{x} = 1

(316)

\textbf{p} \emph{T} \textbf{\textsubscript{je}} si \emph{T}
\textsubscript{t} = ∅

\emph{T} \textbf{\textsubscript{d}} autrement
\end{quote}

\emph{h} ( \emph{T} ) KEC ( RLP ( \emph{L} X ( \emph{T} ))) si \emph{T}
x = 0

KEC ( \emph{T} x · RLP ( \emph{L} X ( \emph{T} ))) autrement

\begin{quote}
Le signé transaction \emph{G} ( \emph{T, p} r ) est défini comme: (317)

\emph{G} ( \emph{T, p} r ) ≡ \emph{T} sauf~:

(318)

\protect\hyperlink{_bookmark8}{Réitérant depuis précédemment:} (319)

(320)

( \emph{T} y \emph{, T} r \emph{, Ts} ) \_ = ECDSASIGN ( \emph{h} (
\emph{T} ) \emph{, p} r )

\emph{T} r = \emph{\protect\hyperlink{_bookmark128}{r} Ts} \_ =
\protect\hyperlink{_bookmark129}{\emph{s}}

et \protect\hyperlink{_bookmark11}{\emph{T} w} de héritage transactions
est Soit 27 + \emph{T} y ou alors 2
\protect\hyperlink{_bookmark1}{\emph{β}} + 35 + \emph{T} y .

ÉTHERUM~: UN SÉCURISE DÉCENTRALISÉ GÉNÉRALISÉ TRANSACTION COMPTABLE
\textbf{BERLIN VERSION} 27
\end{quote}

\begin{longtable}[]{@{}
  >{\raggedright\arraybackslash}p{(\columnwidth - 2\tabcolsep) * \real{0.50}}
  >{\raggedright\arraybackslash}p{(\columnwidth - 2\tabcolsep) * \real{0.50}}@{}}
\toprule
\begin{minipage}[b]{\linewidth}\raggedright
\begin{quote}
Nous mai alors définir la expéditeur une fonction \emph{S} de la
transaction comme:
\end{quote}
\end{minipage} & \\
\midrule
\endhead
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
(321)
\end{quote}
\end{minipage} & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\emph{S} ( \emph{T} ) ≡ B 96 \emph{..} 255 KEC ECDSARECOVER ( \emph{h} (
\emph{T} ) \emph{, v, T} r \emph{, Ts} ) \_
\end{quote}
\end{minipage} \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
(322)
\end{quote}
\end{minipage} & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
   \emph{T} w − 27 si \emph{T} x = 0 ∧ \emph{T} w ∈ \{ 27 \emph{,} 28
\}

\emph{v} ≡ ( \emph{T} w − 35) mode 2 si \emph{T} x = 0 ∧ \emph{T} w ∈ \{
2 \emph{β} + 35 \emph{,} 2 \emph{β} + 36 \}

  \emph{T} y si \emph{T} x = 1
\end{quote}
\end{minipage} \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
Le affirmation que la expéditeur de un signé transaction équivaut à la
adresse de la signataire devrait être va de soi :

(323 \emph{)} ∀T : ∀ \emph{p} r : \emph{S} ( \emph{G} ( \emph{T , p} r
)) ≡ \emph{A} ( \emph{p} r )

\protect\hypertarget{Appendix_G._Fee_Schedule}{}{}annexe G. Frais
Programme

Le frais programme \emph{g} est un tuple de scalaire valeurs
correspondant pour la relatif frais, dans gaz, de un Numéro de abstrait
opérations que un transaction mai effet.
\end{quote}
\end{minipage} & \\
\bottomrule
\end{longtable}

\begin{longtable}[]{@{}
  >{\raggedright\arraybackslash}p{(\columnwidth - 4\tabcolsep) * \real{0.33}}
  >{\raggedright\arraybackslash}p{(\columnwidth - 4\tabcolsep) * \real{0.33}}
  >{\raggedright\arraybackslash}p{(\columnwidth - 4\tabcolsep) * \real{0.33}}@{}}
\toprule
\begin{minipage}[b]{\linewidth}\raggedright
\begin{quote}
Nom
\end{quote}
\end{minipage} & Valeur & \begin{minipage}[b]{\linewidth}\raggedright
\begin{quote}
La description
\end{quote}
\end{minipage} \\
\midrule
\endhead
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\emph{G} zéro
\end{quote}
\end{minipage} & 0 & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
Rien payé pour opérations de la Positionner \emph{W} zéro .
\end{quote}
\end{minipage} \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\emph{G} jumpdest
\end{quote}
\end{minipage} & 1 & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
Montant de gaz pour Payer pour un JUMPDEST opération.
\end{quote}
\end{minipage} \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
Base \emph{G}
\end{quote}
\end{minipage} & 2 & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
Montant \_ \_ de gaz pour payer \_ \_ pour op érations \_ de la ensemble
\_ \_ \emph{W} \textsubscript{base e} .
\end{quote}
\end{minipage} \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\emph{Sol} très bas
\end{quote}
\end{minipage} & 3 & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
Montant \_ \_ de gaz pour payer \_ \_ pour op érations \_ de la ensemble
\_ \_ \emph{W} \textsubscript{très bas} . \textsubscript{\_ \_}
\end{quote}
\end{minipage} \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\emph{sol} bas
\end{quote}
\end{minipage} & 5 & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
Montant de gaz pour Payer pour opérations de la Positionner \emph{W}
\textsubscript{faible} .
\end{quote}
\end{minipage} \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\emph{sol} moyen
\end{quote}
\end{minipage} & 8 & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
Montant \_ \_ de gaz pour payer \_ \_ pour op érations \_ de la ensemble
\_ \_ \emph{W} \textsubscript{mi d} .
\end{quote}
\end{minipage} \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\emph{Sol} aigu
\end{quote}
\end{minipage} & dix & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
Montant \_ \_ de gaz pour payer \_ \_ pour op érations \_ de la
Positionner \emph{W} \textsubscript{haut h} .
\end{quote}
\end{minipage} \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\emph{G} warmaccess
\end{quote}
\end{minipage} & 100 & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
Coût de un chauffer Compte ou alors stockage accéder.
\end{quote}
\end{minipage} \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\protect\hypertarget{_bookmark132}{}{}Adresse de la liste d'accès
\emph{G}
\end{quote}
\end{minipage} & 2400 & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
Coût de échauffement en haut un Compte avec la accéder liste.
\end{quote}
\end{minipage} \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\protect\hypertarget{_bookmark133}{}{}Stockage des listes d'accès
\emph{G}
\end{quote}
\end{minipage} & 1900 & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
Coût de échauffement en haut un stockage avec la accéder liste.
\end{quote}
\end{minipage} \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\emph{G} coldaccountacces
\end{quote}
\end{minipage} & 2600 & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
Coût de un du froid Compte accéder.
\end{quote}
\end{minipage} \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\emph{G} charge froide
\end{quote}
\end{minipage} & 2100 & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
Coût de un du froid stockage accéder.
\end{quote}
\end{minipage} \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\emph{G} sset
\end{quote}
\end{minipage} & 20000 & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
Payé pour un STORE opération lorsque la stockage valeur est Positionner
pour non nul depuis zéro.
\end{quote}
\end{minipage} \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\emph{G} sréinitialiser
\end{quote}
\end{minipage} & 2900 & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
Payé pour un STORE opération lorsque la stockage valeurs le zéro restes
inchangé ou alors est Positionner pour zéro.
\end{quote}
\end{minipage} \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\emph{R} clair
\end{quote}
\end{minipage} & 15000 & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
Rembourser donné (ajoutée dans rembourser compteur) lorsque la stockage
valeur est Positionner pour zéro depuis

non nul.
\end{quote}
\end{minipage} \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\emph{R} autodestruction
\end{quote}
\end{minipage} & 24000 & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
Rembourser donné (ajoutée dans rembourser compteur) pour autodestructeur
un Compte.
\end{quote}
\end{minipage} \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\emph{G} autodestruction
\end{quote}
\end{minipage} & 5000 & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
Montant de gaz pour Payer pour un AUTO-DESTRUCTION opération.
\end{quote}
\end{minipage} \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\emph{G} créer
\end{quote}
\end{minipage} & 32000 & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
Payé pour un CRÉER opération.
\end{quote}
\end{minipage} \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
Dépôt de code \emph{G}
\end{quote}
\end{minipage} & 200 & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
Payé par octet pour un CRÉER opération pour réussir dans placement code
dans Etat.
\end{quote}
\end{minipage} \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
Valeur d'appel \emph{G}
\end{quote}
\end{minipage} & 9000 & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
Payé pour un non nul valeur transférer comme partie de la APPEL
opération.
\end{quote}
\end{minipage} \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\protect\hypertarget{_bookmark134}{}{}Allocation d'appel \emph{G}
\end{quote}
\end{minipage} & 2300 & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
UN traitement pour la appelé Contrat soustrait depuis
\textsubscript{Valeur d'appel} \emph{G} pour un non nul valeur
transférer.
\end{quote}
\end{minipage} \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\emph{G} nouveau compte
\end{quote}
\end{minipage} & 25000 & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
Payé pour un APPEL ou alors AUTO-DESTRUCTION opération qui crée un
Compte.
\end{quote}
\end{minipage} \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\emph{G} exp
\end{quote}
\end{minipage} & dix & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
Partiel Paiement pour un EXP opération.
\end{quote}
\end{minipage} \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\emph{G} expbyte
\end{quote}
\end{minipage} & 50 & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
Partiel Paiement lorsque multiplié par la Numéro de octets dans la
exposant pour la EXP opération.
\end{quote}
\end{minipage} \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
Mémoire \emph{G}
\end{quote}
\end{minipage} & 3 & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
Payé pour tous Additionnel mot lorsque expansion Mémoire.
\end{quote}
\end{minipage} \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\protect\hypertarget{_bookmark135}{}{}\emph{G} txcreate
\end{quote}
\end{minipage} & 32000 & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
Payé par tout création de contrat transactions après la \emph{Propriété}
passage.
\end{quote}
\end{minipage} \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\protect\hypertarget{_bookmark136}{}{}\emph{G} txdatazero
\end{quote}
\end{minipage} & 4 & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
Payé pour tous zéro octet de Les données ou alors code pour un
transaction.
\end{quote}
\end{minipage} \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\protect\hypertarget{_bookmark137}{}{}\emph{G} txdatanonzero
\end{quote}
\end{minipage} & 16 & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
Payé pour tous non nul octet de Les données ou alors code pour un
transaction.
\end{quote}
\end{minipage} \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\protect\hypertarget{_bookmark138}{}{}transaction\emph{~G}
\end{quote}
\end{minipage} & 21000 & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
Payé pour tous transaction.
\end{quote}
\end{minipage} \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
Journal \emph{G}
\end{quote}
\end{minipage} & 375 & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
Partiel Paiement pour un JOURNAL opération.
\end{quote}
\end{minipage} \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
Données de journal \emph{G}
\end{quote}
\end{minipage} & 8 & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
Payé pour chaque octet dans un JOURNAL l'opération Les données.
\end{quote}
\end{minipage} \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
Sujet de journal \emph{G}
\end{quote}
\end{minipage} & 375 & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
Payé pour chaque sujet de un JOURNAL opération.
\end{quote}
\end{minipage} \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\emph{G} keccak256
\end{quote}
\end{minipage} & 30 & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
Payé pour chaque KECCAK256 opération.
\end{quote}
\end{minipage} \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\emph{G} keccak256word
\end{quote}
\end{minipage} & 6 & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
Payé pour chaque mot (arrondi en haut) pour saisir Les données pour un
KECCAK256 opération.
\end{quote}
\end{minipage} \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
Copie \emph{G}
\end{quote}
\end{minipage} & 3 & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
Partiel Paiement pour *COPIE opérations, multiplié par mots copié,
arrondi en haut.
\end{quote}
\end{minipage} \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\emph{G} bloc de hachage
\end{quote}
\end{minipage} & 20 & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
Paiement pour chaque BLOCHASH opération.
\end{quote}
\end{minipage} \\
\bottomrule
\end{longtable}

\begin{quote}
\protect\hypertarget{Appendix_H._Virtual_Machine_Specificatio}{}{}annexe
H Virtuel Machine spécification

Lorsque interprétant 256 bits binaire valeurs comme entiers, la
représentation est big-endian.

Lorsqu'une donnée machine 256 bits est convertie vers et à partir d'une
adresse ou d'un hachage 160 bits, la droite (ordre inférieur pour BE) 20
octets sont utilisés et les 12 les plus à gauche sont ignorés ou remplis
de zéros, ainsi les valeurs entières (lorsque les octets sont interprété
comme big-endian) sont équivalent.

ÉTHERUM~: UN SÉCURISE DÉCENTRALISÉ GÉNÉRALISÉ TRANSACTION COMPTABLE
\textbf{BERLIN VERSION} 28
\end{quote}

\begin{enumerate}
\def\labelenumi{\arabic{enumi}.}
\item
  \textbf{Gaz Coût.} Le général gaz Coût une fonction, \emph{C} , est
  défini comme:
\end{enumerate}

\begin{quote}
(324)

\emph{C} ( \emph{\textbf{σ} , \textbf{µ} , UN, je} ) ≡ \emph{C} mém (
\emph{\textbf{µ}} i ) − \emph{C} mém ( \emph{\textbf{µ}}
\textsubscript{i} ) +

\emph{C} SSTORE ( \emph{\textbf{σ} , \textbf{µ} , UN, je} ) si \emph{w}
= STORE

\emph{G} exp si \emph{w} = EXP ∧ \textbf{\emph{µs {[}} \textsubscript{1
}}{]} = 0

\emph{G} \textsubscript{exp} + \emph{G} \textsubscript{expoctet} × (1 +
l log 256 ( \textbf{\emph{µ} s} {[}1{]}) J ) si \emph{w} = EXP ∧
\textbf{\emph{µs {[}} 1} {]} \emph{\textgreater{}} 0 \emph{Sol}
\textsubscript{très bas} + \textsubscript{Copie} \emph{G} × r
\textbf{\emph{µs} {[}} 2{]} ÷ 32 1 si \emph{w} ∈ \emph{W}
\textsubscript{copie} \emph{C} aaccès ( \textbf{\emph{µ}
\textsubscript{s }}{[}0{]} mode 2 \textsuperscript{160} \emph{, A} ) +
Copie \emph{G} × r \textbf{\emph{µs} \textsubscript{{[} }}3{]} ÷ 32 1 si
\emph{w} = EXTCODECOPIE \emph{C} aaccès ( \textbf{\emph{µ} s} {[}0{]}
mode 2 160 \emph{, A} ) si \emph{w} ∈ \emph{W} excompte

\textsubscript{Journal} \emph{G} + \textsubscript{Données de journal}
\emph{G} × \textbf{\emph{µs {[}} 1} {]} si \emph{w} = LOG0

Journal \emph{G} + Données de journal \emph{G} × \textbf{\emph{µs {[}}
1} {]} + \emph{G} logtopic si \emph{w} = LOG1

Journal \emph{G} + Données de journal \emph{G} × \textbf{\emph{µs {[}}
1} {]} + 2 \emph{G} logtopic si \emph{w} = LOG2

Journal \emph{G} + Données de journal \emph{G} × \textbf{\emph{µs {[}}
1} {]} + 3 \emph{G} logtopic si \emph{w} = LOG3

Journal \emph{G} + Données de journal \emph{G} × \textbf{\emph{µs {[}}
1} {]} + 4 \emph{G} logtopic si \emph{w} = LOG4

\emph{C} \textsubscript{APPEL} ( \emph{\textbf{σ} , \textbf{µ} , A} ) si
\emph{w} ∈ \emph{W} \textsubscript{appel}

\emph{C} AUTODESTRUCTION ( \emph{\textbf{σ} , \textbf{µ }}) si \emph{w}
= AUTO-DESTRUCTION

\emph{G} créer si \emph{w} = CRÉER

\emph{G} créer + \emph{G} keccak256word × r \textbf{\emph{µs} {[}} 2{]}
÷ 32 1 si \emph{w} = \protect\hyperlink{_bookmark150}{CRÉER2} \emph{G}
keccak256 + \emph{G} keccak256word × r \textbf{\emph{µs {[}} 1} {]} ÷ 32
1 si \emph{w} = KECCAK256 \emph{G} jumpdest si \emph{w} = JUMPDEST

\emph{C} SLOAD ( \emph{\textbf{µ} , A, I} ) si \emph{w} = SLOAD

\emph{G} zéro si \emph{w} ∈ \emph{W} zéro

Base \emph{G} si \emph{w} ∈ socle en \emph{W}

\emph{G} très faible si \emph{w} ∈ \emph{W} très bas

\emph{G} bas si \emph{w} ∈ \emph{W} faible

\emph{G} mi si \emph{w} ∈ \emph{W} mi

\emph{G} élevé si \emph{w} ∈ \emph{W} haut
\end{quote}

 \emph{G} blockhash si \emph{w} =
\protect\hyperlink{_bookmark144}{BLOCHASH}

\begin{enumerate}
\def\labelenumi{(\arabic{enumi})}
\setcounter{enumi}{324}
\item
  \emph{w je} \textbf{\textsubscript{b}} {[} \emph{\textbf{µ}} pc {]} si
  \emph{\textbf{µpc}} \_ \emph{\textless{}} ll \emph{je}
  \textbf{\textsubscript{b}} ll
\end{enumerate}

ARRÊTER sinon

\begin{quote}
où:
\end{quote}

\begin{enumerate}
\def\labelenumi{(\arabic{enumi})}
\setcounter{enumi}{325}
\item
  \begin{quote}
  \emph{C} mém ( \emph{un} ) ≡ Mémoire \emph{G} · \emph{un} +
  \end{quote}
\end{enumerate}

\begin{quote}
\emph{un} 2

512
\end{quote}

\begin{enumerate}
\def\labelenumi{(\arabic{enumi})}
\setcounter{enumi}{326}
\item
  \protect\hypertarget{_bookmark140}{}{}\emph{C}
\end{enumerate}

un accès

( \emph{x, A} ) \emph{G} warmaccess si \emph{x} ∈
\protect\hyperlink{_bookmark39}{\emph{Un} \textbf{un}} \emph{G}
coldaccountacces autrement

\begin{quote}
avec \emph{C} CALL , \emph{C} SELFDESTRUCT , \emph{C} SLOAD et \emph{C}
SSTORE comme spécifié dans la section appropriée ci-dessous. Nous
définissons ce qui suit sous-ensembles de des instructions:

\emph{W} zéro = \{ ARRÊTER , RETOUR , RETOUR \}

\textsubscript{socle en} \emph{W} = \{ ADRESSE , ORIGINE , APPELANT ,
CALLVALUE , CALLDATASIZE , CODESIZE , GASPRICE , COINBASE , Horodatage ,
NOMBRE , DIFFICULTE , LIMITE DE GAZ , CHAINID , RETURNDATASIZE , POP ,
PC , TAILLE , GAZ \}

\emph{W} \textsubscript{très bas} = \{ AJOUTER , SOUS , PAS , LT , GT ,
SLT , SGT , égaliseur , ISZÉRO , ET , OU , XOR , OCTET , SHL , SHR , RAS
, CALLDATALOAD , CHARGEMENT , MSTORE , MSTORE8 , POUSSER* , DUP* ,
ÉCHANGE* \}

\emph{W} \textsubscript{bas} = \{ MUL , DIV , SDIV , MOD , SMOD ,
SIGNEXTEND , ÉQUILIBRE AUTONOME \}

\emph{W} \textsubscript{mi} = \{ ADDMOD , MULMOD , SAUT \}

\emph{W} \textsubscript{élevé} = \{ JUMPI \}

\emph{W} copie = \{ CALLDATACOPY , CODECOPIE , RENVOYER UNE COPIE \}
\emph{W} \textsubscript{appel} = \{ APPEL , CODE APPEL , DELEGATECALL ,
STATICCALL \} \emph{W} excompte = \{ ÉQUILIBRE , EXTCODETAILLE ,
EXTCODEHACHE \}

Notez le composant de coût de la mémoire, donné comme le produit de la
mémoire \emph{G} et du maximum de 0 et du plafond du nombre nombre de
mots en taille que la mémoire doit dépasser du nombre de mots courant,
\emph{\textbf{µ}} i pour que tous les accès référencent valide Mémoire
qu'il s'agisse pour lis ou alors écrivez. Tel accède doit être pour non
nul Numéro de octets.

Référencement un zéro longueur Portée (par exemple par tenter pour
passer ce comme la saisir Portée pour un APPEL) Est-ce que ne pas exiger
Mémoire pour être élargi pour la début de la Portée. \emph{\textbf{µ}}
je est défini comme cette Nouveau maximum Numéro de mots de actif
Mémoire; cas spéciaux sont donné où celles-ci deux sont ne pas égal.

ÉTHERUM~: UN SÉCURISE DÉCENTRALISÉ GÉNÉRALISÉ TRANSACTION COMPTABLE
\textbf{BERLIN VERSION} 29

Notez également que \emph{C} mem est la fonction de coût mémoire (la
fonction d'expansion étant la différence entre le coût avant et après).
C'est un polynôme, avec le coefficient d'ordre supérieur divisé et
plancher, et donc linéaire jusqu'à 724B de mémoire utilisé, après qui ce
frais substantiellement Suite.

Tandis que définir la instruction Positionner, nous défini la extension
de mémoire pour Portée une fonction, \emph{M} , Donc:
\end{quote}

\begin{enumerate}
\def\labelenumi{(\arabic{enumi})}
\setcounter{enumi}{327}
\item
  \begin{quote}
  \emph{M} ( \emph{s, F, l} ) \emph{s} si \emph{je} = 0 max( \emph{s,} r
  ( \emph{f} + \emph{l} ) ÷ 32 1 ) autrement
  \end{quote}
\end{enumerate}

\begin{quote}
Une autre utile une fonction est "tout mais une 64e~» une fonction
\emph{L} défini comme:

(329) \protect\hypertarget{_bookmark141}{}{}\emph{L} ( \emph{n} ) ≡
\emph{n} − l \emph{n/} 64 J
\end{quote}

\begin{enumerate}
\def\labelenumi{\arabic{enumi}.}
\item
  \begin{quote}
  \protect\hypertarget{H.2._Instruction_Set}{}{}\textbf{Jeu
  d'instructions.} Comme précisé précédemment dans la section
  \protect\hyperlink{9._Execution_Model}{9,} ces définitions prennent
  place dans le contexte final ici. Dans particulier nous présumer
  \emph{O} est la EVM progression d'état une fonction et définir la
  termes se rapportant pour la suivant cycle Etat ( \emph{\textbf{σ} ,
  \textbf{µ }}) tel que:
  \end{quote}
\end{enumerate}

\begin{quote}
(330) \emph{O} ( \emph{\textbf{σ} , \textbf{µ} , UN, je} ) ≡ (
\emph{\textbf{σ} , \textbf{µ} , UN , je} ) avec exceptions, comme c'est
noté

Voici les différentes exceptions aux règles de transition d'état données
dans la section \protect\hyperlink{9._Execution_Model}{9} spécifiées
pour chaque instruction, ainsi que les définitions supplémentaires
spécifiques aux instructions de \emph{J} et \emph{C.} \_ Pour chaque
instruction, est également spécifié \emph{α} , le Additionnel éléments
mis sur la pile et \emph{δ} , la éléments supprimé depuis pile, comme
défini dans section \protect\hyperlink{9._Execution_Model}{9.}

ÉTHERUM~: UN SÉCURISE DÉCENTRALISÉ GÉNÉRALISÉ TRANSACTION COMPTABLE
\textbf{BERLIN VERSION} 30
\end{quote}

\hypertarget{arruxeat-et-arithmuxe9tique-opuxe9rations}{%
\section{0 : Arrêt et Arithmétique
Opérations}\label{arruxeat-et-arithmuxe9tique-opuxe9rations}}

\begin{quote}
Tout arithm e tic est moi dulo \_ 2 \textsuperscript{256} sauf si sinon
\_ c'est noté. Le zéro-ième puissance \_ \_ \_ de zéro 0
\textsuperscript{0} est défini \_ pour être \_ une.
\end{quote}

\hypertarget{valeur-mnuxe9monique-ux3b4-ux3b1-la-description}{%
\section{\texorpdfstring{Valeur Mnémonique \emph{δ α} La
description}{Valeur Mnémonique δ α La description}}\label{valeur-mnuxe9monique-ux3b4-ux3b1-la-description}}

\begin{quote}
\protect\hypertarget{_bookmark143}{}{}0x00 ARRÊTER 0 0 Arrêts exécution.

0x01 AJOUTER 2 1 Une addition opération.

\textbf{\emph{µs {[}} 0} {]} ≡ \textbf{\emph{µs {[}} 0} {]} +
\textbf{\emph{µs {[}} 1} {]}

0x02 MU 2 1 Multiplication opération.

\textbf{\emph{µs {[}} 0} {]} ≡ \textbf{\emph{µs {[}} 0} {]} ×
\textbf{\emph{µs {[}} 1} {]}

0x03 SOUS 2 1 Soustraction opération.

\textbf{\emph{µs {[}} 0} {]} ≡ \textbf{\emph{µs {[}} 0} {]} −
\textbf{\emph{µs {[}} 1} {]}

0x04 DIV 2 1 Entier division opération.
\end{quote}

0 si \textbf{\emph{µs {[}} 1} {]} = 0

\begin{quote}
\textbf{s}

lµs \textbf{\emph{{[}} 0} {]} ÷ \textbf{\emph{µs {[}} 1} {]} J autrement

0x05 SDIV 2 1 Signé entier division opération (tronqué).

  \textbf{sgn} ( \textbf{\emph{µ} s} {[}0{]} ÷ \emph{\textbf{µs}}
{[}1{]}) \textbf{l} \textbar{} \textbf{\emph{µs {[}} 0} {]} ÷
\textbf{\emph{µs {[}} 1} {]} \textbar J autrement

Où tout valeurs sont traité comme deux complément signé 256 bits
entiers. Noter la débordement \_ \_ \_ \_ séma ntique \_ lorsque − 2
\textsuperscript{255} est nier d.

0x06 MOD 2 1 Modulo reste opération.

\emph{\textbf{µ}} {[}0{]} ≡ 0 si \textbf{\emph{µs {[}} 1} {]} = 0

0x07 SMOD 2 1 Signé modulo reste opération.

\emph{\textbf{µ}} {[}0{]} ≡ 0 si \textbf{\emph{µs {[}} 1} {]} = 0

\textbf{sg} ( \emph{\textbf{µ}} {[}0{]})( \textbar{} \emph{\textbf{µ}}
{[}0{]} \textbar{} mode \textbar{} \emph{\textbf{µ}} {[}1{]} \textbar{}
) autrement

Où tout valeurs sont traité comme deux complément signé 256 bits
entiers.

0x08 ADDMOD 3 1 Modulo une addition opération.

\emph{\textbf{µ}} {[}0{]} ≡ 0 si \textbf{\emph{µs} {[}} 2{]} = 0

Tout intermédiaire calculs de cette opération sont ne pas matière pour
la 2 \textsuperscript{256} modulo.

0x09 MULMOD 3 1 Modulo multiplication opération.

\emph{\textbf{µ}} {[}0{]} ≡ 0 si \textbf{\emph{µs} {[}} 2{]} = 0

( \emph{\textbf{µ}} {[}0{]} × \emph{\textbf{µ}} {[}1{]}) mode
\emph{\textbf{µ}} {[}2{]} autrement

Tout intermédiaire calculs de cette opération sont ne pas matière pour
la 2 \textsuperscript{256} modulo.

0x0a EXP 2 1 Exponentiel opération.

\emph{\textbf{µ}} {[}0{]} ≡ \emph{\textbf{µ}} {[}0{]}
\textbf{\emph{\textsuperscript{µs {[}}} 1} {]}

0x0b SIGNEXTEND 2 1 Étendre longueur de deux complément signé entier.
\end{quote}

∀ \emph{je} ∈ {[}0 \emph{..} 255{]} : \emph{\textbf{µ}} {[}0{]}

\begin{quote}
≡ fµs \textbf{\emph{{[}} \textsubscript{1 }}{]} t si \emph{je} \emph{t}
où \emph{t} = 256 − 8( \textbf{\emph{µs {[}} \textsubscript{0 }}{]} + 1)

\textbf{\emph{µ} \textsubscript{s }}{[} \emph{x} {]} je donne la
\emph{je} th bit (compte depuis zéro) de \emph{\textbf{µs}} {[} \emph{x}
{]} \textbf{\textsubscript{\_}}

ÉTHERUM~: UN SÉCURISE DÉCENTRALISÉ GÉNÉRALISÉ TRANSACTION COMPTABLE
\textbf{BERLIN VERSION} 31
\end{quote}

\hypertarget{s-comparaison-au-niveau-du-bit-logique-opuxe9rations}{%
\section{10s~: Comparaison \& Au niveau du bit Logique
Opérations}\label{s-comparaison-au-niveau-du-bit-logique-opuxe9rations}}

\begin{quote}
\emph{\textbf{µ}} {[}0{]} ≡ f 1 si \textbf{\emph{µs {[}} 0} {]}
\emph{\textless{} \textbf{µs {[} }}\textbf{1} {]}

0x11 GT 2 1 Plus grand que comparaison.

\emph{\textbf{µ}} {[}0{]} ≡ 1 si \textbf{\emph{µs {[}} 0} {]}
\emph{\textgreater{} \textbf{µs {[} }}\textbf{1} {]}

0x12 PS 2 1 Signé moins que comparaison.

\emph{\textbf{µ}} {[}0{]} ≡ 1 si \textbf{\emph{µs {[}} 0} {]}
\emph{\textless{} \textbf{µs {[} }}\textbf{1} {]}

Où tout valeurs sont traité comme deux complément signé 256 bits
entiers.

0x13 SGT 2 1 Signé plus grand que comparaison.

\emph{\textbf{µ}} {[}0{]} ≡ 1 si \textbf{\emph{µs {[}} 0} {]}
\emph{\textgreater{} \textbf{µs {[} }}\textbf{1} {]}

Où tout valeurs sont traité comme deux complément signé 256 bits
entiers.

0x14 EQ 2 1 Égalité comparaison.

\emph{\textbf{µ}} {[}0{]} ≡ 1 si \textbf{\emph{µs {[}} 0} {]} =
\textbf{\emph{µs {[}} 1} {]}

0x15 ISZÉRO 1 1 Simple ne pas opérateur.

\emph{\textbf{µ}} {[}0{]} ≡ 1 si \textbf{\emph{µs {[}} 0} {]} = 0

0x16 ET 2 1 Au niveau du bit ET opération.

∀ \emph{je} ∈ {[}0 \emph{..} 255{]} : \textbf{\emph{µs {[}}
\textsubscript{0 }}{]} je ≡ \textbf{\emph{µs {[}} \textsubscript{0 }}{]}
je ∧ \textbf{\emph{µs {[}} \textsubscript{1 }}{]} je

0x17 OU 2 1 Au niveau du bit OU ALORS opération.

∀ \emph{je} ∈ {[}0 \emph{..} 255{]} : \textbf{\emph{µs {[}}
\textsubscript{0 }}{]} je ≡ \textbf{\emph{µs {[}} \textsubscript{0 }}{]}
je ∨ \textbf{\emph{µs {[}} \textsubscript{1 }}{]} je

0x18 OU exclusif 2 1 Au niveau du bit XOR opération.

∀ \emph{je} ∈ {[}0 \emph{..} 255{]} : \textbf{\emph{µs {[}}
\textsubscript{0 }}{]} je ≡ \textbf{\emph{µs {[}} \textsubscript{0 }}{]}
je ⊕ \textbf{\emph{µs {[}} \textsubscript{1 }}{]} je

0x19 PAS 1 1 Au niveau du bit NE PAS opération.

∀ \emph{je} ∈ {[}0 \emph{..} 255{]} : \textbf{\emph{µs {[}}
\textsubscript{0 }}{]} je

1 si \textbf{\emph{µs {[}} \textsubscript{0 }}{]} je = 0

0 autrement

0x1a OCTET 2 1 Récupérer Célibataire octet depuis mot.

∀ \emph{je} ∈ {[}0 \emph{..} 255{]} : \textbf{\emph{µs {[}}
\textsubscript{0 }}{]} je

\textbf{\emph{µ} s} {[}1{]} \textsubscript{( \emph{je} − 248+8
\emph{\textbf{µ }}}\textbf{s} {[}0{]}) si \emph{je} ≥ 248 ∧
\textbf{\emph{µs {[}} 0} {]} \emph{\textless{}} 32

0 sinon

Pour la Nième octet, nous compter depuis la la gauche (c'est à dire N=0
voudrais être la plus important dans gros endien).
\end{quote}

\begin{longtable}[]{@{}
  >{\raggedright\arraybackslash}p{(\columnwidth - 6\tabcolsep) * \real{0.25}}
  >{\raggedright\arraybackslash}p{(\columnwidth - 6\tabcolsep) * \real{0.25}}
  >{\raggedright\arraybackslash}p{(\columnwidth - 6\tabcolsep) * \real{0.25}}
  >{\raggedright\arraybackslash}p{(\columnwidth - 6\tabcolsep) * \real{0.25}}@{}}
\toprule
0x1b & \begin{minipage}[b]{\linewidth}\raggedright
\begin{quote}
SHL
\end{quote}
\end{minipage} & 2 & \begin{minipage}[b]{\linewidth}\raggedright
\begin{quote}
1 La gauche changement opération.

\emph{\textbf{µ}} {[}0{]} ≡ ( \emph{\textbf{µ}} {[}1{]} × 2
\textbf{\emph{\textsuperscript{µs {[}}} 0} {]} ) mode 2
\textsuperscript{256}

\textbf{s s}
\end{quote}
\end{minipage} \\
\midrule
\endhead
0x1c & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
SHR
\end{quote}
\end{minipage} & 2 & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
1 Logique à droite changement opération.

\emph{\textbf{µ}} {[}0{]} ≡ l \emph{\textbf{µ}} {[}1{]} ÷ 2
\textbf{\emph{\textsuperscript{µs {[}}} 0} {]} J

\textbf{s s}
\end{quote}
\end{minipage} \\
0x1d & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
DAS
\end{quote}
\end{minipage} & 2 & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
1 Arithmétique (signé) à droite changement opération.
\end{quote}
\end{minipage} \\
\bottomrule
\end{longtable}

\begin{quote}
\emph{\textbf{µ}} {[}0{]} ≡ \emph{\textbf{lµ}} {[}1{]} ÷ 2
\textbf{\emph{\textsuperscript{µs {[}}} 0} {]} J

Où \textbf{\emph{µs {[}} 0} {]} et \textbf{\emph{µs {[}} 1} {]} sont
traité comme deux complément signé 256 bits entiers, pendant que
\textbf{\emph{µs {[}} 0} {]} est traité comme non signé.
\end{quote}

\hypertarget{s-keccak256}{%
\section{20~s~: KECCAK256}\label{s-keccak256}}

\begin{longtable}[]{@{}
  >{\raggedright\arraybackslash}p{(\columnwidth - 6\tabcolsep) * \real{0.25}}
  >{\raggedright\arraybackslash}p{(\columnwidth - 6\tabcolsep) * \real{0.25}}
  >{\raggedright\arraybackslash}p{(\columnwidth - 6\tabcolsep) * \real{0.25}}
  >{\raggedright\arraybackslash}p{(\columnwidth - 6\tabcolsep) * \real{0.25}}@{}}
\toprule
\textbf{Valeur} & \begin{minipage}[b]{\linewidth}\raggedright
\begin{quote}
\textbf{Mnémonique} \emph{δ}
\end{quote}
\end{minipage} & \emph{α} & \begin{minipage}[b]{\linewidth}\raggedright
\begin{quote}
\textbf{La description}
\end{quote}
\end{minipage} \\
\midrule
\endhead
0x20 & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
KECCAK256 2
\end{quote}
\end{minipage} & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
1
\end{quote}
\end{minipage} & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
Calculer Keccak-256 hacher.

\textbf{\emph{µs {[}} 0} {]} ≡ KEC ( \textbf{\emph{µ} m} {[}
\textbf{\emph{µ} s} {[}0{]} \emph{. . .} ( \textbf{\emph{µs {[}} 0} {]}
+ \textbf{\emph{µs {[}} 1} {]} − 1){]})

\emph{\textbf{µ}} je ≡ \emph{M} ( \emph{\textbf{µ}} je \emph{,
\textbf{µs {[} }}\textbf{0} {]} \emph{, \textbf{µs {[} }}\textbf{1} {]})
\end{quote}
\end{minipage} \\
\bottomrule
\end{longtable}

\begin{quote}
ÉTHERUM~: UN SÉCURISE DÉCENTRALISÉ GÉNÉRALISÉ TRANSACTION COMPTABLE
\textbf{BERLIN VERSION} 32

∀ \emph{je} ∈ \{ 0 \emph{. . . \textbf{µ }}{[}2{]} − 1 \} :
\emph{\textbf{µ}}

{[} \emph{\textbf{µ}} {[}0{]} + \emph{je} {]} ≡ f \emph{je}
\textbf{\textsubscript{d}} {[} \textbf{\emph{µs {[}} 1} {]} + \emph{je}
{]} si \textbf{\emph{µs {[}} 1} {]} + \emph{je \textless{}} ll \emph{je}
\textbf{\textsubscript{d}} ll

Le ajouts dans \emph{\textbf{µ}} {[}1{]} + \emph{je} sont ne pas matière
pour la 2 \textsuperscript{256} modulo.

\emph{\textbf{µ}} je ≡ \emph{M} ( \emph{\textbf{µ}} je \emph{,
\textbf{µs {[} }}\textbf{0} {]} \emph{, \textbf{µs }}\textbf{{[}} 2{]})

Cette se rapporte pour la saisir Les données passé avec la message appel
instruction

ou alors transaction.

0x38 CODETAILLE 0 1 Avoir Taille de code course dans courant
environnement.

\textbf{\emph{µs {[}} 0} {]} ≡ ll \emph{je} \textbf{\textsubscript{b}}
ll

0x39 CODECOPIE 3 0 Copie code course dans courant environnement pour
Mémoire.

∀ \emph{je} ∈ \{ 0 \emph{. . . \textbf{µ }}{[}2{]} − 1 \} :
\emph{\textbf{µ}}

{[} \emph{\textbf{µ}} {[}0{]} + \emph{je} {]} ≡ f \emph{je}
\textbf{\textsubscript{b}} {[} \textbf{\emph{µs {[}} 1} {]} + \emph{je}
{]} si \textbf{\emph{µs {[}} 1} {]} + \emph{je \textless{}} ll \emph{je}
\textbf{\textsubscript{b}} ll
\end{quote}

\textbf{s m s}

\begin{quote}
\emph{\textbf{µ}} je ≡ \emph{M} ( \emph{\textbf{µ}} je \emph{,
\textbf{µs {[} }}\textbf{0} {]} \emph{, \textbf{µs }}\textbf{{[}} 2{]})

ARRÊTER sinon

Le ajouts dans \emph{\textbf{µ}} {[}1{]} + \emph{je} sont ne pas matière
pour la 2 \textsuperscript{256} modulo.
\end{quote}

\textbf{\emph{µs {[}} 0} {]} ≡

\begin{quote}
160

\textbf{s}

0 sinon

où CEC ( \textbf{b} ) ≡ \emph{\textbf{σ}} {[} \emph{\textbf{µ}} {[}0{]}
mod \_ \_ 2 \textsuperscript{16 0} {]} c

\emph{Un} \textbf{\textsubscript{un}} ≡ \emph{Un}
\textbf{\textsubscript{un}} ∪ \{ \emph{\textbf{µ}} {[}0{]} mode 2
\textsuperscript{160} \}

0x3c EXTCODECOPIE 4 0 Copie un comptes code pour Mémoire.

∀ \emph{je} ∈ \{ 0 \emph{. . . \textbf{µ }}{[}3{]} − 1 \} :
\emph{\textbf{µ}}

{[} \emph{\textbf{µ}} {[}1{]} + \emph{je} {]} ≡ f \textbf{b} {[}
\textbf{\emph{µs} {[}} 2{]} + \emph{je} {]} si \textbf{\emph{µs} {[}}
2{]} + \emph{je \textless{}} ll \textbf{b} ll

où CEC ( \textbf{b} ) ≡ \emph{\textbf{σ}} {[} \emph{\textbf{µ}} {[}0{]}
mod \_ \_ 2 \textsuperscript{16 0} {]} c

Nous \_ présumer \textbf{b} ≡ () si \emph{\textbf{σ}} {[}
\emph{\textbf{µ}} {[}0{]} mod \_ \_ 2 \textsuperscript{16 0} {]} = ∅ .

\emph{\textbf{µ}} je \emph{M} ( \emph{\textbf{µ}} je \emph{, \textbf{µs
{[} }}\textbf{1} {]} \emph{, \textbf{µs }}\textbf{{[}} 3{]})

Le ajouts dans \emph{\textbf{µ}} {[}2{]} + \emph{je} sont ne pas matière
pour la 2 \textsuperscript{256} modulo.

\emph{Un} \textbf{\textsubscript{un}} ≡ \emph{Un}
\textbf{\textsubscript{un}} ∪ \{ \emph{\textbf{µ}} {[}0{]} mode 2
\textsuperscript{160} \}

ÉTHERUM~: UN SÉCURISE DÉCENTRALISÉ GÉNÉRALISÉ TRANSACTION COMPTABLE
\textbf{BERLIN VERSION} 33

0x3d RETURNDATASIZE 0 1 Avoir Taille de production Les données depuis la
précédent appel depuis la courant

environnement.

\textbf{\emph{µs {[}} 0} {]} ≡ ll \textbf{\emph{µ} o} ll

0x3e RETOURDATACOPIE 3 0 Copie production Les données depuis la
précédent appel pour Mémoire.

∀ \emph{je} ∈ \{ 0 \emph{. . . \textbf{µ }}{[}2{]} − 1 \} :
\emph{\textbf{µ}}

{[} \emph{\textbf{µ}} {[}0{]} + \emph{je} {]} ≡ f \textbf{\emph{µ} o}
{[} \textbf{\emph{µ} s} {[}1{]} + \emph{je} {]} si \textbf{\emph{µs {[}}
1} {]} + \emph{je \textless{}} ll \textbf{\emph{µ} o} ll

Le ajouts dans \emph{\textbf{µ}} {[}1{]} + \emph{je} sont ne pas matière
pour la 2 \textsuperscript{256} modulo.

\emph{\textbf{µ}} je ≡ \emph{M} ( \emph{\textbf{µ}} je \emph{,
\textbf{µs {[} }}\textbf{0} {]} \emph{, \textbf{µs }}\textbf{{[}} 2{]})

0x3f EXTCODEHAS 1 1 Avoir hacher de un comptes code.

0 si MORT ( \emph{\textbf{σ} , \textbf{µ }}{[}0{]} mode 2
\textsuperscript{160} )

\emph{Un} \textbf{\textsubscript{un}} ≡ \emph{Un}
\textbf{\textsubscript{un}} ∪ \{ \emph{\textbf{µ}} {[}0{]} mode 2
\textsuperscript{160} \}
\end{quote}

\hypertarget{ans-bloc-information}{%
\section{40 ans~: Bloc Information}\label{ans-bloc-information}}

\begin{quote}
\protect\hypertarget{_bookmark144}{}{}où \emph{P} est la hacher de un
bloc de un particulier Numéro, en haut pour un maximum âge. 0 est la
gauche sur la pile si la regardé pour bloc Numéro est plus grand que ou
alors

égal pour la courant bloc Numéro ou alors Suite que 256 blocs derrière
la courant bloc.
\end{quote}

\emph{P} ( \emph{h, n, un} ) ≡

\begin{enumerate}
\def\labelenumi{\alph{enumi}.}
\setcounter{enumi}{7}
\item
  \begin{quote}
  si \emph{n} = \emph{Salut} \_
  \end{quote}
\end{enumerate}

\begin{quote}
  \emph{P} ( \emph{H} p \emph{, n, un} + 1) autrement

et nous affirmer la entête \emph{H} pouvez être déterminé depuis son
hacher \emph{h} sauf si \emph{h} est zéro (comme est la Cas pour la
parent hacher de la genèse bloc).

0x41 COINBASE 0 1 Avoir la courant bloc de Bénéficiaire adresse.

\textbf{\emph{µs {[}} \textsubscript{0 }}{]} ≡ \emph{je} hc

0x42 Horodatage 0 1 Avoir la courant bloc de horodatage.

\textbf{\emph{µs {[}} \textsubscript{0 }}{]} ≡ \emph{Je} Hs

0x43 NUMÉRO 0 1 Avoir la courant bloc de Numéro.

\textbf{\emph{µs {[}} \textsubscript{0 }}{]} ≡ \emph{je} salut

0x44 DIFFICULTÉ 0 1 Avoir la courant bloc de difficulté.

\textbf{\emph{µs {[}} \textsubscript{0 }}{]} ≡ \emph{je me} suis

0x45 LIMITE DE GAZ 0 1 Avoir la courant bloc de gaz limite.

\textbf{\emph{µs {[}} \textsubscript{0 }}{]} ≡ \emph{je} hl

0x46 CHAINID 0 1 Avoir la \protect\hyperlink{_bookmark1}{chaîne
IDENTIFIANT.}

\textbf{\emph{µs {[}} 0} {]} ≡ \emph{β}

0x47 AUTO-ÉQUILIBRE 0 1 Avoir solde de actuellement exécution Compte.

\emph{\textbf{µ}} \textbf{s} {[}0{]} ≡ \emph{\textbf{σ}} {[} \emph{je}
\textsubscript{une} {]} \textsubscript{b}

ÉTHERUM~: UN SÉCURISE DÉCENTRALISÉ GÉNÉRALISÉ TRANSACTION COMPTABLE
\textbf{BERLIN VERSION} 34
\end{quote}

\hypertarget{ans-pile-muxe9moire-stockage-et-flux-opuxe9rations}{%
\section{50~ans~: Pile, Mémoire, Stockage et Flux
Opérations}\label{ans-pile-muxe9moire-stockage-et-flux-opuxe9rations}}

\begin{longtable}[]{@{}
  >{\raggedright\arraybackslash}p{(\columnwidth - 8\tabcolsep) * \real{0.20}}
  >{\raggedright\arraybackslash}p{(\columnwidth - 8\tabcolsep) * \real{0.20}}
  >{\raggedright\arraybackslash}p{(\columnwidth - 8\tabcolsep) * \real{0.20}}
  >{\raggedright\arraybackslash}p{(\columnwidth - 8\tabcolsep) * \real{0.20}}
  >{\raggedright\arraybackslash}p{(\columnwidth - 8\tabcolsep) * \real{0.20}}@{}}
\toprule
\begin{minipage}[b]{\linewidth}\raggedright
\begin{quote}
\textbf{Valeur}

0x50
\end{quote}
\end{minipage} & \begin{minipage}[b]{\linewidth}\raggedright
\begin{quote}
\textbf{Mnémonique}

POPULAIRE
\end{quote}
\end{minipage} & \begin{minipage}[b]{\linewidth}\raggedright
\emph{δ}

\begin{quote}
1
\end{quote}
\end{minipage} & \begin{minipage}[b]{\linewidth}\raggedright
\begin{quote}
\emph{α}

0
\end{quote}
\end{minipage} & \begin{minipage}[b]{\linewidth}\raggedright
\begin{quote}
\textbf{La description}

Éliminer Objet depuis pile.
\end{quote}
\end{minipage} \\
\midrule
\endhead
0x51 & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
MLOAD
\end{quote}
\end{minipage} & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
1
\end{quote}
\end{minipage} & 1 & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
Charge mot depuis Mémoire.

\textbf{\emph{µs {[}} 0} {]} ≡ \textbf{\emph{µ} m} {[} \textbf{\emph{µ}
s} {[}0{]} \emph{. . .} ( \textbf{\emph{µs {[}} 0} {]} + 31){]}

\emph{\textbf{µ}} je ≡ max( \emph{\textbf{µ}} je \emph{,} r (
\textbf{\emph{µs {[}} 0} {]} + 32) ÷ 32 1 )

Le une addition dans la calcul de \emph{\textbf{µ}} est ne pas matière
pour la 2 \textsuperscript{256} modulo.
\end{quote}

je
\end{minipage} \\
0x52 & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
MSTORE
\end{quote}
\end{minipage} & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
2
\end{quote}
\end{minipage} & 0 & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
Sauver mot pour Mémoire.

\textbf{\emph{µ} m} {[} \textbf{\emph{µ} s} {[}0{]} \emph{. . .} (
\textbf{\emph{µs {[}} 0} {]} + 31){]} ≡ \textbf{\emph{µs {[}} 1} {]}
\emph{\textbf{µ}} je ≡ max( \emph{\textbf{µ}} je \emph{,} r (
\textbf{\emph{µs {[}} 0} {]} + 32) ÷ 32 1 )

Le une addition dans la calcul de \emph{\textbf{µ}} est ne pas matière
pour la 2 \textsuperscript{256} modulo.
\end{quote}

je
\end{minipage} \\
0x53 & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
MSTORE8
\end{quote}
\end{minipage} & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
2
\end{quote}
\end{minipage} & 0 & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
Sauver octet pour Mémoire.

\textbf{\emph{µ} m} {[} \textbf{\emph{µ} s} {[}0{]}{]} ≡ (
\textbf{\emph{µs {[}} 1} {]} mode 256)

\emph{\textbf{µ}} je ≡ max( \emph{\textbf{µ}} je \emph{,} r (
\textbf{\emph{µs {[}} 0} {]} + 1) ÷ 32 1 )

Le une addition dans la calcul de \emph{\textbf{µ}} est ne pas matière
pour la 2 \textsuperscript{256} modulo.
\end{quote}

je
\end{minipage} \\
0x54 & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
SLOAD
\end{quote}
\end{minipage} & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
1
\end{quote}
\end{minipage} & 1 & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
Charge mot depuis stockage.
\end{quote}
\end{minipage} \\
\bottomrule
\end{longtable}

\begin{quote}
\textbf{\emph{µs {[}} \textsubscript{0 }}{]} ≡ \emph{\textbf{σ}} {[}
\emph{je} une {]} \textbf{s} {[} \textbf{\emph{µ} \textsubscript{s
}}{[}0{]}{]}

\emph{UN} \textbf{K} ≡ \textbf{\textsubscript{AK}} \emph{\_} ∪ \{ (
\emph{je} \textsubscript{un} \emph{, \textbf{µ }}f \textbf{s} {[}0{]})
\}

\protect\hypertarget{_bookmark145}{}{}0x55 STORE 2 0 Sauver mot pour
stockage.

\emph{\textbf{σ}} {[} \emph{je} une {]} \textbf{s} {[} \textbf{\emph{µ}
\textsubscript{s }}{[}0{]}{]} ≡ \textbf{\emph{µs {[}} \textsubscript{1
}}{]}

\textbf{AK} \emph{\_} ≡ \textbf{\textsubscript{AK}} \emph{\_} ∪ \{ (
\emph{je} \textsubscript{un} \emph{, \textbf{µs {[} }}\textbf{0} {]}) \}

\protect\hypertarget{_bookmark146}{}{}\emph{C} \textsubscript{SSTORE} (
\emph{\textbf{σ} , \textbf{µ }}) et \emph{Un} \textsubscript{r} sont
spécifié par EIP-2200 comme suit.

Nous rappeler la lecteur que la point de contrôle ("original") Etat
\protect\hyperlink{_bookmark41}{\emph{\textbf{σ}} 0} est la Etat si la
courant transaction ont été pour revenir.

Laisser \emph{v} 0 = \emph{\textbf{σ}} 0 {[} \emph{je} une {]}
\textbf{s} {[} \textbf{\emph{µ} \textsubscript{s }}{[}0{]}{]} être la
original valeur de la stockage insérer. Laisser \emph{v} =
\emph{\textbf{σ}} {[} \emph{je} une {]} \textbf{s} {[} \textbf{\emph{µ}
\textsubscript{s }}{[}0{]}{]} être la courant valeur.

Laisser \emph{v} = \textbf{\emph{µs {[}} 1} {]} être la Nouveau valeur.

Puis:
\end{quote}

\emph{C} SSTORE

( \emph{\textbf{σ} , \textbf{µ} , UN, je} ) 0 si ( \emph{je}
\textsubscript{une} \emph{, \textbf{µ }}\textbf{s} {[}0{]}) ∈ \emph{A}
\textbf{\textsubscript{K}} \emph{G} \textsubscript{charge froide}
autrement

\begin{quote}
   \emph{G} w armac c ess si \emph{v} = \emph{v} ∨ \emph{v} 0 =
\emph{v}

+ \emph{G} sset si \emph{v} = \emph{v} ∧ \emph{v} 0 = \emph{v} ∧
\emph{v} 0 = 0

  \emph{G} sreset si \emph{v} = \emph{v} ∧ \emph{v} 0 = \emph{v} ∧
\emph{v} 0 = 0

  \emph{R} \textsubscript{clair} si \emph{v} = \emph{v} ∧ \emph{v}
\textsubscript{0} = \emph{v} ∧ \emph{v} = 0
\end{quote}

où

\begin{quote}
  0 sinon

   − \emph{R} \textsubscript{clair} si \emph{v} \textsubscript{0} = 0
∧ \emph{v} = 0

\emph{r} saleclair ≡

\emph{r} salereset ≡

\emph{R} \textsubscript{clair} si \emph{v} \textsubscript{0} = 0 ∧
\emph{v} = 0

0 sinon

\emph{G} sset − \emph{G} warmaccess si \emph{v} 0 = \emph{v} ∧ \emph{v}
0 = 0

\emph{G} sréinitialiser − \emph{G} warmaccess si \emph{v} 0 = \emph{v} ∧
\emph{v} 0 = 0

\protect\hypertarget{_bookmark147}{}{} 0 sinon
\end{quote}

\begin{longtable}[]{@{}
  >{\raggedright\arraybackslash}p{(\columnwidth - 8\tabcolsep) * \real{0.20}}
  >{\raggedright\arraybackslash}p{(\columnwidth - 8\tabcolsep) * \real{0.20}}
  >{\raggedright\arraybackslash}p{(\columnwidth - 8\tabcolsep) * \real{0.20}}
  >{\raggedright\arraybackslash}p{(\columnwidth - 8\tabcolsep) * \real{0.20}}
  >{\raggedright\arraybackslash}p{(\columnwidth - 8\tabcolsep) * \real{0.20}}@{}}
\toprule
0x56 & \begin{minipage}[b]{\linewidth}\raggedright
\begin{quote}
SAUTER
\end{quote}
\end{minipage} & 1 & \begin{minipage}[b]{\linewidth}\raggedright
\begin{quote}
0 Modifier la programme compteur.
\end{quote}
\end{minipage} & \\
\midrule
\endhead
& & & & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\emph{J} SAUT ( \emph{\textbf{µ}} ) ≡ \textbf{\emph{µs {[}}
\textsubscript{0 }}{]}

Cette possède la effet de en écrivant mentionné valeur pour
\emph{\textbf{µ}} pc . Voir section
\protect\hyperlink{9._Execution_Model}{9.}
\end{quote}
\end{minipage} \\
\protect\hypertarget{_bookmark148}{}{}0x57 &
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
JUMPI
\end{quote}
\end{minipage} & 2 & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
0
\end{quote}
\end{minipage} & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
Conditionnellement modifier la programme compteur.
\end{quote}
\end{minipage} \\
\bottomrule
\end{longtable}

\emph{J} JUMPI

( \emph{\textbf{µ}} ) \textbf{\emph{µ} s} {[}0{]} si \textbf{\emph{µs
{[}} 1} {]} = 0

\begin{quote}
\emph{\textbf{µ}} pc + 1 autrement

Cette possède la effet de en écrivant mentionné valeur pour
\emph{\textbf{µ}} pc . Voir section
\protect\hyperlink{9._Execution_Model}{9.}

0x58 PC 0 1 Avoir la valeur de la programme compteur \emph{avant} pour
la incrément correspondant pour cette instruction.

\textbf{\emph{µs {[}} 0} {]} ≡ \emph{\textbf{µ}} pc

ÉTHERUM~: UN SÉCURISE DÉCENTRALISÉ GÉNÉRALISÉ TRANSACTION COMPTABLE
\textbf{BERLIN VERSION} 35

0x59 MSIZE 0 1 Avoir la Taille de actif Mémoire dans octets.

\textbf{\emph{µs {[}} 0} {]} ≡ 32 \emph{\textbf{µ}} je

0x5a GAZ 0 1 Avoir la montant de disponible gaz, y compris la
correspondant réduction pour la Coût de cette instruction.

\textbf{\emph{µs {[}} 0} {]} ≡ \emph{\textbf{µg}} \_

0x5b JUMPDEST 0 0 Marquer un valide destination pour saute.

Cette opération possède non effet sur machine Etat pendant exécution.
\end{quote}

\hypertarget{annuxe9es-60-annuxe9es-70-pousser-opuxe9rations-valeur-mnuxe9monique-ux3b4-ux3b1-la-description}{%
\section{\texorpdfstring{années 60 \& années 70~: Pousser Opérations
Valeur Mnémonique \emph{δ α} La
description}{années 60 \& années 70~: Pousser Opérations Valeur Mnémonique δ α La description}}\label{annuxe9es-60-annuxe9es-70-pousser-opuxe9rations-valeur-mnuxe9monique-ux3b4-ux3b1-la-description}}

\begin{quote}
0x60 PUSH1 0 1 Lieu 1 octet Objet sur pile.

\emph{\textbf{µ}} \textbf{s} {[}0{]} ≡ \emph{c} ( \emph{\textbf{µ}} p c
+ f 1)
\end{quote}

\begin{longtable}[]{@{}
  >{\raggedright\arraybackslash}p{(\columnwidth - 4\tabcolsep) * \real{0.33}}
  >{\raggedright\arraybackslash}p{(\columnwidth - 4\tabcolsep) * \real{0.33}}
  >{\raggedright\arraybackslash}p{(\columnwidth - 4\tabcolsep) * \real{0.33}}@{}}
\toprule
& \begin{minipage}[b]{\linewidth}\raggedright
\begin{quote}
Le octets sont lis dans doubler depuis la programme codes octets
déployer.

Le une fonction \emph{c} assure la octets défaut pour zéro si elles ou
ils étendre passé la limites. Le octet est aligné à droite (prend la le
plus bas important lieu dans gros endien).
\end{quote}
\end{minipage} & \\
\midrule
\endhead
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
0x61
\end{quote}
\end{minipage} & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
PUSH2
\end{quote}
\end{minipage} & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
0 1 Lieu 2 octets Objet sur pile.
\end{quote}
\end{minipage} \\
\bottomrule
\end{longtable}

\begin{quote}
. . .

\textbf{\emph{µs {[}} 0} {]} ≡ \emph{\textbf{c}} ( \emph{\textbf{µpc}}
\_ + 1) \emph{. . .} ( \emph{\textbf{µpc}} \_ + 2)

avec \emph{\textbf{c}} ( \emph{\textbf{x}} ) ≡ ( \emph{c} (
\emph{\textbf{x}} \textsubscript{0} ) \emph{, ..., c} ( \emph{\textbf{x}
\textsubscript{X }}\textsubscript{− 1} )) avec \emph{c} comme défini
comme au dessus de.

Le octets sont aligné à droite (prend la le plus bas important lieu dans
gros endien).

. .

0x7f PUSH32 0 1 Lieu 32 octets (plein mot) Objet sur pile.

\emph{\textbf{µs}} {[}0 \textbf{\emph{{]}} ≡} c ( \emph{\textbf{µpc}} \_
+ 1) \emph{. . .} ( \emph{\textbf{µpc}} \_ + 32) où \emph{\textbf{c}}
est défini comme au dessus de.

Le octets sont aligné à droite (prend la le plus bas important lieu dans
gros endien).
\end{quote}

\hypertarget{annuxe9es-80-reproduction-opuxe9rations}{%
\section{années 80~: Reproduction
Opérations}\label{annuxe9es-80-reproduction-opuxe9rations}}

\begin{longtable}[]{@{}
  >{\raggedright\arraybackslash}p{(\columnwidth - 8\tabcolsep) * \real{0.20}}
  >{\raggedright\arraybackslash}p{(\columnwidth - 8\tabcolsep) * \real{0.20}}
  >{\raggedright\arraybackslash}p{(\columnwidth - 8\tabcolsep) * \real{0.20}}
  >{\raggedright\arraybackslash}p{(\columnwidth - 8\tabcolsep) * \real{0.20}}
  >{\raggedright\arraybackslash}p{(\columnwidth - 8\tabcolsep) * \real{0.20}}@{}}
\toprule
\textbf{Valeur} & \begin{minipage}[b]{\linewidth}\raggedright
\begin{quote}
\textbf{Mnémonique}
\end{quote}
\end{minipage} & \begin{minipage}[b]{\linewidth}\raggedright
\begin{quote}
\emph{δ}
\end{quote}
\end{minipage} & \emph{α} & \begin{minipage}[b]{\linewidth}\raggedright
\begin{quote}
\textbf{La description}
\end{quote}
\end{minipage} \\
\midrule
\endhead
0x80 & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
DUP1
\end{quote}
\end{minipage} & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
1
\end{quote}
\end{minipage} & 2 & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
Dupliquer 1er pile Objet.
\end{quote}
\end{minipage} \\
0x81 & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
DUP2
\end{quote}
\end{minipage} & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
2
\end{quote}
\end{minipage} & 3 & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\textbf{\emph{µs {[}} 0} {]} ≡ \textbf{\emph{µs {[}} 0} {]}

Dupliquer 2e pile Objet.
\end{quote}
\end{minipage} \\
& & & & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\textbf{\emph{µs {[}} 0} {]} ≡ \textbf{\emph{µs {[}} 1} {]}
\end{quote}
\end{minipage} \\
\bottomrule
\end{longtable}

\begin{quote}
. ....

0x8f DUP16 16 17 Dupliquer 16e pile Objet.

\textbf{\emph{µs {[}} 0} {]} ≡ \textbf{\emph{µs} {[}} 15{]}
\end{quote}

\hypertarget{annuxe9es-90-uxe9changer-opuxe9rations}{%
\section{Années~90~: Échanger
Opérations}\label{annuxe9es-90-uxe9changer-opuxe9rations}}

\begin{longtable}[]{@{}
  >{\raggedright\arraybackslash}p{(\columnwidth - 8\tabcolsep) * \real{0.20}}
  >{\raggedright\arraybackslash}p{(\columnwidth - 8\tabcolsep) * \real{0.20}}
  >{\raggedright\arraybackslash}p{(\columnwidth - 8\tabcolsep) * \real{0.20}}
  >{\raggedright\arraybackslash}p{(\columnwidth - 8\tabcolsep) * \real{0.20}}
  >{\raggedright\arraybackslash}p{(\columnwidth - 8\tabcolsep) * \real{0.20}}@{}}
\toprule
\textbf{Valeur} & \begin{minipage}[b]{\linewidth}\raggedright
\begin{quote}
\textbf{Mnémonique}
\end{quote}
\end{minipage} & \begin{minipage}[b]{\linewidth}\raggedright
\begin{quote}
\emph{δ}
\end{quote}
\end{minipage} & \emph{α} & \begin{minipage}[b]{\linewidth}\raggedright
\begin{quote}
\textbf{La description}
\end{quote}
\end{minipage} \\
\midrule
\endhead
0x90 & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
SWAP1
\end{quote}
\end{minipage} & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
2
\end{quote}
\end{minipage} & 2 & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
Échanger 1er et 2e pile éléments.

\textbf{\emph{µs {[}} 0} {]} ≡ \textbf{\emph{µs {[}} 1} {]}

\textbf{\emph{µs {[}} 1} {]} ≡ \textbf{\emph{µs {[}} 0} {]}
\end{quote}
\end{minipage} \\
0x91 & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
SWAP2
\end{quote}
\end{minipage} & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
3
\end{quote}
\end{minipage} & 3 & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
Échanger 1er et 3ème pile éléments.
\end{quote}
\end{minipage} \\
\bottomrule
\end{longtable}

\begin{quote}
. . .

\textbf{\emph{µs {[}} 0} {]} ≡ \textbf{\emph{µs} {[}} 2{]}

\textbf{\emph{µs} {[}} 2{]} ≡ \textbf{\emph{µs {[}} 0} {]}

. .

0x9f SWAP16 17 17 Échangez la 1ère et la 17ème pile éléments.

\textbf{\emph{µs {[}} 0} {]} ≡ \textbf{\emph{µs} {[}} 16{]}

\textbf{\emph{µs} {[}} 16{]} ≡ \textbf{\emph{µs {[}} 0} {]}

ÉTHERUM~: UN SÉCURISE DÉCENTRALISÉ GÉNÉRALISÉ TRANSACTION COMPTABLE
\textbf{BERLIN VERSION} 36
\end{quote}

\hypertarget{a0s-enregistrement-opuxe9rations}{%
\section{a0s~: Enregistrement
Opérations}\label{a0s-enregistrement-opuxe9rations}}

\begin{quote}
Pour tout enregistrement opérations, la Etat monnaie est pour ajouter un
Additionnel Journal entrée sur pour la sous-état Journal séries:

\emph{A} \textbf{l} ≡ \emph{A} \textbf{\textsubscript{l}} · ( \emph{je}
\textsubscript{une} \emph{,} \textbf{t} \emph{, \textbf{µ }}\textbf{m}
{[} \textbf{\emph{µ} s} {[}0{]} \emph{. . .} ( \textbf{\emph{µ} s}
{[}0{]} + \textbf{\emph{µ} s} {[}1{]} − 1){]}) et pour mettre à jour la
Mémoire consommation compteur: \emph{\textbf{µ}} je ≡ \emph{M} (
\emph{\textbf{µ}} je \emph{, \textbf{µs {[} }}\textbf{0} {]} \emph{,
\textbf{µs {[} }}\textbf{1} {]})

Le entrée sujet séries, \textbf{t} , diffère par conséquent:
\end{quote}

\begin{longtable}[]{@{}
  >{\raggedright\arraybackslash}p{(\columnwidth - 8\tabcolsep) * \real{0.20}}
  >{\raggedright\arraybackslash}p{(\columnwidth - 8\tabcolsep) * \real{0.20}}
  >{\raggedright\arraybackslash}p{(\columnwidth - 8\tabcolsep) * \real{0.20}}
  >{\raggedright\arraybackslash}p{(\columnwidth - 8\tabcolsep) * \real{0.20}}
  >{\raggedright\arraybackslash}p{(\columnwidth - 8\tabcolsep) * \real{0.20}}@{}}
\toprule
\textbf{Valeur} & \begin{minipage}[b]{\linewidth}\raggedright
\begin{quote}
\textbf{Mnémonique}
\end{quote}
\end{minipage} & \emph{δ} & \emph{α} &
\begin{minipage}[b]{\linewidth}\raggedright
\begin{quote}
\textbf{La description}
\end{quote}
\end{minipage} \\
\midrule
\endhead
0xa0 & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
LOG0
\end{quote}
\end{minipage} & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
2
\end{quote}
\end{minipage} & 0 & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
Ajouter Journal record avec non les sujets.
\end{quote}
\end{minipage} \\
0xa1 & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
LOG1
\end{quote}
\end{minipage} & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
3
\end{quote}
\end{minipage} & 0 & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\textbf{t} ≡ ()

Ajouter Journal record avec une sujet.
\end{quote}
\end{minipage} \\
& & & & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\textbf{t} ≡ ( \textbf{\emph{µs} {[}} 2{]})
\end{quote}
\end{minipage} \\
\bottomrule
\end{longtable}

\begin{quote}
. ....

0xa4 LOG4 6 0 Ajouter Journal record avec quatre les sujets.

\textbf{t} ≡ ( \textbf{\emph{µs} {[}} 2{]} \emph{, \textbf{µs
}}\textbf{{[}} 3{]} \emph{, \textbf{µs }}\textbf{{[}} 4{]} \emph{,
\textbf{µs }}\textbf{{[}} 5{]})

ÉTHERUM~: UN SÉCURISE DÉCENTRALISÉ GÉNÉRALISÉ TRANSACTION COMPTABLE
\textbf{BERLIN VERSION} 37
\end{quote}

\hypertarget{f0s-systuxe8me-opuxe9rations}{%
\section{f0s~: Système opérations}\label{f0s-systuxe8me-opuxe9rations}}

\begin{quote}
\textbf{Valeur Mnémonique} \emph{δ α} \textbf{La description}

0xf0 CRÉER 3 1 Créer un Nouveau Compte avec associé code.

\textbf{je} ≡ \textbf{\emph{µ} m} {[} \textbf{\emph{µ} s} {[}1{]}
\emph{. . .} ( \textbf{\emph{µs {[}} 1} {]} + \textbf{\emph{µs} {[}}
2{]} − 1){]}

\href{/l}{\emph{ζ}} ≡ ∅

( \emph{\textbf{σ} , \textbf{µg} ,} \_ \emph{UN , z,} \textbf{o} ) ≡

   \protect\hyperlink{_bookmark44}{Λ (} \emph{\textbf{σ}}
\textsuperscript{∗} \emph{, UN, je} \textsubscript{un} \emph{, je}
\textsubscript{o} \emph{, L} ( \emph{\textbf{µ}} g ) \emph{, je}
\textsubscript{p} \emph{, \textbf{µs {[} }}\textbf{0} {]} \emph{,}
\textbf{je} \emph{, je} \textsubscript{e} + 1 \emph{, , \_ je}
\textsubscript{w} ) si \textbf{\emph{µs {[}} 0} {]} \emph{\textbf{σ}}
{[} \emph{je} \textsubscript{une} {]} \textsubscript{b}

  \emph{\textbf{σ} , \textbf{µg} ,} \_ \emph{UN,} 0 \emph{,} ()
autrement

\emph{\textbf{σ}} \textsuperscript{∗} ≡ \emph{\textbf{σ}} à l'exception
\emph{\textbf{σ}} \textsuperscript{∗} {[} \emph{je} une {]} n =
\emph{\textbf{σ}} {[} \emph{je} une {]} n + 1

\textbf{\emph{µs {[}} 0} {]} ≡x \emph{\_}

où \emph{X} = 0 si \emph{z} = 0, c'est à dire, la
\protect\hyperlink{_bookmark48}{Contrat création processus manqué,} ou
alors \emph{je} e = 1024

(la m axi m um appel profondeur J'imite \_ est atteint ) \_ ou alors
\textbf{\emph{µs {[}} 0} {]} \emph{\textgreater{} \textbf{σ }}{[}
\emph{je} \textsubscript{une} {]} \textsubscript{b} (solde de la
l'appelant est aussi bas pour remplir la valeur transférer); et sinon
\emph{x} = ADDR ( \emph{je} une \emph{, \textbf{σ }}{[} \emph{je} une
{]} n \emph{, ζ,} \textbf{je} ), la adresse de la nouvellement créé
Compte \protect\hyperlink{_bookmark45}{(86).}

\emph{\textbf{µ}} je ≡ \emph{M} ( \emph{\textbf{µ}} je \emph{,
\textbf{µs {[} }}\textbf{1} {]} \emph{, \textbf{µs }}\textbf{{[}} 2{]})

\textbf{\emph{µo} \_} ≡ ()

Ainsi la opérande Commande est: valeur, saisir décalage, saisir Taille.
\end{quote}

0xf1 APPEL 7 1 Message-appel dans un Compte.

( \emph{\textbf{σ} , g , UN , X,} \textbf{o} ) ≡

\begin{quote}
\protect\hyperlink{_bookmark47}{Θ (} \emph{\textbf{σ} , UN , je} un
\emph{, je} o \emph{, t, t, C} CALGAS ( \emph{\textbf{σ} , \textbf{µ} ,
A} ) \emph{,}

\emph{je} p \emph{, \textbf{µs }}\textbf{\textsubscript{{[}}} 2{]}
\emph{, \textbf{µs }}\textbf{\textsubscript{{[}}} 2{]} \emph{,}
\textbf{je} \emph{, je} e + 1 \emph{, je} w )

si \textbf{\emph{µs} {[}} 2{]} \emph{\textbf{σ}} {[} \emph{je}
\textsubscript{une} {]} \textsubscript{b} ∧

\emph{je} e \emph{\textless{}} 1024

( \emph{\textbf{σ} , g, UN,} 0 \emph{,} ()) sinon

\emph{n} ≡ min( \{ \textbf{\emph{µ} s} {[}6{]} \emph{,} ll \textbf{o}
ll\} )

\textbf{\emph{µ} m} {[} \textbf{\emph{µ} s} {[}5{]} \emph{. . .} (
\textbf{\emph{µs} {[}} 5{]} + \emph{n} − 1){]} = \textbf{o} {[}0 \emph{.
. .} ( \emph{n} − 1){]}

\textbf{\emph{µo} \_} = \textbf{o}

\emph{\textbf{µg}} \_ ≡ \emph{\textbf{µg}} \_ + \emph{g}

\textbf{\emph{µs {[}} 0} {]} ≡x \emph{\_}

\emph{Un} \textsuperscript{∗} ≡ \emph{UN} à l'exception \emph{Un}
\textsuperscript{∗} \textbf{\textsubscript{un}} ≡ \emph{Un}
\textbf{\textsubscript{un}} ∪ \{ \emph{t} \}

\emph{t} ≡ \emph{\textbf{µ}} {[}1{]} mode 2 \textsuperscript{160}

\emph{\textbf{µ}} je ≡ \emph{M} ( \emph{M} ( \emph{\textbf{µ}} je
\emph{, \textbf{µs }}{[}3{]} \emph{,} \textbf{µs {[}} 4{]}) \emph{,
\textbf{µs {[} }}\textbf{5} {]} \emph{, \textbf{µs }}\textbf{{[}} 6{]})

où \emph{X} = 0 si la \protect\hyperlink{_bookmark50}{code exécution
pour cette opération manqué,} ou alors si

\textbf{\emph{µs} {[}} 2{]} \emph{\textgreater{} \textbf{σ }}{[}
\emph{je} \textsubscript{une} {]} \textsubscript{b} (ne pas pas assez
fonds) ou alors \emph{je} \textsubscript{e} = 1024 (appel profondeur
limite atteint ) ; \_ \emph{X} = 1 sinon.

Ainsi la opérande Commande est: gaz, pour, valeur, dans décalage, dans
Taille, dehors décalage, dehors Taille.

\emph{C} CAL L ( \emph{\textbf{σ} , \textbf{µ} , A} ) ≡ \emph{C} G A f
SCA P ( \emph{\textbf{σ} , \textbf{µ} , A} ) + \emph{C} EXTR A (
\emph{\textbf{σ} , \textbf{µ} , A} )
\end{quote}

\emph{C} GASCAP

( \emph{\textbf{σ} , \textbf{µ} , A} ) min \{
\protect\hyperlink{_bookmark141}{\emph{L}} ( \emph{\textbf{µ}}
\textsubscript{g} − \emph{C} EXTRA ( \emph{\textbf{σ} , \textbf{µ} , A}
)) \emph{, \textbf{µs {[} }}\textbf{\textsubscript{0}} {]} \} si
\emph{\textbf{µg}} \textsubscript{\_} ≥ \emph{C} EXTRA (
\emph{\textbf{σ} , \textbf{µ} , A} )

\begin{quote}
\textbf{\emph{µs {[}} 0} {]} sinon

\emph{C} EXTR A ( \emph{\textbf{σ} , \textbf{µf} ,} \_ \emph{A} ) ≡
\protect\hyperlink{_bookmark140}{\emph{C} a accès s} ( \emph{t, A} ) +
\emph{C} XFE R ( \emph{\textbf{µ}} ) + \emph{C} NE W ( \emph{\textbf{σ}
, \textbf{µ }})
\end{quote}

\emph{C} NOUVEAU

( \emph{\textbf{σ} , \textbf{µ }}) \emph{G} nouveau compte si MORT (
\emph{\textbf{σ} , t} ) ∧ \textbf{\emph{µs} \textsubscript{{[} }}2{]} 0

\begin{quote}
0 sinon

0xf2 CODE APPEL 7 1 Message-appel dans cette Compte avec un alternative
comptes code.

Exactement équivalent pour APPEL à l'exception:
\end{quote}

( \emph{\textbf{σ} , g , UN , X,} \textbf{o} ) ≡

\begin{quote}
Θ ( \emph{\textbf{σ} , A} \textsuperscript{∗} \emph{, je} un \emph{, je}
o \emph{, je} un \emph{, t, C} CALGAS ( \emph{\textbf{µ}} ) \emph{,}

\emph{je} p \emph{, \textbf{µs }}\textbf{\textsubscript{{[}}} 2{]}
\emph{, \textbf{µs }}\textbf{\textsubscript{{[}}} 2{]} \emph{,}
\textbf{je} \emph{, je} e + 1 \emph{, je} w )

si \textbf{\emph{µs} {[}} 2{]} \emph{\textbf{σ}} {[} \emph{je}
\textsubscript{une} {]} \textsubscript{b} ∧

\emph{je} e \emph{\textless{}} 1024

( \emph{\textbf{σ} , g, UN,} 0 \emph{,} ()) sinon

Noter la monnaie dans la Quatrième paramètre pour la appel
\protect\hyperlink{_bookmark47}{Θ} depuis la 2e pile valeur
\textbf{\emph{µs {[}} \textsubscript{1 }}{]} (comme dans APPEL ) pour la
cadeau adresse \emph{je} un . Cette moyens que la destinataire est dans
fait la même Compte comme à cadeau, simplement que la code est écrasé.

\protect\hypertarget{_bookmark149}{}{}0xf3 RETOUR 2 0 Arrêt exécution
retour production Les données.

\emph{H} RETOUR ( \emph{\textbf{µ}} ) ≡ \textbf{\emph{µ}
\textsubscript{m }}{[} \textbf{\emph{µ} \textsubscript{s }}{[}0{]}
\emph{. . .} ( \textbf{\emph{µs {[}} \textsubscript{0 }}{]} +
\textbf{\emph{µs {[}} \textsubscript{1 }}{]} − 1){]}

Cette possède la effet de s'arrêter la exécution à cette indiquer avec
production défini.

Voir section \protect\hyperlink{9._Execution_Model}{9.}

\emph{\textbf{µ}} je ≡ \emph{M} ( \emph{\textbf{µ}} je \emph{,
\textbf{µs {[} }}\textbf{0} {]} \emph{, \textbf{µs {[} }}\textbf{1} {]})

ÉTHERUM~: UN SÉCURISE DÉCENTRALISÉ GÉNÉRALISÉ TRANSACTION COMPTABLE
\textbf{BERLIN VERSION} 38
\end{quote}

0xf4 DÉLÉGUÉ APPEL 6 1 Message-appel dans cette Compte avec un
alternative comptes code, mais

\begin{quote}
persistant la courant valeurs pour \emph{expéditeur} et \emph{valeur} .

Par rapport avec APPEL , APPEL DÉLÉGUÉ prend une moins de arguments. Le
omis argument est \emph{\textbf{µs}} {[}2{]} \textbf{.} Comme un
résultat, \textbf{\emph{µs} {[}} 3{]}, \textbf{\emph{µs} {[}} 4{]},
\textbf{\emph{µs} {[}} 5{]} et \textbf{\emph{µs} {[}} 6{]} dans la
définition de APPEL devrait respectivement être remplacé avec
\textbf{\emph{µs} {[}} 2{]}, \textbf{\emph{µs} {[}} 3{]},
\textbf{\emph{µs} {[}} 4{]} et \emph{\textbf{µs}} {[}5{]} \textbf{.}
Autrement ce est équivalent pour APPEL à l'exception:

   Θ( \emph{\textbf{σ} , A} \textsuperscript{∗} \emph{, je} suis
\emph{, je} o \emph{, je} un \emph{, t, C} CALLGA S ( \emph{\textbf{µ}}
) \emph{,}

si \emph{je}

\emph{\textless{}} 1024

( \emph{\textbf{σ} , g, UN,} 0 \emph{,} ()) sinon

Noter la changements (dans une addition pour que de la Quatrième
paramètre) pour la seconde et neuvième paramètres pour la appel
\protect\hyperlink{_bookmark47}{Θ.}

Cette moyens que la destinataire est dans fait la même Compte comme à
cadeau, simplement que la code est écrasé \emph{et} la le contexte est
presque entièrement identique.
\end{quote}

\begin{longtable}[]{@{}
  >{\raggedright\arraybackslash}p{(\columnwidth - 6\tabcolsep) * \real{0.25}}
  >{\raggedright\arraybackslash}p{(\columnwidth - 6\tabcolsep) * \real{0.25}}
  >{\raggedright\arraybackslash}p{(\columnwidth - 6\tabcolsep) * \real{0.25}}
  >{\raggedright\arraybackslash}p{(\columnwidth - 6\tabcolsep) * \real{0.25}}@{}}
\toprule
\begin{minipage}[b]{\linewidth}\raggedright
\begin{quote}
\protect\hypertarget{_bookmark150}{}{}0xf5
\end{quote}
\end{minipage} & \begin{minipage}[b]{\linewidth}\raggedright
\begin{quote}
CRÉER2
\end{quote}
\end{minipage} & \begin{minipage}[b]{\linewidth}\raggedright
\begin{quote}
4
\end{quote}
\end{minipage} & \begin{minipage}[b]{\linewidth}\raggedright
\begin{quote}
1 Créer un Nouveau Compte avec associé code. Exactement équivalent pour
CRÉER à l'exception:

Le sel \emph{ζ} ≡ \emph{\textbf{µs}} {[}3{]} \textbf{.}
\end{quote}
\end{minipage} \\
\midrule
\endhead
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
0xfa
\end{quote}
\end{minipage} & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
APPEL STATIQUE
\end{quote}
\end{minipage} & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
6
\end{quote}
\end{minipage} & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
1 Statique message-appel dans un Compte. Exactement équivalent pour
APPEL à l'exception:

Le argument \textbf{\emph{µs} {[}} 2{]} est remplacé avec 0.

Le Plus profond argument \textbf{\emph{µs} {[}} 3{]}, \textbf{\emph{µs}
{[}} 4{]}, \textbf{\emph{µs} {[}} 5{]} et \textbf{\emph{µs} {[}} 6{]}
sont respectivement remplacé avec \textbf{\emph{µs} {[}} 2{]},
\textbf{\emph{µs} {[}} 3{]}, \textbf{\emph{µs} {[}} 4{]} et
\emph{\textbf{µs}} {[}5{]} \textbf{.}

Le dernière argument de \protect\hyperlink{_bookmark47}{Θ} est ⊥ .
\end{quote}
\end{minipage} \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\protect\hypertarget{_bookmark151}{}{}0xfd
\end{quote}
\end{minipage} & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
REVENIR
\end{quote}
\end{minipage} & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
2
\end{quote}
\end{minipage} & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
0 Arrêt exécution revenant Etat changements mais retour Les données et
restant gaz. Le effet de cette opération est décrit dans
\protect\hyperlink{_bookmark55}{(143).}

Pour la gaz calcul, nous utiliser la Mémoire expansion une fonction,

\emph{\textbf{µ}} je ≡ \emph{M} ( \emph{\textbf{µ}} je \emph{,
\textbf{µs {[} }}\textbf{0} {]} \emph{, \textbf{µs {[} }}\textbf{1} {]})
\end{quote}
\end{minipage} \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
0xfe
\end{quote}
\end{minipage} & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
INVALIDE
\end{quote}
\end{minipage} & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
∅
\end{quote}
\end{minipage} & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
∅ Désigné invalide instruction.
\end{quote}
\end{minipage} \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\protect\hypertarget{_bookmark152}{}{}0xff
\end{quote}
\end{minipage} & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
AUTO-DESTRUCTION
\end{quote}
\end{minipage} & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
1
\end{quote}
\end{minipage} & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
0 Arrêt exécution et S'inscrire Compte pour plus tard effacement.
\end{quote}
\end{minipage} \\
\bottomrule
\end{longtable}

\begin{quote}
\emph{Un} \textbf{\textsubscript{s}} ≡ \emph{Un}
\textbf{\textsubscript{s}} ∪ \{ \emph{je} \textsubscript{un} \}

\emph{Un} \textbf{\textsubscript{un}} ≡ \emph{Un}
\textbf{\textsubscript{un}} ∪ \{ \emph{r} \}
\end{quote}

\emph{\textbf{σ}} {[} \emph{r} {]} ≡

\begin{quote}
( \emph{\textbf{σ}} {[} \emph{r} {]} \textsubscript{n} \emph{, \textbf{σ
}}{[} \emph{r} {]} \textsubscript{b} + \emph{\textbf{σ}} {[} \emph{je}
\textsubscript{une} {]} \textsubscript{b} \emph{, \textbf{σ }}{[}
\emph{r} {]} \textbf{\textsubscript{s}} \emph{, \textbf{σ }}{[} \emph{r}
{]} \textsubscript{c} ) si \emph{r} = \emph{je} \textsubscript{un}

 ( \emph{\textbf{σ}} {[} \emph{r} {]} n \emph{,} 0 \emph{, \textbf{σ
}}{[} \emph{r} {]} \textbf{s} \emph{, \textbf{σ }}{[} \emph{r} {]} c )
sinon

où \emph{r} = \emph{\textbf{µ}} {[}0{]} mode 2 \textsuperscript{160}

\emph{\textbf{σ}} {[} \emph{je} \textsubscript{une} {]}
\textsubscript{b} = 0

\emph{C} AUTODESTRUCTION
\end{quote}

( \emph{\textbf{σ} , \textbf{µ }}) ≡ \emph{g}

auto-destruction

\begin{quote}
+ 0 si \emph{r} ∈ \protect\hyperlink{_bookmark39}{\emph{Un} \textbf{un}}

\emph{G} coldaccountacces autrement

+ \textsubscript{Compte} \emph{G} \textsubscript{ne w \_ \_} si MORT (
\emph{\textbf{σ} , r} ) ∧ \emph{\textbf{σ}} {[} \emph{je}
\textsubscript{une} {]} \textsubscript{b} = 0

0 sinon

annexe JE. Genèse Bloc

\protect\hypertarget{_bookmark153}{}{}Le genèse bloc est 15 éléments, et
est spécifié Donc:

(331) 0 256 \emph{,} KEC RLP () \emph{,} 0 160 \emph{, étatRoot,} 0
\emph{,} 0 \emph{,} 0 2048 \emph{,} 2 34 \emph{,} 0 \emph{,} 0 \emph{,}
3141592 \emph{, temps,} 0 \emph{,} 0 256 \emph{,} KEC (42) \emph{,} ()
\emph{,} ()

Où 0~256 fait référence au hachage parent, un hachage de 256~bits
composé uniquement de zéros~; 0 160 fait référence à l'adresse du
bénéficiaire, un 160 bits hachage composé uniquement de zéros~; 0 2048
fait référence à la floraison du journal, 2048 bits de tous les zéros~;
2 \textsuperscript{34} fait référence à la difficulté; l'essai de
transaction racine, racine de trie de réception, gaz utilisé, numéro de
bloc et données supplémentaires sont tous deux 0, ce qui équivaut au
tableau d'octets vide. Le séquences de tous les deux ommers et
transactions sont vider et représentée par (). KEC (42) réf rs pour e e
Keccak-256 hacher de

La série de preuves de concept comprend une prémine de développement,
faisant du hachage de la racine d'état une valeur \emph{stateRoot} .
Aussi \emph{time} sera défini sur l'horodatage initial du bloc de
genèse. La documentation la plus récente doit être consultée pour ceux
valeurs.

ÉTHERUM~: UN SÉCURISE DÉCENTRALISÉ GÉNÉRALISÉ TRANSACTION COMPTABLE
\textbf{BERLIN VERSION} 39

\protect\hypertarget{Appendix_J._Ethash}{}{}annexe J Éthash
\end{quote}

\begin{enumerate}
\def\labelenumi{\arabic{enumi}.}
\item
  \textbf{Définitions.} Nous employer la Suivant définitions~: Nom
  ValeurDescription
\end{enumerate}

\begin{quote}
\emph{J} \textsubscript{motoctets} 4 octets en mot.

\protect\hypertarget{_bookmark156}{}{}\emph{J}
\textsubscript{datasetinit} 2 \textsuperscript{30} octets dans base de
données à genèse. \emph{J} \textsubscript{datasetgrowth} 2
\textsuperscript{23 Croissance de l'ensemble de} données par époque.
\protect\hypertarget{_bookmark155}{}{}\emph{J} \textsubscript{cacheinit}
2 \textsuperscript{24} octets dans cache à la genèse. \emph{J}
\textsubscript{cachecroissance} 2 \textsuperscript{17} Croissance du
cache par époque.
\end{quote}

\begin{longtable}[]{@{}
  >{\raggedright\arraybackslash}p{(\columnwidth - 4\tabcolsep) * \real{0.33}}
  >{\raggedright\arraybackslash}p{(\columnwidth - 4\tabcolsep) * \real{0.33}}
  >{\raggedright\arraybackslash}p{(\columnwidth - 4\tabcolsep) * \real{0.33}}@{}}
\toprule
\begin{minipage}[b]{\linewidth}\raggedright
\begin{quote}
\protect\hypertarget{_bookmark157}{}{}\emph{J} époque
\end{quote}
\end{minipage} & \begin{minipage}[b]{\linewidth}\raggedright
\begin{quote}
30000
\end{quote}
\end{minipage} & \begin{minipage}[b]{\linewidth}\raggedright
\begin{quote}
Blocs par époque.
\end{quote}
\end{minipage} \\
\midrule
\endhead
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\emph{J} mixbytes
\end{quote}
\end{minipage} & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
128
\end{quote}
\end{minipage} & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
mélanger longueur dans octets.
\end{quote}
\end{minipage} \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\emph{J} octets de hachage
\end{quote}
\end{minipage} & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
64
\end{quote}
\end{minipage} & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
Hacher longueur dans octets.
\end{quote}
\end{minipage} \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\emph{J} parents
\end{quote}
\end{minipage} & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
256
\end{quote}
\end{minipage} & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
Numéro de parents de chaque base de données élément.
\end{quote}
\end{minipage} \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
Tours de cache \emph{J}
\end{quote}
\end{minipage} & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
3
\end{quote}
\end{minipage} & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
Numéro de Les manches dans cache production.
\end{quote}
\end{minipage} \\
\begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
\emph{J} accède
\end{quote}
\end{minipage} & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
64
\end{quote}
\end{minipage} & \begin{minipage}[t]{\linewidth}\raggedright
\begin{quote}
Numéro de accède dans hashimoto boucle.
\end{quote}
\end{minipage} \\
\bottomrule
\end{longtable}

\begin{enumerate}
\def\labelenumi{\arabic{enumi}.}
\setcounter{enumi}{1}
\item
  \begin{quote}
  \textbf{Taille de base de données et cache.} Le Taille pour d'Ethash
  cache \textbf{c} ∈ B et base de données \textbf{ré} ∈ B dépendre sur
  la époque, qui dans tourner dépend sur la bloc Numéro.
  \end{quote}
\end{enumerate}

\begin{quote}
(332) \emph{E} ( \emph{H} ) = \underline{\emph{Salut} \_}

La taille de la croissance du jeu de données par \emph{J}
\textsubscript{datasetgrowth} octets, et la taille du cache par \emph{J}
\textsubscript{cachegrowth} octets, chaque époque. Dans Afin d'éviter
une régularité conduisant à un comportement cyclique, la taille doit
être un nombre premier. La taille est donc réduite d'un multiple de
\emph{J} \textsubscript{mixbytes} , pour le jeu de données, et \emph{J}
\textsubscript{hashbytes} pour le cache. Soit \emph{d}
\textsubscript{taille} = ll \textbf{d} ll soit la taille de l'ensemble
de données. Lequel est calculé en utilisant
\end{quote}

\begin{enumerate}
\def\labelenumi{(\arabic{enumi})}
\setcounter{enumi}{332}
\item
  taille \emph{d} = \emph{E} prime ( \emph{J} datasetinit + Croissance
  du jeu de données \emph{J} · \emph{E} époque − \emph{J} mixbytes
  \emph{, J} mixbytes )
\end{enumerate}

\begin{quote}
Le Taille de la cachette, taille \emph{c} , est calculé en utilisant
\end{quote}

\begin{enumerate}
\def\labelenumi{(\arabic{enumi})}
\setcounter{enumi}{333}
\item
  \begin{quote}
  taille \emph{C} = \emph{E} prime ( \emph{J} cacheinit + Croissance du
  cache \emph{J} · \emph{E} époque − \emph{J octets de} hachage \emph{,
  J} octets de hachage )
  \end{quote}
\item
  \begin{quote}
  \emph{E}
  \end{quote}
\end{enumerate}

prime

( \emph{x, y} ) = \emph{x} si \emph{x/y} ∈ N

\begin{quote}
\emph{E} premier ( \emph{x} − 2 · \emph{y, y} ) autrement
\end{quote}

\begin{enumerate}
\def\labelenumi{\arabic{enumi}.}
\item
  \begin{quote}
  \textbf{Base de données génération.} Dans Commande pour produire la
  base de données nous avoir besoin la cache \textbf{c} , qui est un
  déployer de octets. Ce dépend sur la cache Taille taille \emph{C} et
  la la graine hacher \textbf{s} ∈ B 32 .
  \end{quote}

  \begin{enumerate}
  \def\labelenumii{\arabic{enumii}.}
  \item
    \emph{Hachage de graines.} Le hachage de graines est différent pour
    chaque époque. Pour la première époque c'est le hachage Keccak-256
    d'une série de 32 octets de des zéros. Pour tous autre époque ce est
    toujours la Keccak-256 hacher de la précédent la graine hacher:
  \end{enumerate}
\end{enumerate}

\begin{enumerate}
\def\labelenumi{(\arabic{enumi})}
\setcounter{enumi}{335}
\item
  \begin{quote}
  \textbf{s} = \emph{C} \textsubscript{seedhash} ( \emph{H}
  \textsubscript{i} )
  \end{quote}
\item
  \begin{quote}
  \emph{C} seedhash
  \end{quote}
\end{enumerate}

( \emph{H} ) = f \textbf{0} \textsubscript{32} si \emph{Ep}
\textsubscript{o c h} ( \emph{H} \textsubscript{je} ) \textsubscript{\_
\_} = 0

\begin{quote}
Avec \textbf{0} 32 être 32 octets de des zéros.

KEC ( \emph{C} \textsubscript{seedhas h} ( \emph{H} \textsubscript{i} −
\emph{J} \textsubscript{e p o c h} )) autrement
\end{quote}

\begin{enumerate}
\def\labelenumi{\arabic{enumi}.}
\item
  \emph{Cachette.} Le processus de production de cache consiste à
  utiliser le hachage de départ pour d'abord remplir séquentiellement
  des octets de taille \emph{c de} Mémoire, alors effectuer
  \textsubscript{Tours de cache} \emph{J} passe de la RandMemoHash
  algorithme créé par \protect\hyperlink{_bookmark85}{Lerner {[}2014}
  {]}. Le initial cache \textbf{c} , être un déployer de tableaux de
  Célibataire octets, sera être construit comme suit.
\end{enumerate}

\begin{quote}
Nous définir la déployer \textbf{c} \emph{je} , qui consiste de 64
Célibataire octets, comme la \emph{je} e élément de la initial cache~:
\end{quote}

\begin{enumerate}
\def\labelenumi{(\arabic{enumi})}
\setcounter{enumi}{337}
\item
  \begin{quote}
  \textbf{c} \emph{je}
  \end{quote}
\end{enumerate}

\begin{quote}
Donc \textbf{c} pouvez être défini comme
\end{quote}

= KEC512 ( \textbf{s} ) si \emph{je} = 0

KEC512 ( \textbf{c} \emph{je} − 1 ) autrement

\begin{enumerate}
\def\labelenumi{(\arabic{enumi})}
\setcounter{enumi}{338}
\item
  \begin{quote}
  \textbf{c} {[} \emph{je} {]} = \textbf{c} \emph{je} ∀ \emph{je
  \textless{} n}
  \end{quote}
\item
  \begin{quote}
  \emph{n} = \underline{taille \emph{C}}
  \end{quote}
\end{enumerate}

\begin{quote}
\emph{J} octets de hachage

Le cache est calculé par effectuer \textsubscript{Tours de cache}
\emph{J} Les manches de la RandMemoHash algorithme pour la initial cache
\textbf{c} :
\end{quote}

\begin{enumerate}
\def\labelenumi{(\arabic{enumi})}
\setcounter{enumi}{340}
\item
  \begin{quote}
  \textbf{c} = \emph{E} rondes de cache ( \textbf{c} \emph{, J} tours de
  cache )
  \end{quote}
\item
  \begin{quote}
  \emph{E tours de} \textsubscript{cache} ( \textbf{x} \emph{, y} ) =
  \end{quote}
\end{enumerate}

\begin{quote}
\emph{E} RMH ( \textbf{x} ) si \emph{y} = 1

  \emph{E} \textsubscript{ca c heround s} ( \emph{E} \textsubscript{RM
H} ( \textbf{x} ) \emph{, y} − 1) autrement

ÉTHERUM~: UN SÉCURISE DÉCENTRALISÉ GÉNÉRALISÉ TRANSACTION COMPTABLE
\textbf{BERLIN VERSION} 40

Où un Célibataire tour modifie chaque sous-ensemble de la cache comme
suit :

(343) \emph{E} \textsubscript{RMH} ( \textbf{x} ) = \emph{E}
\textsubscript{rmh} ( \textbf{x} \emph{,} 0) \emph{, E}
\textsubscript{rmh} ( \textbf{x} \emph{,} 1) \emph{, , E}
\textsubscript{rmh} ( \textbf{x} \emph{, n} − 1)

(344) \emph{E} \textsubscript{rmh} ( \textbf{x} \emph{, je} ) = KEC512 (
\textbf{x} {[}( \emph{je} − 1 + \emph{n} ) mode \emph{n} {]} ⊕
\textbf{X} {[} \textbf{x} {[} \emph{je} {]}{[}0{]} mode \emph{n} {]})

avec \textbf{X} = \textbf{X} à l'exception \textbf{X} {[} \emph{j} {]} =
\emph{E} \textsubscript{rmh} ( \textbf{x} \emph{, j} ) ∀ \emph{j
\textless{} je}
\end{quote}

\begin{enumerate}
\def\labelenumi{\arabic{enumi}.}
\item
  \protect\hypertarget{_bookmark158}{}{}\emph{Plein base de données
  calcul.} Essentiellement, nous combiner Les données depuis \emph{J}
  parents pseudo-aléatoire choisi cache nœuds, et hacher que pour
  calculer la base de données. Le entier base de données est alors
  généré par un Numéro de éléments, chaque \emph{J}
  \textsubscript{octets de hachage} octets dans Taille:
\end{enumerate}

\begin{quote}
(345) \textbf{ré} {[} \emph{je} {]} = \emph{E} \textsubscript{élément de
jeu de données} ( \textbf{c} \emph{, je} ) ∀ \emph{je \textless{}}

\underline{taille \emph{d}}

octets de hachage

Dans Commande pour calculer la Célibataire Objet nous utiliser un
algorithme inspiré par la FNV hacher
\protect\hyperlink{_bookmark97}{(Glenn Chasseur {[}1991{]})} dans
quelques cas comme un non associatif remplaçant pour XOR.

(346) \emph{E} ( \textbf{x} \emph{,} \textbf{y} ) = ( \textbf{x} ·
(0x01000193 ⊕ \textbf{y} )) mode 2 \textsuperscript{32}

Le Célibataire Objet de la base de données pouvez à présent être calculé
comme:
\end{quote}

\begin{enumerate}
\def\labelenumi{(\arabic{enumi})}
\setcounter{enumi}{346}
\item
  \emph{E} \textsubscript{ensemble de données m} ( \textbf{c} \emph{,
  je} ) = \emph{É} \textsubscript{pare n t s} ( \textbf{c} \emph{, je,}
  − 1 \emph{,} ∅ )
\item
  \begin{quote}
  \emph{E}
  \end{quote}
\end{enumerate}

parents

( \textbf{c} \emph{, je, p,} \textbf{m} ) = \emph{E} parents (
\textbf{c} \emph{, je, p} + 1 \emph{, E} mix ( \textbf{m} \emph{,}
\textbf{c} \emph{, je, p} + 1)) si \emph{p \textless{} J} parents − 2

\begin{quote}
\emph{E} mix ( \textbf{m} \emph{,} \textbf{c} \emph{, je, p} + 1) sinon

f KEC512 ( \textbf{c} {[} \emph{je} mod \_ \_ \emph{c} taille e {]} ⊕
\emph{je} ) si \emph{p} = 0
\end{quote}

\begin{enumerate}
\def\labelenumi{\arabic{enumi}.}
\item
  \begin{quote}
  \textbf{Fonction de preuve de travail.} Essentiellement, nous
  maintenons un "mix" \emph{J} \textsubscript{mixbytes} octets de large,
  et récupérer séquentiellement à plusieurs reprises \emph{J}
  \textsubscript{mixbytes} octets du jeu de données complet et utilisez
  la fonction \emph{E} \textsubscript{FNV} pour le combiner avec le mix.
  \emph{J} \textsubscript{mixbytes} octets séquentiels accéder sont
  utilisé alors que chaque tour de la algorithme toujours extractions un
  plein page depuis RAM, minimiser Traduction regarder de côté amortir
  manque qui ASIC voudrais théoriquement être capable pour éviter de.
  \end{quote}
\end{enumerate}

\begin{quote}
Si la production de cette algorithme est au dessous de la voulu cibler,
alors la nonce est valide. Noter que la En plus application de KEC à la
fin assure qu'il existe un nonce intermédiaire qui peut être fourni pour
prouver qu'au moins un petit la quantité de travail a été effectuée;
cette vérification PoW externe rapide peut être utilisée à des fins
anti-DDoS. Il sert également à fournir statistique assurance que la
résultat est un impartial, 256 bit Numéro.

Le Fonction PoW Retour un déployer avec la comprimé mélanger comme son
première Objet et la Keccak-256 hacher de la enchaînement de la comprimé
mélanger avec la la graine hacher comme la seconde Objet:

(350)

PoW ( \emph{H} n \emph{, H} \textsubscript{n} \emph{,} \textbf{ré} ) =
\{ \textbf{m} \textsubscript{c} ( KEC ( RLP ( \emph{L} \textsubscript{H}
( \emph{H} n ))) \emph{, H} \textsubscript{n} \emph{,} \textbf{d} )
\emph{,} KEC ( \textbf{s} \textsubscript{h} ( KEC ( RLP ( \emph{L}
\textsubscript{H} ( \emph{H} n ))) \emph{, H} \textsubscript{n} ) +
\textbf{m} \textsubscript{c} ( KEC ( RLP ( \emph{L} \textsubscript{H} (
\emph{H} n ))) \emph{, H} \textsubscript{n} \emph{,} \textbf{d} )) \}

Avec \emph{H} n être la hacher de la entête sans pour autant la nonce.
Le comprimé mélanger \textbf{m} c est obtenu comme suit :

\emph{n} mélanger
\end{quote}

\begin{enumerate}
\def\labelenumi{(\arabic{enumi})}
\setcounter{enumi}{350}
\item
  \textbf{m} \textsubscript{c} ( \textbf{h} \emph{,} \textbf{n} \emph{,}
  \textbf{ré} ) = \emph{E} \textsubscript{compresse} ( \emph{E}
  \textsubscript{accède s} ( \textbf{d} \emph{,} \textsubscript{\_}
  \textbf{s} \textsubscript{h} ( \textbf{h} \emph{,} \textbf{n} )
  \emph{,} \textbf{s} \textsubscript{h} ( \textbf{h} \emph{,} \textbf{n}
  ) \emph{,} − 1) \emph{,} − 4)
\end{enumerate}

\begin{quote}
\emph{je} =0

Le la graine hacher être:
\end{quote}

\begin{enumerate}
\def\labelenumi{(\arabic{enumi})}
\setcounter{enumi}{351}
\item
  \begin{quote}
  \textbf{s} \textsubscript{h} ( \textbf{h} \emph{,} \textbf{n} ) =
  KEC512 ( \textbf{h} + \emph{E} \textsubscript{re v e r t} ( \textbf{n}
  )) \emph{E} revert ( \textbf{n} ) Retour la inversé octets séquence de
  la nonce \textbf{n} :
  \end{quote}
\item
  \begin{quote}
  \emph{E} re v er t ( \textbf{n} ){[} \emph{i} {]} = \textbf{n} {[} ll
  \textbf{n} ll − \emph{je} {]}
  \end{quote}
\end{enumerate}

\begin{quote}
Nous Remarque que la Opérateur "+" entre deux octet séquences résultats
dans la enchaînement de tous les deux séquences.

Le base de données \textbf{ré} est obtenu comme décrit dans section
\protect\hyperlink{_bookmark158}{J.3.3.} Le Numéro de répliqué séquences
dans la mélanger est:
\end{quote}

\begin{enumerate}
\def\labelenumi{(\arabic{enumi})}
\setcounter{enumi}{353}
\item
  \begin{quote}
  \emph{n}
  \end{quote}
\end{enumerate}

mélanger

\begin{quote}
= \underline{\emph{J} mixbytes}

octets de hachage

Dans Commande pour ajouter Aléatoire base de données nœuds pour la
mélanger, la \emph{E} accède une fonction est utilisé:
\end{quote}

\begin{enumerate}
\def\labelenumi{(\arabic{enumi})}
\setcounter{enumi}{354}
\item
  \begin{quote}
  \emph{E}
  \end{quote}
\end{enumerate}

accède

( \textbf{ré} \emph{,} \textbf{moi} \emph{,} \textbf{s} \emph{, je} ) =
\emph{E} mixdataset ( \textbf{d} \emph{,} \textbf{moi} \emph{,}
\textbf{s} \emph{, je} ) si \emph{je} = \emph{J} accède − 2

\begin{quote}
\emph{E} \textsubscript{accède à} ( \emph{E} \textsubscript{mixdataset}
( \textbf{d} \emph{,} \textbf{moi} \emph{,} \textbf{s} \emph{, je} )
\emph{,} \textbf{s} \emph{, je} + 1) autrement
\end{quote}

\begin{enumerate}
\def\labelenumi{(\arabic{enumi})}
\setcounter{enumi}{355}
\item
  \begin{quote}
  \emph{E} \textsubscript{mixdataset} ( \textbf{d} \emph{,} \textbf{moi}
  \emph{,} \textbf{s} \emph{, je} ) = \emph{E} \textsubscript{FNV} (
  \textbf{m} \emph{, E} \textsubscript{nouvelledonnée} ( \textbf{d}
  \emph{,} \textbf{moi} \emph{,} \textbf{s} \emph{, je} )) \emph{E}
  \textsubscript{nouvelles données} Retour un déployer avec \emph{n}
  \textsubscript{mélanger} éléments:
  \end{quote}
\item
  \begin{quote}
  \emph{E} ( \textbf{ré} \emph{,} \textbf{moi} \emph{,} \textbf{s}
  \emph{, je} ){[} \emph{j} {]} = \textbf{ré} {[} \emph{E} ( \emph{je} ⊕
  \textbf{s} {[}0{]} \emph{,} \textbf{m} {[} \emph{je} mode
  \underline{\emph{J} mixbytes} {]}) mode \underline{\emph{d} taille
  \emph{/J} octets de hachage} · \emph{n}
  \end{quote}
\end{enumerate}

\begin{quote}
+ \emph{j} {]} ∀ \emph{j \textless{} n}

ÉTHERUM~: UN SÉCURISE DÉCENTRALISÉ GÉNÉRALISÉ TRANSACTION COMPTABLE
\textbf{BERLIN VERSION} 41

Le mélanger est comprimé comme suit :
\end{quote}

\begin{enumerate}
\def\labelenumi{(\arabic{enumi})}
\setcounter{enumi}{357}
\item
  \begin{quote}
  \emph{E}
  \end{quote}
\end{enumerate}

compresse

( \textbf{moi} \emph{, je} ) = \textbf{moi} si \emph{je} ;;: ll
\textbf{m} ll − 8

\begin{quote}
\emph{E} compresser ( \emph{E} FNV ( \emph{E} FNV ( \emph{E} FNV (
\textbf{m} {[} \emph{i} + 4{]} \emph{,} \textbf{m} {[} \emph{je} + 5{]})
\emph{,} \textbf{m} {[} \emph{je} + 6{]}) \emph{,} \textbf{m} {[}
\emph{je} + 7{]}) \emph{, je} + 8) autrement

annexe K Anomalies sur la Principale Réseau

K.1. \textbf{Suppression d'un compte malgré la panne d'essence.} Au bloc
2675119, dans la transaction 0xcf416c536ec1a19ed1fb89e
4ec7ffb3cf73aa413b3aa9b77d60e4fd81a4296ba, un compte à l'adresse 0x03 a
été appelé et une panne de gaz s'est produite pendant l'appel. Contre
l'équation \protect\hyperlink{_bookmark120}{(207),} cela a ajouté 0x03
dans l'ensemble des adresses touchées, et cette transaction est devenue
\emph{\textbf{σ}} {[}0 \emph{x} 03{]} dans ∅ .

annexe L Lister de mathématique symboles

Symbole Latex Commande La description

\textbackslash bigvee Ceci est la moins plus haut lié, suprême, ou alors
rejoindre de tout éléments exploité sur. Ainsi ce est la le plus grand
élément de tel éléments \protect\hyperlink{_bookmark88}{(Davey et
Priestley {[}2002} {]}).
\end{quote}

\end{document}
